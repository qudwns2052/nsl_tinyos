<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:TestRPLAppC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f2e24130"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f2715020"/></to>
    </wire>
    <wire loc="63:TestRPLAppC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f2e1eac0"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e48560"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e48560"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e41d20"/></to>
    </wire>
    <wire loc="64:TestRPLAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f2e185b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f144d800"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:TestRPLAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f35f2e0f5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f35f144e600"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:TestRPLAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f35f2e065f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f35f144de10"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f35f144de10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f35f13ddd60"/></to>
    </wire>
    <wire loc="69:TestRPLAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f35f2ed3750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f35f30f5220"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f35f30f5220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f35f2f37590"/></to>
    </wire>
    <wire loc="70:TestRPLAppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f2e958b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f1e4b510"/></to>
    </wire>
    <wire loc="50:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f1e4b510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f1510440"/></to>
    </wire>
    <wire loc="71:TestRPLAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f2ebf0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dbe2a0"/></to>
    </wire>
    <wire loc="72:TestRPLAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7f35f2eb4820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f2b54640"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2b54640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:TestRPLAppC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f35f2ea06b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f35f283b320"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f35f283b320"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f35f2755a10"/></to>
    </wire>
    <wire loc="74:TestRPLAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f35f2e9c9f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f35f283c080"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f35f283c080"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f35f2756880"/></to>
    </wire>
    <wire loc="75:TestRPLAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f35f2e9ad90"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f283c9e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f283c9e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f2755270"/></to>
    </wire>
    <wire loc="78:TestRPLAppC.nc">
      <from><interface-ref name="RPLUDP" scoped="" ref="0x7f35f2e8fa20"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f35f10a8690"/></to>
    </wire>
    <wire loc="15:../../../tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f35f10a8690"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f35f10a4460"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:TestRPLAppC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f35f2e2cb50"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f35f1f3a020"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f35f1f3a020"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f35f1e884b0"/></to>
    </wire>
    <wire loc="80:TestRPLAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2eb1c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f29a5020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f29a5020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:TestRPLAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f35f2e37b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f35f29944e0"/></to>
    </wire>
    <wire loc="49:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0f6b5a0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0f95cc0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f109e8b0"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0405ca0"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f13d8540"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0502900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0523620"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0536900"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f055e690"/></to>
    </wire>
    <wire loc="48:../../../tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0572af0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f15fedd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f1687b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f16a6430"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f1802620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f18f8020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f25e37e0"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f1c78720"/></to>
    </wire>
    <wire loc="103:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f07b3a40"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f2368020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f268e610"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f26d1c50"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f299ba90"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f2b43400"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f35f2f37c00"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f35f35ed3a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f35f35ed3a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f35f3197140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f35f2f2b6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f30f8700"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f30f8700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f30f2910"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f2f2bdc0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f35f30ef060"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f35f30d1020"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f35f30d1020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f30ce020"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f35f30ef740"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f30f1c70"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f35f30efe20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f2d96e50"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f30ce020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f30b9cb0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f35f30c76c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f35f30b73d0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f35f326f4c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f35f30b6680"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f35f30735a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2fb06d0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f35f3061020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2fa8b30"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f35f306a700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2fb5160"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f35f304ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2f8fcb0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f35f3071aa0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2fb6480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f35f3055020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2f8f020"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f35f304ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2f77cb0"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f35f305c5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2f88220"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f35f3074b10"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f30059d0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f35f3050a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2f9e2f0"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f35f30573e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2f9f610"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f35f30605a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2fa0220"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f35f3069700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2fae7a0"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f35f304da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2f862f0"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f35f305fbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2f986d0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f35f3070890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2fafac0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f35f3084060"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f3013540"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f35f3055da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2f87610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f35f307a0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2fb7020"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f35f305ba50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2f816d0"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f35f30646d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2fbda90"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f35f304fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2f967a0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f35f306ccf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2fbfde0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f35f30561f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2f97ac0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f35f304ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2f7f7a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f35f305d0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2f91b30"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f35f3053b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2f80ac0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f35f3051a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2fa6cb0"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f35f3052a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2f77020"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f35f3058570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f35f2fa6020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f35f3059020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f35f2f79b30"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f35f3011450"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f3012d80"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f35f3011aa0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f35f2f72a90"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f35f3010120"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f35f2f6f260"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2fbc930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f3013540"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2fba020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f3012d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2fb4020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f3013540"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2fb37a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f3012d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2fac610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f3013540"/></to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2fabc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f3012d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f35f300a2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f35f300a940"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f35f2f6f9f0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f35f3008020"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f35f2f6e240"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2fa5b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2fa32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2f9c160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2f9b7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2f95610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="144:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2f94c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2f8eb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2f8b2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2f85160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2f847a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2f7e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2f7cc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2f76b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f35f2f742f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f3195040"/></to>
    </wire>
    <wire loc="55:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f35f318f490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f35f35843b0"/></to>
    </wire>
    <wire loc="224:TestRPLC.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f35f2ddd5c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f2d96e50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f2dc1c30"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f35f2db6910"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f35f2dbf790"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f35f2dbf790"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2b7e020"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f35f2dbbb10"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f35f2d989c0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f35f2d989c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2b6ab90"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f35f2dbae30"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f35f2d97ce0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f35f2d97ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2b65710"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2b6d2f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f35f2d3e200"/></to>
    </wire>
    <wire loc="486:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f35f2d3e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c1b740"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2b69de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f35f2d3c200"/></to>
    </wire>
    <wire loc="487:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f35f2d3c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c15100"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2b63930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f35f2d3a200"/></to>
    </wire>
    <wire loc="488:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f35f2d3a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c11d10"/></to>
    </wire>
    <wire loc="442:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f35f2d7f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2cb4100"/></to>
    </wire>
    <wire loc="455:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f35f2d6b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c84d10"/></to>
    </wire>
    <wire loc="531:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f35f2d21560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c76d10"/></to>
    </wire>
    <wire loc="551:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f35f2cfd570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bea100"/></to>
    </wire>
    <wire loc="532:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f35f2d1f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c71740"/></to>
    </wire>
    <wire loc="460:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f35f2d67020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c7a100"/></to>
    </wire>
    <wire loc="473:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f35f2d52200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c4be00"/></to>
    </wire>
    <wire loc="497:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f35f2d2e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bf5d10"/></to>
    </wire>
    <wire loc="535:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f35f2d19580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c68d10"/></to>
    </wire>
    <wire loc="545:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f35f2d09570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c07100"/></to>
    </wire>
    <wire loc="557:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f35f2cf4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2be6d10"/></to>
    </wire>
    <wire loc="445:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f35f2d79020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2ca5100"/></to>
    </wire>
    <wire loc="536:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f35f2d17580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c63740"/></to>
    </wire>
    <wire loc="450:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f35f2d75020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c9c740"/></to>
    </wire>
    <wire loc="463:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f35f2d61020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c6c100"/></to>
    </wire>
    <wire loc="476:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f35f2d4c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c3cd10"/></to>
    </wire>
    <wire loc="489:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f35f2d38200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c0c740"/></to>
    </wire>
    <wire loc="500:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f35f2d28200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2be6d10"/></to>
    </wire>
    <wire loc="440:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f35f2d83020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2cbed10"/></to>
    </wire>
    <wire loc="453:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f35f2d6f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c8e860"/></to>
    </wire>
    <wire loc="466:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f35f2d5b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c5d100"/></to>
    </wire>
    <wire loc="530:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f35f2d23580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c76d10"/></to>
    </wire>
    <wire loc="548:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f35f2d03570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bf9100"/></to>
    </wire>
    <wire loc="555:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f35f2cf7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2be6d10"/></to>
    </wire>
    <wire loc="541:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f35f2d0f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c20d10"/></to>
    </wire>
    <wire loc="471:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f35f2d57020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c54a60"/></to>
    </wire>
    <wire loc="484:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f35f2d42200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c24100"/></to>
    </wire>
    <wire loc="495:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f35f2d32200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bfe740"/></to>
    </wire>
    <wire loc="549:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f35f2d01570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bf5d10"/></to>
    </wire>
    <wire loc="538:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f35f2d15570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c2ed10"/></to>
    </wire>
    <wire loc="443:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f35f2d7d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2cb0d10"/></to>
    </wire>
    <wire loc="456:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f35f2d69020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c7f740"/></to>
    </wire>
    <wire loc="493:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f35f2d36200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c07100"/></to>
    </wire>
    <wire loc="461:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f35f2d65020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c76d10"/></to>
    </wire>
    <wire loc="474:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f35f2d50200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c46740"/></to>
    </wire>
    <wire loc="498:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f35f2d2c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bef740"/></to>
    </wire>
    <wire loc="540:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f35f2d11580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c24100"/></to>
    </wire>
    <wire loc="438:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f35f2d91020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2cc76d0"/></to>
    </wire>
    <wire loc="451:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f35f2d73020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c97100"/></to>
    </wire>
    <wire loc="464:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f35f2d5f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c68d10"/></to>
    </wire>
    <wire loc="477:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f35f2d4a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c37740"/></to>
    </wire>
    <wire loc="542:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f35f2d0d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c5d100"/></to>
    </wire>
    <wire loc="546:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f35f2d07570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c03d10"/></to>
    </wire>
    <wire loc="552:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f35f2cfb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2be6d10"/></to>
    </wire>
    <wire loc="482:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f35f2d46200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c2ed10"/></to>
    </wire>
    <wire loc="543:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f35f2d0b580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c59d10"/></to>
    </wire>
    <wire loc="441:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f35f2d81020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2cb9740"/></to>
    </wire>
    <wire loc="454:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f35f2d6d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c89270"/></to>
    </wire>
    <wire loc="467:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f35f2d59020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c59d10"/></to>
    </wire>
    <wire loc="539:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f35f2d13580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c29740"/></to>
    </wire>
    <wire loc="550:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f35f2cff570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bef740"/></to>
    </wire>
    <wire loc="472:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f35f2d54200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c4f460"/></to>
    </wire>
    <wire loc="485:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f35f2d40200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c20d10"/></to>
    </wire>
    <wire loc="496:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f35f2d30200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bf9100"/></to>
    </wire>
    <wire loc="444:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f35f2d7b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2caa740"/></to>
    </wire>
    <wire loc="494:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f35f2d34200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c03d10"/></to>
    </wire>
    <wire loc="449:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f35f2d77020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2ca1d10"/></to>
    </wire>
    <wire loc="462:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f35f2d63020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c71740"/></to>
    </wire>
    <wire loc="475:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f35f2d4e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c41100"/></to>
    </wire>
    <wire loc="499:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f35f2d2a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bea100"/></to>
    </wire>
    <wire loc="439:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f35f2d86020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2cc2100"/></to>
    </wire>
    <wire loc="452:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f35f2d71020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c93d10"/></to>
    </wire>
    <wire loc="465:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f35f2d5d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c63740"/></to>
    </wire>
    <wire loc="478:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f35f2d48200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c32100"/></to>
    </wire>
    <wire loc="534:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f35f2d1b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c6c100"/></to>
    </wire>
    <wire loc="547:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f35f2d05570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bfe740"/></to>
    </wire>
    <wire loc="533:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f35f2d1d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c6c100"/></to>
    </wire>
    <wire loc="483:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f35f2d44200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c29740"/></to>
    </wire>
    <wire loc="554:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f35f2cf9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2bea100"/></to>
    </wire>
    <wire loc="558:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f35f2cf2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c0c740"/></to>
    </wire>
    <wire loc="529:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f35f2d251f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f35f2c7a100"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b411d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b411d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f29cc690"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f2b43400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f2a48760"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f35f2b39a80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f35f29becf0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f2a48760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0a88c40"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f35f29c7c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f2a1ccf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f35f2a151d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f2a47020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f35f2a47020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f0a80890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f29b3020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f2ac5020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f2ac5020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f2a890f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f0a88c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0a6b660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f35f0a790a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f0a864f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f35f0a864f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f0a6a020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f0a7dc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f2ac5020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f0a66190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f0a70340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f0a70340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f0a65770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f0a6fa80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f0a6fa80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f0a64a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f0a6eda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f0a6eda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f35f3061020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f35f3058570"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f35f305fbe0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f35f30561f0"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f35f305d0c0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f35f3055020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f35f305c5a0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f35f3055da0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f35f305ba50"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f35f3053b80"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f35f3059020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f35f3052a20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f35f2a86540"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f35f2abc020"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f35f2abc020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f2ab70a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2aa82c0"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f35f2a12490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f35f29c1e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f35f2998370"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f35f2995390"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f299f4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f299ba90"/></to>
    </wire>
    <wire loc="97:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x7f35f2976e60"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f35f293a800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f35f2975a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f103d1f0"/></to>
    </wire>
    <wire loc="98:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f2984bb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f2938570"/></to>
    </wire>
    <wire loc="99:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f35f29813b0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f35f2938dc0"/></to>
    </wire>
    <wire loc="100:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f35f2933c70"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f35f2975a80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x7f35f2934760"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f35f283b320"/></to>
    </wire>
    <wire loc="103:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f292d020"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="104:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f35f2925230"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f35f1e466e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f35f292ecc0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f35f14f0020"/></to>
    </wire>
    <wire loc="106:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f2914510"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d95020"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d95020"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d8a7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f35f291d2c0"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f35f14af540"/></to>
    </wire>
    <wire loc="27:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f35f14af540"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f35f14ab360"/></to>
    </wire>
    <wire loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x7f35f28ca380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x7f35f2753310"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f35f29813b0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x7f35f2753ab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1469840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x7f35f27523d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f2732140"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f2732140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x7f35f274d730"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f272cb00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f272cb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f35f2743e00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f35f27425e0"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x7f35f2976e60"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f2740270"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x7f35f273f2b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f2984bb0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f35f273fa10"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f35f1f3a020"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f35f2748ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f27254e0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f27254e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x7f35f273d590"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x7f35f14af540"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f273ca40"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d95020"/></to>
    </wire>
    <wire loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x7f35f273bac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f35f273aad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x7f35f27392f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x7f35f273a2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x7f35f2739ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f35f2719020"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f35f27144a0"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f270e800"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f2718690"/></to>
    </wire>
    <wire loc="9:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f2718690"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f26ce300"/></to>
    </wire>
    <wire loc="12:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f26cdda0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f26ab020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f35f26bfb80"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f35f26a17e0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f35f26a17e0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f35f268d9f0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f35f26931b0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f35f2689cd0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f35f2695d90"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f35f268a8d0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f269d980"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f268ec80"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f35f2687e40"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f35f25df220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f35f25df220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f35f25d9af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f35f26820e0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f35f259ae60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f35f259ae60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f258db60"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f35f2681380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f35f25966a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f35f25966a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f257ed70"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f35f26806a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f35f2594ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f35f2594ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2574710"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f35f267e0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f35f255dd60"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f35f255dd60"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f35f243fa30"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f35f26681d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f1fe8e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f1fe8e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f23f3950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f35f26672b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f35f1fe57b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f35f1fe57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f35f26679c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1fe4ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1fe4ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f35f2669a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1fe6ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1fe6ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f2669120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1fe1160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1fe1160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f35f266eb00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f35f1fd8870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f35f1fd8870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f35f26753d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1fd6880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1fd6880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f35f2675c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1fd50a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1fd50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f26705f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1fdde50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1fdde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f266c020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f1fdc670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f1fdc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f35f2679520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f35f1fc8500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f35f1fc8500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f35f2671a90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f35f1fc9ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f35f1fc9ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f266c8e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f1fd9e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f1fd9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f35f266b1c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f35f1fdce50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f35f1fdce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f35f266ba70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f35f1fdbe50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f35f1fdbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f35f2666d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f1fb6a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f1fb6a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f23f3950"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f35f2666020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f1f899e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f1f899e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f23f3950"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f35f2676810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f35f1f5db20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f2687450"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f26ab020"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f35f265a820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f35f265b940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f25e37e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f25d9260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f25d9260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f092b260"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f35f25d9af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f092bab0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f092b260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f09233d0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f35f092bab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f091c020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f09233d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f0908ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f35f0916780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f0923c20"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f35f0923c20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f35f09065b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f09193d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f25c3080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f25c3080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f25becd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f0903710"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f090d9d0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f090d9d0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f0902da0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f090b120"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f090b120"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f09000c0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f090a440"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f090a440"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f35f25ba0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f35f2abc020"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f35f2598090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2588710"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f35f2597390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f25821d0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f35f25e0b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2591020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f35f25959b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2579b60"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f25902f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f35f2d7f020"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f258cde0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f35f2d52200"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2586930"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f35f2d81020"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2581480"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f35f2d91020"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f257c020"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f35f2d4a200"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2578de0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f35f2d54200"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2573930"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f35f2d4c200"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f35f255d150"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f35f2556a20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f35f255ca20"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f35f2430a70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f25425d0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f35f30605a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f35f25418f0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f35f3050a20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f35f25407a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f35f2d54200"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f35f243e610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f35f25318a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f35f25318a0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f35f251d8a0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f35f242f610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f35f25338f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f35f25338f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f35f2523810"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f35f2527a30"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f35f2513a30"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f35f252e8a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f35f251a8a0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f35f252c8a0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f35f25188a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f35f25378a0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f35f251f8a0"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f35f25298a0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f35f25158a0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f35f25308a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f35f251c8a0"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f35f2526a30"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f35f2512a30"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f35f252b8a0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f35f25178a0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f35f25328a0"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f35f251e8a0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f35f2528a30"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f35f2514a30"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f35f252f8a0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f35f251b8a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f35f252d8a0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f35f25198a0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f35f25388a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f35f25208a0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f35f252a8a0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f35f25168a0"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f35f1fe5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f1fd7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f35f1fcf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f35f1fd60a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f35f1fc3500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f35f1fc6500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1fe4490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f35f1fcb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f1fc7500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1fd1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f35f1fd30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f1fe7a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23f0670"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23f0670"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23ea920"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1fe1e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f35f1fdf490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f1fcac80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1fdfbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f1fc7ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f35f1fcb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f1fdb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1fcd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f35f1fcf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1fcd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1fc4ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f35f1fc6ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f35f1fd3880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f35f1fce0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f35f1fc8ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1fd5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1fc3ce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f35f1fe6480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f35f1fdd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f1fd9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1fd00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1fd0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f1fd70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1fde2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f35f1fdd020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f1fe17b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f1fc9500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f35f1fc4500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1fd10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f35f1fce880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f35f1fe5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1fd40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f35f1fde940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f35f1fd4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f35f1fca0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f35f1fc29b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23e5bb0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23e3020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23e3db0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f23f3950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f23e6810"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23e2ba0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f35f23d1b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f2371770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f35f2371770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f236c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f35f23e0400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f234fc40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f234fc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f0835e70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f35f23de080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f35f234e8f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f35f234e8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f35f08302c0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f35f23d5680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f35f200e020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f35f200e020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f35f082f440"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f23dca70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f35f23ccbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f35f236c1d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f2368b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f35f082f440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f35f22e6510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f35f08302c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f35f22e9dd0"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f0835e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f22eda20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f0831af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f08265d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f08265d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f21748a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f35f22e9dd0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f35f226d440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f35f08308d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f35f22e8480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f35f22e8480"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f35f226da50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f35f22e3600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f35f082fbe0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f0819a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f22e95e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f35f22e4370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f0827860"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f0827860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f21755c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f22df6a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f0820020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f0820020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f35f217aa80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f22e95e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f226ec40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f35f22e6510"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f35f226c700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f22eda20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f226fe80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f35f226be00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f35f22e3600"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f35f226b060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f35f22e4370"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f2265de0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f22df6a0"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f35f226a490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f225d860"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f225d860"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f35f2251020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f22645a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f35f2263c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f35f22538a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f224c750"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f22563b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f35f224ddc0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f35f221e700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f35f2d23580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f35f221b670"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f35f2d1f580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f35f2219670"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f35f2d1d580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f35f2217670"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f35f2d17580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f35f2215670"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f35f2d19580"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f35f22235b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f35f20cb430"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f35f08207c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f21769a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f35f0820dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f35f20d7880"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f35f20d7880"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f35f20cb430"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f08255a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f225d860"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f0826d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f2173130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f2173130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f20de060"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f2172020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f0819a80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f21748a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f20e1bf0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f20e1bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f07af020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f35f217aa80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f35f21705c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f21755c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f20e2e60"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f20e2e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f07b0270"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f21769a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f215c020"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f20de060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f07ae400"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f20de930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f2172020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f215b4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f20de060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f35f215c690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f22563b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f35f215ce70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f35f22538a0"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f20e0400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f07af7a0"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f07aecf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f20de930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f35f07ad500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f35f07b20a0"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f35f07aa7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f35f20c4250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f35f2251020"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f35f20c0d40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f35f2d23580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f35f20becb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f35f2d1d580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f1fa9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f35f1fb4da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1facb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f1fa7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f35f1fa0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f35f1fa7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f35f1f932f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f35f1f952f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1fb1120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f35f1f9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f1f962f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f35f1fabc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f35f1faac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1fa1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f35f1fa3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1fa5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f1fb5760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23f0670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1fb0aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f35f1faf120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f1f9aa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1faf870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f1f96ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1fb1dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f35f1f9ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f1faa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f1fab480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1fb4750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1f9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f35f1f9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1f9c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1f94ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f35f1f95ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f35f1fa2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f35f1f9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f35f1f97ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1fa4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1f93ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f35f1fb4100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f35f1fac370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f1fa9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1fa1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1fa5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1fa0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f35f1fa8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f35f1fb3450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f1fa8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1fae020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f35f1faecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f35f1f972f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f35f1f99ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f1fb0450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f1f992f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f35f1f942f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1fa2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f35f1f9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f35f1fb3aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1fb1770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1fa4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f35f1fae670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f35f1fa3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f35f1f9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f35f1f927a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f1f7cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f35f1f87da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1f80b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f1f7a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f35f1f73e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f35f1f7ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f35f1f662f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f35f1f692f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1f85120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f35f1f6e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f1f6a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f35f1f7fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f35f1f7ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1f74670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f35f1f77e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1f79670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f1f88760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23f0670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1f84aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f35f1f82120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f1f6da70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1f82870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f1f6aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1f85dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f35f1f70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f1f7e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f1f7f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1f87750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1f71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f35f1f72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1f70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1f67ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f35f1f69ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f35f1f75670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f35f1f72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f35f1f6bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1f78670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1f66ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f35f1f87100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f35f1f80370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f1f7c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1f74e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1f79e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1f73670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f35f1f7b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f35f1f86450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f1f7be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1f81020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f35f1f81cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f35f1f6b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f35f1f6cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f1f84450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f1f6c2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f35f1f672f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1f75e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f35f1f71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f35f1f86aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1f85770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1f78e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f35f1f81670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f35f1f77670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f35f1f6ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f35f1f657a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x7f35f1f39020"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f103d1f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f271b6f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f1e88da0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x7f35f1e77bb0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x7f35f1f39020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f35f1e87720"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f1e62bd0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f1e62bd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f35f1e7b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f1e5b560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f1e5b560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x7f35f1e82ae0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f1e54020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f1e54020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f35f1e77410"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f1e75400"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f35f1e6c980"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f35f283b320"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f35f1e6a270"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f35f283c080"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e68590"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e48560"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f35f1e745a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f35f14c1ae0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x7f35f1e6f0f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f14ba4a0"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f35f14ba4a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f0501020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f35f1e6ab60"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f35f14f0020"/></to>
    </wire>
    <wire loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x7f35f1e672f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x7f35f1e67ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x7f35f1e466e0"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x7f35f1e25890"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f35f1e44930"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f35f1e26a50"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x7f35f1e4ad40"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x7f35f1e23a90"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f35f1e459d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f283c9e0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f35f1e459d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f271b6f0"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f1e4a540"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1e401d0"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f150c020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f1e45130"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x7f35f150c8c0"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x7f35f1e459d0"/></to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x7f35f150b1a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f1c9a020"/></to>
    </wire>
    <wire loc="51:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f1c9a020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f1c796d0"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f35f150bdd0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f1d94980"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f1d94980"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f1d89790"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x7f35f1e3fae0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1e23290"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f35f1e211d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f35f1d94020"/></to>
    </wire>
    <wire loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x7f35f1d94020"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x7f35f1d92da0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f35f1d8d720"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f35f1c9aaf0"/></to>
    </wire>
    <wire loc="52:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f35f1c9aaf0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f35f1c78d60"/></to>
    </wire>
    <wire loc="73:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f1ce9a80"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1e401d0"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f1ce82d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f1e21b20"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f35f1e20c30"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f35f14f0020"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x7f35f1e3e2d0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x7f35f14f0020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f150a5c0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f35f1e1b790"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f14d7a40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f35f14d7a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f0523d10"/></to>
    </wire>
    <wire loc="88:../../../tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="PrintTimer" scoped="" ref="0x7f35f1e171c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f14d2970"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f14d2970"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f35f1e02e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RS" scoped="" ref="0x7f35f1d88060"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1cefa30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_RA" scoped="" ref="0x7f35f1d88860"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1cb89b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NS" scoped="" ref="0x7f35f1d860a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1cb69b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IP_NA" scoped="" ref="0x7f35f1d868a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1cb39b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="RSTimer" scoped="" ref="0x7f35f1d85270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f1cb17b0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f1cb17b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f35f1d80450"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></to>
    </wire>
    <wire loc="37:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1d80c50"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e41d20"/></to>
    </wire>
    <wire loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x7f35f1d7f900"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x7f35f1d8d720"/></to>
    </wire>
    <wire loc="39:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f1d7e2d0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f1d7d300"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f2718690"/></to>
    </wire>
    <wire loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <from><interface-ref name="send_rs_task" scoped="" ref="0x7f35f1d4a380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f1cefa30"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f06741f0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f35f06749f0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f35f1ce9280"/>
      <arguments>
        <value cst="I:133">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f1cb89b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f0669020"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f35f0669820"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f35f1ce9280"/>
      <arguments>
        <value cst="I:134">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f1cb69b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f065f6a0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f35f065e020"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f35f1ce9280"/>
      <arguments>
        <value cst="I:135">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f1cb39b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f0656db0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f35f06545e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f35f1ce9280"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f1c98020"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f1c76940"/></to>
    </wire>
    <wire loc="59:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f35f1c74060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f199b420"/></to>
    </wire>
    <wire loc="30:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f199b420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f1996b40"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f35f1c74bd0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f35f1998020"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f35f1998020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f35f198f020"/></to>
    </wire>
    <wire loc="61:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7f35f1c720f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f35f1998d00"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f35f1998d00"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f35f1992a00"/></to>
    </wire>
    <wire loc="62:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7f35f1c72e20"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f35f1997a30"/></to>
    </wire>
    <wire loc="34:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f35f1997a30"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f35f1990820"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f35f1c66020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f35f15898f0"/></to>
    </wire>
    <wire loc="21:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f35f15898f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f35f1982470"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f35f1c67020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f35f1583020"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x7f35f1583020"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x7f35f157e450"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f1c42bc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f1c92870"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x7f35f1c47900"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f1584e70"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f1584e70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x7f35f1c63a10"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f156da40"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f35f156da40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f0570210"/></to>
    </wire>
    <wire loc="79:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x7f35f1c4f150"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f1543020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f35f1543020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f055ed80"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x7f35f1c535f0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f151c020"/></to>
    </wire>
    <wire loc="49:../../../tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f35f151c020"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f35f0535020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x7f35f1c4dc50"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f35f153d850"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1c714e0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d8a7a0"/></to>
    </wire>
    <wire loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f35f19ca6e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f1996b40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f15f2b80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f35f1990820"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f165b5e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f35f198f020"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f35f1659170"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f35f1992a00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f165c8e0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f15f2b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f35f15efd90"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f35f197a170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f35f177fa70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f35f177fa70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f35f176e020"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f35f1982470"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f35f15dd020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f35f15dd020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f35f15d8080"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1984640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1775d20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f35f198fd10"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f35f165bc90"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f35f165bc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f35f1650a20"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f197a7f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f15f2080"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f15f2080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f15eb2d0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f165b5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f35f1650370"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f198b080"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f35f17806e0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f35f17806e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f35f1771c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f1993d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f165dbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f165dbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f16527b0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f165c8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f35f16514d0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f35f1659170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f35f164e020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f35f198ea90"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f35f165aa50"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f35f165aa50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f35f164f840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f35f15efd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f197db20"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f197db20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f1976d90"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f16586b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f16aedd0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f16aedd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f16a7660"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f16abb50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f15de2a0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f15de2a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f15db3a0"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f15ddd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f15f6ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f15f6ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f35f15f0860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f15f0860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f1978790"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f1978790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f196b8f0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f35f1658020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f15f3980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f15f3980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f35f15ef690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f35f15ef690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f168eaa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f168eaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f168ae30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f35f168b950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f1977490"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f1977490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f18067c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f196d230"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f196a650"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f18067c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f1800020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f19694b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f269d980"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f35f19681a0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f35f2695d90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f35f19673e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f19089b0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f35f19673e0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f18095c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f18095c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f1802ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f19089b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f18f86a0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f35f1966080"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f35f1905300"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f35f1905300"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f18f7020"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f35f1966e00"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f1904020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f1904020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f18f7cf0"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f195cb00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f1954130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f176f640"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f35f1965c60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f35f1954b90"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f16b5390"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f35f16b5390"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f236c1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f195d470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f35f194f5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f35f1951660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f35f1952730"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f35f1903ca0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f35f18f6c90"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f35f1902470"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f35f18f54b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f35f18f4020"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f35f25df220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f35f18e2d60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f35f25e0b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f35f18de080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f35f259ae60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f35f18d9370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f35f25959b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f35f18e21e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f35f255d150"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f35f18d86e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f183ac30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f183ac30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f23f3950"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f18d74e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f18398f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f18398f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23f0670"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f35f18d4020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f35f18382f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f35f18382f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f35f18d4730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f35f1837cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f35f1837cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f35f18d4e60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1835370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1835370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f18d35c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1834d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1834d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f35f18d56b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f35f182ec60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f35f182ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f35f18d6020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f35f18167a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f35f18167a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f18d6d80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f181a2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f181a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f18d3d00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f182f480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f182f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f18d10c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f182ce50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f182ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f18d1990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f182b670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f182b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f35f18d2930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f35f18327b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f35f18327b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f35f18cf530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1818ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1818ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f35f18d0380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f35f18192f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f35f18192f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f35f18d0bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f35f1819ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f35f1819ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f35f18c7780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f35f1809df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f35f1809df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f35f1801550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f18f0210"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f18ef0c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f35f18ee200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f35f177e550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f35f177e550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f35f176ea80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f35f18db570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f35f1776480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f35f1776480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f35f17678b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f18cb110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f182dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f35f1837020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1830c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f35f1824e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f35f182be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f35f18172f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f35f181f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f35f182fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1825670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f35f1827e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1829670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f35f1833370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f181ea70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1833ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f181aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1834060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f35f1820e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f182e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1838940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1821e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f35f1822670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1820670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f35f1826670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f35f1822e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f35f181bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1828670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1817ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f35f1830490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f182d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1825e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1829e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1824670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f35f182c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f35f1837670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1832160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f35f1832e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f35f181b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f35f181dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f18346b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f181d2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f35f18182f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1826e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f35f1821670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f35f18359c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1828e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f35f1827670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f35f181fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f35f1805020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f35f18007c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f17eb150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f35f17ff020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f35f259ae60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f35f17fe380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f35f2598090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f35f17fd6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f35f2597390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f35f17fca50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f35f255ca20"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f35f17fb6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f1704520"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f1704520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f23f3950"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f35f17fa530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f35f16e1480"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f35f16e1480"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f17f9ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f16fe060"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f16fe060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f35f17f93a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f35f16fed00"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f35f16fed00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f17f8330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f17f71e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f35f17f4d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f35f177e550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f35f17f7b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f35f26a17e0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f17ef3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f16f6840"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f16f6840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f17efcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f16f5060"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f16f5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f35f17f1b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f35f16fdae0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f35f16fdae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f35f17ed6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f35f16e2c60"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f35f16e2c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f35f17ee590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f35f16e4c60"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f35f16e4c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f35f17eee00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f35f16e3480"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f35f16e3480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f17ec020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f16e4480"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f16e4480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f35f17ec8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f35f1703c20"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f35f1703c20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f35f17df9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f35f177a660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f35f176baf0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f1711020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f25c3080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f35f17643b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f35f1713cf0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f35f17636e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f35f2b39a80"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f170c0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f16f7620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f35f1702940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f16fb620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f35f16ee840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f35f16f5840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1701cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f35f16e9060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f16e6c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f35f16fa620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f35f16f8620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f35f16ef060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f35f16f1840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f35f16f4060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f17032b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23f0670"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f16fe6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f16e8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f35f16fd490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f17009c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f35f16ea840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f16fae00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f16fbe00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f35f17022f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f16ec840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f35f16ed060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f16ea060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f35f16e2480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f35f16f0060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f35f16ed840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f35f16e6480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f35f16f3060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f35f16fce00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f16f8e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f35f16ef840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f35f16f4840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f35f16ee060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f35f16f6060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f35f1701020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f35f16fc7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f35f16e7c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f35f16e7480"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f16e8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f35f16e3c60"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f16f0840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f35f16ec060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f35f1701670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1700370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f35f16f3840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f35f16fc160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f35f16f1060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f35f16e9840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f35f16e0160"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f16a6b40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f35f16abb50"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f35f16a58f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f16a8690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f35f16a8690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f236c1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f35f16a4760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f16a3020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f35f168b200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f35f1687570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f35f16863f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f35f168b950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f1686a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f164ed70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f35f16586b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f35f164db10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f35f1658020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f164c2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f164b170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f35f164bb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f35f15fd410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f35f161fdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f35f15f1800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f15ed580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f35f15ed580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f236c1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f15d8dd0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f35f15ddd70"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f35f15d7af0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f15a2350"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f35f15a2350"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f35f236c1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x7f35f15d5650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f35f15a0750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f35f15a0750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f15d69a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f35f17806e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f15d0a30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <from><interface-ref name="send" scoped="" ref="0x7f35f15cd2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f1999dd0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f197a7f0"/></to>
    </wire>
    <wire loc="22:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f1587670"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f198b080"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/cc2420/ReadLqiC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f157ec70"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></to>
    </wire>
    <wire loc="29:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f14a8990"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e48560"/></to>
    </wire>
    <wire loc="30:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x7f35f14a78b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f35f283b320"/></to>
    </wire>
    <wire loc="31:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x7f35f14a5260"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x7f35f2933580"/></to>
    </wire>
    <wire loc="32:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x7f35f14a59b0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f35f1f3a020"/></to>
    </wire>
    <wire loc="33:../../../tos/lib/net/rpl/RPLOFC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x7f35f14a4540"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x7f35f293a800"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f1469840"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f04ed2e0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f35f04edae0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f35f1ce9280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f14525c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f13d8b90"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f35f13d8b90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f13ca7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f35f144e600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f35f1434300"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f144d800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f13df0d0"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f144a800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f13dca10"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f35f144b020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f35f13df6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f35f13d8540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f35f13ca170"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f13d12b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f1439300"/></to>
    </wire>
    <wire loc="69:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f35f13db4a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f13d4790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f35f13da120"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f13d5c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f35f13cd970"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f35f10be8c0"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f13d4790"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f129ade0"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f35f13d5c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f35f129a6c0"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f35f1299c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f35f13cd970"/></to>
    </wire>
    <wire loc="70:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f13be020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f13d12b0"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f1297920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f13d12b0"/></to>
    </wire>
    <wire loc="72:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f128ecc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f13d12b0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f35f1298590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f35f13c0c40"/></to>
    </wire>
    <wire loc="75:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f35f1298e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f35f13c3720"/></to>
    </wire>
    <wire loc="77:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f35f13c2020"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f35f1293e00"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f35f13b8860"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f1268080"/></to>
    </wire>
    <wire loc="17:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f1268080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f10d0080"/></to>
    </wire>
    <wire loc="80:../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f35f1285d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f35f1268890"/></to>
    </wire>
    <wire loc="13:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f35f1268890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f35f10d7440"/></to>
    </wire>
    <wire loc="332:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f35f13646e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f35f139b4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f35f1367c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f35f1360a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f35f1295020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f35f1295800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f35f1266020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f35f10d5440"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f35f10d5440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f35f1252020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f35f10d7440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f35f1254860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f10d4020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f10d08e0"/></to>
    </wire>
    <wire loc="19:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f10cf020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f10d8020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f10d8020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f12577a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f10d8c70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f046f5d0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f046f5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f111a510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f124f450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f10d4020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f04697c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f1256a30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f35f12511d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f0470880"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f0470880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f111b280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f124e1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f0469020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f0469020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f35f111c510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f1256a30"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f11e3dc0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f35f1252020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f35f11e1890"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f35f1254860"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f35f11e26d0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f12577a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f11e3020"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f11df3e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f124f450"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f35f11e05b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f35f12511d0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f11da5b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f124e1d0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f35f11dfa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f11cad30"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f11cad30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f35f11c3550"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f11d8020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f35f1136110"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f35f1136110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f35f2abc020"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f35f11d6120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f11c7860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f35f11bd130"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f11ca500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f11c6bc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f35f11bda00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f35f2d13580"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f35f11bb990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f35f2d11580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f35f11b9990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f35f2d0f580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f35f11b7990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f35f2d0b580"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f35f11b5990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f35f2d0d580"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f046e5a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f11cad30"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f046fd70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f111ad20"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f111ad20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f110e060"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f1119af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f04697c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f111a510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f1111bd0"/></to>
    </wire>
    <wire loc="106:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f1111bd0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f04013a0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f35f111c510"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f35f1116230"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f111b280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f1112e30"/></to>
    </wire>
    <wire loc="105:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f35f1112e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f35f0402540"/></to>
    </wire>
    <wire loc="108:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f110e060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f04008b0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f35f11152f0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f11c7860"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f110e930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f1119af0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f1114120"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f110e060"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f10f29d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f110f400"/></to>
    </wire>
    <wire loc="107:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f110f400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f0401b20"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f1109b20"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f11ca500"/></to>
    </wire>
    <wire loc="109:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f03ff210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f110e930"/></to>
    </wire>
    <wire loc="111:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f35f03ff9d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f35f0404330"/></to>
    </wire>
    <wire loc="75:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f35f03fcc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f03cc3a0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f1109b20"/></to>
    </wire>
    <wire loc="82:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f35f03ccb00"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f35f10f2400"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f03cb0f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f10f29d0"/></to>
    </wire>
    <wire loc="85:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f03cbd00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f10f1720"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f10a3160"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f109c110"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x7f35f10a4460"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x7f35f10a1900"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f109b6f0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f1e4a540"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f109a020"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f35f1052750"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f35f30f5220"/></to>
    </wire>
    <wire loc="20:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x7f35f1052d80"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="SetIPAddress" scoped="" ref="0x7f35f104fdb0"/></from>
      <to><interface-ref name="SetIPAddress" scoped="" ref="0x7f35f2719020"/></to>
    </wire>
    <wire loc="22:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f104e460"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f26ab020"/></to>
    </wire>
    <wire loc="23:../../../tos/lib/net/blip/StaticIPAddressC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f104eae0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d95020"/></to>
    </wire>
    <wire loc="58:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x7f35f10407f0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x7f35f283c080"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f1040020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f283c9e0"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f1040020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f2984bb0"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f35f1040020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f35f271b6f0"/></to>
    </wire>
    <wire loc="40:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x7f35f103d1f0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x7f35f03bdce0"/></to>
    </wire>
    <wire loc="41:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x7f35f03bc500"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x7f35f1ce9280"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f35f0f8fca0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f35f0fb9760"/></to>
    </wire>
    <wire loc="67:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f35f0f8ddf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f35f0fc1da0"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f35f0fc1da0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f35f03ac0c0"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f35f0f8ba90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f35f0fbfa10"/></to>
    </wire>
    <wire loc="64:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f35f0fbfa10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f35f144de10"/></to>
    </wire>
    <wire loc="71:../../../tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f35f0f6c2a0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f35f0f8f400"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f35f0fbe720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f35f144b020"/></to>
    </wire>
    <wire loc="66:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f35f0fbdda0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f144a800"/></to>
    </wire>
    <wire loc="60:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f03acd30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f1018390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f35f03ab970"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f35f144b020"/></to>
    </wire>
    <wire loc="54:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f35f1018390"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f35f0fceb00"/></to>
    </wire>
    <wire loc="55:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f35f0fcda40"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f35f144e600"/></to>
    </wire>
    <wire loc="56:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f35f0fcc720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f35f144b020"/></to>
    </wire>
    <wire loc="57:../../../tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f35f0fcbd60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f35f144de10"/></to>
    </wire>
    <wire loc="169:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f35f0fcaa90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f35f0fc92f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x7f35f0f86d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x7f35f0f6bc00"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x7f35f0f6c2a0"/></to>
    </wire>
    <wire loc="44:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f35f0f62b90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f35f30f5220"/></to>
    </wire>
    <wire loc="47:../../../tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f35f0f5f3c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f35f14525c0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="TestRPLC" loc="49:TestRPLC.nc" safe="">
      <documentation loc="38:TestRPLC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.TimerMilliC" loc="44(TestRPLAppC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestRPLAppC.Timer" loc="44(TestRPLAppC.Timer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRankC" loc="69:../../../tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="78:../../../tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="45(RPLRoutingEngineC.Routing):../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPAddressC" loc="28:../../../tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="30:../../../tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="3:LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="42(RPLDAORoutingEngineC.DAORouting):../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC" loc="29:../../../tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.&#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="12:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="8:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="26:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; Also implements router solicitations and router advertisements. These allow&#10; nodes to discover routers if they are not using RPL.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS" loc="34(IPNeighborDiscoveryC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:133">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ICMPCoreP" loc="48:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <documentation loc="34:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
        <short>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.</short>
        <long>&#10;&#10; This module implements core ICMP functionality, like replying to&#10; echo requests and sending time exceeded messages.  Other modules&#10; which want to implement other functionality can wire to the IP&#10; interface.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA" loc="34(IPNeighborDiscoveryC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:134">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS" loc="34(IPNeighborDiscoveryC.ICMP_NS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:135">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="2">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA" loc="34(IPNeighborDiscoveryC.ICMP_NA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP" loc="34(IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="3">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC.RSTimer" loc="44(IPNeighborDiscoveryC.RSTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC" loc="33:../../../tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../../../tos/system/NoLedsC.nc">
      <documentation loc="35:../../../tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:../../../tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="Ieee154BareC" loc="17:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC" loc="40:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkP" loc="40:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkC.SendStateC" loc="65(PacketLinkC.SendStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkC.DelayTimerC" loc="44(PacketLinkC.DelayTimerC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioPacketMetadataC" loc="9:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <configuration/>
    </component>
    <component qname="ReadLqiC" loc="11:../../../tos/chips/cc2420/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="CC2420ReadLqiC" loc="8:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <module/>
    </component>
    <component qname="IPDispatchC.ExpireTimer" loc="44(IPDispatchC.ExpireTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f35f156f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f35f293bd00"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f35f156f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f35f293bd00"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f35f156f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="9:../../../tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="13:../../../tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f35f2eec110"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f35f156f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC.TimerMilliC" loc="44(IPStackC.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):../../../tos/system/QueueC.nc">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f35f2e39020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f35f2e394f0"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):../../../tos/system/PoolC.nc">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f35f2e39020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f35f2e394f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):../../../tos/system/PoolP.nc">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f35f156f910"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLOFC" loc="6:../../../tos/lib/net/rpl/RPLOFC.nc">
      <configuration/>
    </component>
    <component qname="RPLOF0P" loc="39:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="4">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestRPLAppC.RPLUDP" loc="7(TestRPLAppC.RPLUDP):../../../tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="10:../../../tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="11:../../../tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="StaticIPAddressP" loc="39:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <documentation loc="33:../../../tos/lib/net/blip/StaticIPAddressP.nc">
        <short>&#10; </short>
        <long>&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @author Stephen Dawson-Haggerty&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="5">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):../../../tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:../../../tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):../../../tos/system/BigQueueC.nc">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:../../../tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:../../../tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:../../../tos/lib/printf/PutcharC.nc">
      <documentation loc="32:../../../tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:../../../tos/lib/printf/PutcharP.nc">
      <documentation loc="64:../../../tos/lib/printf/PutcharP.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:../../../tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:../../../tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f35f3045890" loc="40:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f35f3045c30" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f35f3044020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f35f30443a0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f35f3044720" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f35f3044a90" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f35f3044e20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f35f3043200" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f35f30435d0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f35f3007e70" loc="40:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f35f3004270" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f35f2ced9f0" loc="40:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f35f2cedda0" loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f35f2cec1a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f35f2cec550" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f35f2cec8c0" loc="44:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f35f2afa9c0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f35f2afa9c0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f35f2ab6120" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f35f2ab6120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f35f2aa5a50" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f35f2aa5a50"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f35f2aa2290" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f35f2aa2290"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f35f2aa2680" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f35f2aa2680"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f35f2aa2e60" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f35f2aa2e60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f35f2aa0260" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f35f2aa0a60" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f35f2aa0a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f35f2ac6ac0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f35f2ac6ac0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f35f2a7f2d0" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f35f2a7f2d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f35f2a7f6c0" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f35f2a7f6c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f35f2a7e020" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f35f2a7e020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f35f2a7e3f0" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f2a404f0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f2a404f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f2a0fd70" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f2a0fd70"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f35f2a0c0d0" loc="46:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f29bc1f0" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f29bc1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f35f2155020" loc="89:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f35f21490d0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f35f212d7e0" loc="52:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="42:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:../../../tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x7f35f1cee020" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../../../tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../../../tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f35f156f910" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f35f156f910"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f35f156fc80" loc="41:../../../tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../../../tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../../../tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f35f1568e00" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f35f1568e00"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f35f1565180" loc="53:../../../tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../../../tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f35f153fa50" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f35f153fa50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f35f153fdd0" loc="42:../../../tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="7:../../../tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f35f1035020" loc="47:../../../tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f35f1030ac0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f35f1015690" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:../../../tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:../../../tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f35f0fb82e0" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f35f0fb82e0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f35f0fb8670" loc="42:../../../tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f35f30f4720" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f30f4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30f4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f35f30f5220" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f35f30f5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f35f30f55a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f30f8700" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f30f8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30f8a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f35f30ef740" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f35f30ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30efac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f30f2910" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f30f2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30f2c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f35f30ef060" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f35f30ef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30ef3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f35f30efe20" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f35f30efe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30ee1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f30f1c70" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f30f1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f35f30d1020" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f35f30d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30d13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f35f30c76c0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f35f30c76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f35f30cd660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f35f30c7bd0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f35f30c7d60"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f35f30cd020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f35f30c7a40"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f35f30cd1b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f35f30cd340"/>
        <function-ref name="initClocks" scoped="" ref="0x7f35f30cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f30ce020" loc="39:../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f30ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30ce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f35f30b73d0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f35f30b73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f35f30b6340"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f35f30b78e0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f35f30b7a70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f35f30b7c00"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f35f30b7750"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f35f30b7d90"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f35f30b6020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f35f30b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f35f30b6680" loc="47:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f35f30b6680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f35f30b6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f30b9cb0" loc="45:../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f30b9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f30b70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f35f30735a0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f35f30735a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f3073920"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f3073ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f3073c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f3073dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f3072020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f30721b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f3072340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f30724d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f3072660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f35f3061020" loc="51:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f35f3061020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f30613a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f3061530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f30616c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f3061850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f30619e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f3061b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f3061d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f3060020"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f30601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f35f306a700" loc="47:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f35f306a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f306aa80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f306ac10"/>
        <function-ref name="captured" scoped="" ref="0x7f35f306ada0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f3069020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f30691b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f3069340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f35f304ea20" loc="68:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f35f304ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f304eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f304d020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f304d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f304d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f304d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f304d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f35f3071aa0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f35f3071aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3071e20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f3070020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f30701b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f3070340"/>
        <function-ref name="fired" scoped="" ref="0x7f35f30704d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f35f3055020" loc="61:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f35f3055020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f30553a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f3055530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f30556c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f3055850"/>
        <function-ref name="fired" scoped="" ref="0x7f35f30559e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f35f304ba20" loc="71:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f35f304ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f304bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f304a020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f304a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f304a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f304a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f304a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f35f305c5a0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f35f305c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f305c920"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f305cab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f305cc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f305cdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f305b020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f305b1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f305b340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f305b4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f305b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f35f3074b10" loc="40:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f35f3074b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f307b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f307b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f307b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f307b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f307b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f307b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f307b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f307bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f307bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f35f3050a20" loc="66:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f35f3050a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3050da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f304f020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f304f1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f304f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f304f4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f304f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f35f30573e0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f35f30573e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3057760"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f30578f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f3057a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f3057c10"/>
        <function-ref name="fired" scoped="" ref="0x7f35f3057da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f35f30605a0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f35f30605a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f3060a20"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f3060bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f3060d40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f305f020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f305f1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f305f340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f305f4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f305f660"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f305f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f35f3069700" loc="48:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f35f3069700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3069a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f3069c10"/>
        <function-ref name="captured" scoped="" ref="0x7f35f3069da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f3063020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f30631b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f3063340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f35f304da20" loc="69:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f35f304da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f304dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f304c020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f304c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f304c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f304c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f304c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f35f305fbe0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f35f305fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f305e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f305e1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f305e340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f305e4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f305e660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f305e7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f305e980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f305eb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f305eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f35f3070890" loc="45:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f35f3070890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3070c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f3070da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f306b020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f306b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f306b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f35f3084060" loc="39:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f35f3084060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f30843e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f3084570"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f3084700"/>
        <function-ref name="get" scoped="" ref="0x7f35f3084890"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f3084a20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f3084bb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f3084d40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f3083020"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f30831b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f3083340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f30834d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f35f3055da0" loc="62:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f35f3055da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3053180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f3053310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f30534a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f3053630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f30537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f35f307a0c0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f35f307a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f307a440"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f307a5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f307a760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f307a8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f307aa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f307ac10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f307ada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f3073020"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f30731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f35f305ba50" loc="56:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f35f305ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f305bdd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f305a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f305a1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f305a340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f305a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f305a660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f305a7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f305a980"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f305ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f35f30646d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f35f30646d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3064a50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f3064be0"/>
        <function-ref name="captured" scoped="" ref="0x7f35f3064d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f306a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f306a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f306a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f35f304fa20" loc="67:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f35f304fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f304fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f304e020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f304e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f304e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f304e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f304e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f35f306ccf0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f35f306ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f30710a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f3071230"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f30713c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f3071550"/>
        <function-ref name="fired" scoped="" ref="0x7f35f30716e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f35f30561f0" loc="60:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f35f30561f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3056570"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f3056700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f3056890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f3056a20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f3056bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f35f304ca20" loc="70:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f35f304ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f304cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f304b020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f304b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f304b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f304b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f304b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f35f305d0c0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f35f305d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f305d440"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f305d5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f305d760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f305d8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f305da80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f305dc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f305dda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f305c020"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f305c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f35f30636c0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f35f30636c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f3063a40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f3063bd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f3063d60"/>
        <function-ref name="get" scoped="" ref="0x7f35f3062020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f30621b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f3062340"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f30624d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f3062660"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f30627f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f3062980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f3062b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f35f3053b80" loc="63:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f35f3053b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3052020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f30521b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f3052340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f30524d0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f3052660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f35f3051a20" loc="65:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f35f3051a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3051da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f3050020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f30501b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f3050340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f30504d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f3050660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f35f3052a20" loc="64:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f35f3052a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f3051020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f30511b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f3051340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f30514d0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f3051660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f35f3058570" loc="58:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f35f3058570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f30588f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f3058a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f3058c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f3058da0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f3057020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f35f3059020" loc="57:../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f35f3059020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f30593a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f3059530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f30596c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f3059850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f30599e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f3059b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f3059d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f3058020"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f30581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f35f3011aa0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f35f3011aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f3011e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f35f3011450" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f35f3011450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f30117d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f35f3010120" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f35f3010120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f30104a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f35f3012d80" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f3012d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f3011180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f3013540" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f3013540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f30138c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f3013a50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f3013be0"/>
        <function-ref name="get" scoped="" ref="0x7f35f3013d70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f3012020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f30121b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f3012340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f30124d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f3012660"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f30127f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f3012980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f35f300a940" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f35f300a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f300acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f35f300a2f0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f35f300a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f300a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f35f3008020" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f35f3008020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f30083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f35f300bbf0" loc="51:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f300bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f300a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f300c3e0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f300c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f300c760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f300c8f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f300ca80"/>
        <function-ref name="get" scoped="" ref="0x7f35f300cc10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f300cda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f300b020"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f300b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f300b340"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f300b4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f300b660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f300b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2fbda90" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2fbda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2fbde10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2fbc020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2fbc1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fbc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fbc4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2fbc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f30059d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f30059d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f3005d50"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2fbf020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fbf1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2fbf340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2fbf4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fbf660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2fbf7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2fbf980"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2fbfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2fba020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2fba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2fba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2fbfde0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2fbfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2fbd180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2fbd310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2fbd4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2fbd630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2fbd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2fbc930" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2fbc930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2fbccb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2fbce40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fbb020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2fbb1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fbb340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fbb4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2fbb660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fbb7f0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2fbb980"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2fbbb10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2fbbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2fb5160" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2fb5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2fb54e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2fb5670"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2fb5800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fb5990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fb5b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2fb5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2fb7020" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2fb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2fb73a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2fb7530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fb76c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2fb7850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2fb79e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fb7b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2fb7d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2fb6020"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2fb61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2fb37a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2fb37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2fb3b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2fb6480" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2fb6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2fb6800"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2fb6990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2fb6b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2fb6cb0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2fb6e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2fb4020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2fb4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2fb43a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2fb4530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fb46c0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2fb4850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fb49e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fb4b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2fb4d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fb3020"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2fb31b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2fb3340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2fb34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2fae7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2fae7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2faeb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2faecb0"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2faee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fac020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fac1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2fac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2fb06d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2fb06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2fb0a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2fb0be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fb0d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2faf020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2faf1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2faf340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2faf4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2faf660"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2faf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2fabc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2fabc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2faa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2fafac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2fafac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2fafe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2fae020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2fae1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2fae340"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2fae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2fac610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2fac610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2fac990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2facb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2faccb0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2face40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fab020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fab1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2fab340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fab4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2fab660"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2fab7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2fab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2fa6cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2fa6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2fa50a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2fa5230"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2fa53c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fa5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fa56e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2fa5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2fa8b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2fa8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2fa7020"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2fa71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fa7340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2fa74d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2fa7660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fa77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2fa7980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2fa7b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2fa7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2fa32f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2fa32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2fa3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2fa6020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2fa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2fa63a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2fa6530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2fa66c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2fa6850"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2fa69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2fa5b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2fa5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2fa4020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2fa41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fa4340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2fa44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fa4660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2fa47f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2fa4980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2fa4b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2fa4ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2fa4e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2fa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2f9e2f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2f9e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f9e670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2f9e800"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2f9e990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f9eb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f9ecb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2f9ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2fa0220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2fa0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2fa05a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2fa0730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2fa08c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2fa0a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2fa0be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2fa0d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2f9f020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2f9f1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2f9f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2f9b7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2f9b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f9bb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2f9f610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2f9f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f9f990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2f9fb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2f9fcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2f9fe40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2f9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2f9c160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2f9c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2f9c4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2f9c670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f9c800"/>
        <function-ref name="get" scoped="" ref="0x7f35f2f9c990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f9cb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f9ccb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2f9ce40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f9b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2f9b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2f9b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2f9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2f967a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2f967a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f96b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2f96cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2f96e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f95020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f951b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2f95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2f986d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2f986d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2f98a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2f98be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f98d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2f97020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2f971b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f97340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2f974d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2f97660"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2f977f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2f94c50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2f94c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2f97ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2f97ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f97e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2f96020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2f961b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2f96340"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2f964d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2f95610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2f95610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2f95990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2f95b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f95cb0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2f95e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f94020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f941b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2f94340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f944d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2f94660"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2f947f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2f94980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2f8fcb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2f8fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f8e0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2f8e230"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2f8e3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f8e550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f8e6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2f8e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2f91b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2f91b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2f90020"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2f901b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f90340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2f904d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2f90660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f907f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2f90980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2f90b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2f90ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2f8b2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2f8b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f8b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2f8f020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2f8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f8f3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2f8f530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2f8f6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2f8f850"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2f8f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2f8eb40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2f8eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2f8c020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2f8c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f8c340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2f8c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f8c660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f8c7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2f8c980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f8cb10"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2f8cca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2f8ce30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2f8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2f862f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2f862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f86670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2f86800"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2f86990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f86b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f86cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2f86e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2f88220" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2f88220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2f885a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2f88730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f888c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2f88a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2f88be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f88d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2f87020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2f871b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2f87340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2f847a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2f847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f84b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2f87610" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2f87610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f87990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2f87b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2f87cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2f87e40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2f86020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2f85160" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2f85160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2f854e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2f85670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f85800"/>
        <function-ref name="get" scoped="" ref="0x7f35f2f85990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f85b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f85cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2f85e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f84020"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2f841b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2f84340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2f844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2f7f7a0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2f7f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f7fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2f7fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2f7fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f7e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f7e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2f7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2f816d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2f816d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2f81a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2f81be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f81d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2f80020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2f801b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f80340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2f804d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2f80660"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2f807f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2f7cc50" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2f7cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2f80ac0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2f80ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f80e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2f7f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2f7f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2f7f340"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2f7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2f7e610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2f7e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2f7e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2f7eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f7ecb0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2f7ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f7c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f7c1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2f7c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f7c4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2f7c660"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2f7c7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2f7c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2f77cb0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2f77cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f760a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2f76230"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2f763c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f76550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f766e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f2f76870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f35f2f79b30" loc="44:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f35f2f79b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2f78020"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2f781b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f78340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2f784d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2f78660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f787f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2f78980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2f78b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2f78ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f35f2f742f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f35f2f742f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f74670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f35f2f77020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f35f2f77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2f773a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2f77530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2f776c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2f77850"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2f779e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2f76b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2f76b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2f75020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2f751b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2f75340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2f754d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2f75660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2f757f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2f75980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2f75b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2f75ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2f75e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2f74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f35f2f6e240" loc="7:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f35f2f6e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f6e5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f35f2f72a90" loc="4:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f35f2f72a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f72e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f35f2f6f260" loc="5:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f35f2f6f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f6f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f35f2f6f9f0" loc="6:../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f35f2f6f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2f6fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f35f326f4c0" loc="55:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f35f326f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f35f326f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f35f35843b0" loc="51:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f35f35843b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f35f3584730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f35f35848c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f35f3584a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f35f33abbc0" loc="52:../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f35f33abbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f35f34e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f35f30cfb40" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f35f30cfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f35f2f36b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f35f2f361b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f35f2f36340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f35f2f364d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f35f2f36020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f35f2f36660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f35f2f367f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f35f2f36980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f35f2f2bdc0" loc="60:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f35f2f2bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2f29180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f35f2f37590" loc="57:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f35f2f37590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f35f2f37910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f35f2f2b6c0" loc="59:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f35f2f2b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2f2ba40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f35f2f37c00" loc="58:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f35f2f37c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2f2b020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f35f2f2b1b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f35f2f2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f35f365c410" loc="48:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f35f365c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f365c790"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f365c920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f35f35ed3a0" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f35f35ed3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f35ed720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f35f35ed8b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f35f35eda40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f35f3195040" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f35f3195040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f31953c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f3195550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f35f318f490" loc="57:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f35f318f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f35f318f810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f35f318f9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f35f318fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f35f3197140" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f35f3197140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f31974c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f35f3197650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f35f31977e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f35f2e9c9f0" loc="56:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f35f2e9c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f35f2e9cd70"/>
        <function-ref name="setRoot" scoped="" ref="0x7f35f2e9f020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f35f2e9f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f35f2e958b0" loc="58:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f2e958b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f2e95c30"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f2e95dc0"/>
        <function-ref name="start" scoped="" ref="0x7f35f2e9b020"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2e9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f35f2ed3750" loc="52:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f35f2ed3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f35f2ed3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f35f2e065f0" loc="71:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f35f2e065f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2e06970"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f2e06b00"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f2e06c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f2e06e20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f2e1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f35f2e0f5a0" loc="70:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f35f2e0f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f2e0f920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f2e0fab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f2e0fc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f2e0fdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f2e23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f35f2e2cb50" loc="62:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f35f2e2cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f35f2e94020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f35f2e941b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f35f2e94340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f35f2e37b60" loc="63:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f2e37b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f2e8e020"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f2e8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLUDP" ref="0x7f35f2e8fa20" loc="60:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLUDP" scoped="" ref="0x7f35f2e8fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f35f2e8fda0"/>
        <function-ref name="bind" scoped="" ref="0x7f35f2e99020"/>
        <function-ref name="sendtov" scoped="" ref="0x7f35f2e991b0"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f35f2e99340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f35f2ddd5c0" loc="224:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f35f2ddd5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f2ddd940"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f2dddad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f2e24130" loc="67:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f2e24130"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f2e244b0"/>
        <function-ref name="changed" scoped="" ref="0x7f35f2e24640"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f2e247d0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f2e24960"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f2e24af0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f2e24c80"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f2e24e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f35f2e9ad90" loc="57:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f35f2e9ad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f2e9e180"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2e9e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7f35f2eb4820" loc="53:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7f35f2eb4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2eb2cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2ebe300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2eb20d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2ebec00"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2eb1660"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2eb11e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2ebe780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2ed2480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2eb26e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f2ed2950"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2ed2e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f35f2e185b0" loc="69:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f2e185b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f2e18930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f2ebf0d0" loc="51:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f2ebf0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f2ebf450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f2ebf5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f2ebf770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f2ebf900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f2ebfa90"/>
        <function-ref name="get" scoped="" ref="0x7f35f2ebfc20"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f2ebfdb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f2ed34d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2ed3020"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f2ed31b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f2ed3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f35f2ea06b0" loc="55:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f35f2ea06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f35f2ea0a30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f2eaab10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f35f2eaaca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f35f2eaa020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f2eaa1b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f35f2eaa340"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f2eaa4d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f35f2eaa660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f35f2ea0d50"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f35f2eaa7f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f35f2eaa980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f35f2ea0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f35f2e1eac0" loc="68:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f2e1eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f35f2e2b020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f35f2e2b1b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f35f2e2b340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f35f2e2b4d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f35f2e2b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f35f2eb1c70" loc="54:TestRPLC.nc">
      <component-ref qname="TestRPLC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2eb1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2eac170"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2eaf720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2ead510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2ead090"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2eaca70"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2eac5f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2eafba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2eb08a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2eadb20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f2eb0d70"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2eaf2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f35f2dc5890" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f2dc5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f2dc5c10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f2dc5da0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f2dc2020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f2dc21b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f2dc2340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2dc24d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f2dc2660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f2dc2ca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2dc27f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f2dc2980"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f2dc2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f35f2db6910" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f35f2db6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2db6c90"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2db6e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2dbb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2dbb1b0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2dbb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2dbb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2dbb660"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2dbb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f2dc1c30" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f2dc1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2dbe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f35f2dbbb10" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f35f2dbbb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2dba020"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2dba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2dba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2dba4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2dba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2dba7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2dba980"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2dbab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f35f2dbe2a0" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f2dbe2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f2dbe620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f2dbe7b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f2dbe940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f2dbead0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f2dbec60"/>
        <function-ref name="get" scoped="" ref="0x7f35f2dbedf0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f2dbd020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f2dbd660"/>
        <function-ref name="set" scoped="" ref="0x7f35f2dbd1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f2dbd340"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f2dbd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f35f2dbae30" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f35f2dbae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2db41e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2db4370"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2db4500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2db4690"/>
        <function-ref name="get" scoped="" ref="0x7f35f2db4820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2db49b0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2db4b40"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2db4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f35f2dbf790" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f35f2dbf790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2dbfb10"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2dbfca0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2dbfe30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d98020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d98340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d984d0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d98660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f35f2d989c0" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f35f2d989c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d98d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d97020"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d97340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d97660"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d97980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f35f2d96e50" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f2d96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2d95210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f35f2d97ce0" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f35f2d97ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d96230"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d96550"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d96870"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d96a00"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d96b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f35f2d7f020" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f35f2d7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d7f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d7f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d7f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d7f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d7fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d7fd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d7e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d7e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d7e340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d7e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d7e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d7e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d7ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d7ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f35f2d6b020" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f35f2d6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d6b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d6b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d6b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d6b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d6b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d6bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d6bd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d6a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d6a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d6a340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d6a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d6a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d6a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d6aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d6ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f35f2d21560" loc="145:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f35f2d21560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d218e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d21a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d21c00"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d21d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d20020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d20340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d204d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d20660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d207f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d20980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d20b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d20ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d1f020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f35f2cfd570" loc="165:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f35f2cfd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cfd8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cfda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cfdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cfdda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cfc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cfc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cfc340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cfc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cfc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cfc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cfc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cfcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cfcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cfb020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cfb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f35f2d1f580" loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f35f2d1f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d1f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d1fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d1fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d1fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d1e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d1e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d1e340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d1e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d1e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d1e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d1e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d1eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d1eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d1d020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d1d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f35f2d67020" loc="71:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f35f2d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d67530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d676c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d67850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d67b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d67d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d66020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d66340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d66660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d66a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d66c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f35f2d52200" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f35f2d52200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d52580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d52710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d528a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d52a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d52bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d52d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d51020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d511b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d51340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d514d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d51660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d517f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d51980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d51c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d51da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f35f2d3e200" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f35f2d3e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d3e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d3e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d3e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d3ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d3ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d3ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d3d020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d3d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d3d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d3d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d3d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d3d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d3d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d3dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d3dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f35f2d2e200" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f35f2d2e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d2e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d2e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d2e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d2ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d2ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d2ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d2d020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d2d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d2d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d2d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d2d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d2d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d2d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d2dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d2dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f35f2d19580" loc="149:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f35f2d19580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d19900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d19a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d19c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d19db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d18020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d18340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d184d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d18660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d187f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d18980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d18b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d18ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d17020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f35f2d09570" loc="159:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f35f2d09570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d098f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d09a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d09c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d09da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d08020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d08340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d08660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d087f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d08980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d08b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d08ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d07020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f35f2cf4580" loc="171:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f35f2cf4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cf4900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cf4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cf4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cf4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cf3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cf31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cf3340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cf34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cf3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cf37f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cf3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cf3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cf3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cf2020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cf21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f35f2d79020" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f35f2d79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d79530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d796c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d79850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d799e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d79b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d79d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d78020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d781b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d78340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d784d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d78660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d787f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d78a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d78c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f35f2d17580" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f35f2d17580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d17900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d17a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d17c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d17db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d16020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d161b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d16340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d164d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d16660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d167f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d16980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d16b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d16ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d15020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f35f2d75020" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f35f2d75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d75530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d756c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d75850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d759e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d75b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d75d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d74020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d74340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d74660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d74a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d74c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f35f2d61020" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f35f2d61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d61530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d616c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d61850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d619e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d61b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d61d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d60020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d60340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d60660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d60a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d60c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f35f2d4c200" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f35f2d4c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d4c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d4c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d4c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d4ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d4cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d4cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d4b020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d4b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d4b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d4b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d4b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d4b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d4b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d4bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d4bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f35f2d38200" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f35f2d38200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d38580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d38710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d388a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d38a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d38bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d38d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d37020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d37340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d374d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d37660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d377f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d37980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d37c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d37da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f35f2d28200" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f35f2d28200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d28580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d28710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d288a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d28a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d28bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d28d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d27020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d271b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d27340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d274d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d27660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d277f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d27980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d27c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d27da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f35f2d83020" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f35f2d83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d83530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d836c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d83850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d839e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d83b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d83d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d82020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d821b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d82340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d824d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d82660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d827f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d82a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d82c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f35f2d6f020" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f35f2d6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d6f4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d6f630"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d6f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d6f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d6fae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d6fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d6fe00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d6e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d6e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d6e340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d6e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d6e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d6e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d6ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d6ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f35f2d5b020" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f35f2d5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d5b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d5b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d5b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d5b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d5b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d5bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d5bd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d5a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d5a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d5a340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d5a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d5a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d5a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d5aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d5ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f35f2d23580" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f35f2d23580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d23900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d23a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d23c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d23db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d22020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d221b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d22340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d224d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d22660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d227f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d22980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d22b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d22ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d21020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f35f2d03570" loc="162:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f35f2d03570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d038f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d03a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d03c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d03da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d02020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d02340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d024d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d02660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d027f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d02980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d02b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d02ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d01020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f35f2cf7570" loc="169:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f35f2cf7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cf78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cf7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cf7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cf7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cf5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cf51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cf5340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cf54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cf5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cf57f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cf5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cf5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cf5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cf4020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cf41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f35f2d0f580" loc="155:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f35f2d0f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d0f900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d0fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d0fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d0fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d0e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d0e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d0e340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d0e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d0e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d0e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d0e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d0eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d0eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d0d020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d0d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f35f2d57020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f35f2d57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d575a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d57730"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d578c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d57a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d57be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d57d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d56020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d561b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d56340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d564d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d56660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d567f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d56980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d56c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d56da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f35f2d42200" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f35f2d42200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d42580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d42710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d428a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d42a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d42bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d42d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d41020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d411b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d41340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d414d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d41660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d417f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d41980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d41c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d41da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f35f2d32200" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f35f2d32200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d32580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d32710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d328a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d32a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d32bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d32d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d31020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d311b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d31340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d314d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d31660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d317f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d31980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d31c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d31da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f35f2d01570" loc="163:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f35f2d01570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d018f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d01a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d01c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d01da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d00020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d00340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d004d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d00660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d007f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d00980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d00b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d00ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cff020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f35f2d15570" loc="152:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f35f2d15570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d158f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d15a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d15c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d15da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d14020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d14340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d14660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d147f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d14980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d14b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d14ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d13020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f35f2d7d020" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f35f2d7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d7d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d7d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d7d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d7d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d7d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d7db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d7dd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d7c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d7c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d7c340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d7c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d7c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d7c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d7ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d7cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f35f2d69020" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f35f2d69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d69530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d696c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d69850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d699e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d69b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d69d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d68020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d68340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d68660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d68a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d68c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f35f2d36200" loc="104:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f35f2d36200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d36580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d36710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d368a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d36a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d36bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d36d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d35020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d351b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d35340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d354d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d35660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d357f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d35980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d35c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d35da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f35f2d65020" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f35f2d65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d65530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d656c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d65850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d65b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d65d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d64020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d64340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d64660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d64a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d64c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f35f2d50200" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f35f2d50200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d50580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d50710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d508a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d50a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d50bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d50d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d4f020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d4f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d4f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d4f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d4f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d4f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d4f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d4fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d4fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f35f2d3c200" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f35f2d3c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d3c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d3c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d3c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d3ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d3cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d3cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d3b020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d3b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d3b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d3b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d3b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d3b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d3b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d3bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d3bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f35f2d2c200" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f35f2d2c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d2c580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d2c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d2c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d2ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d2cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d2cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d2b020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d2b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d2b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d2b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d2b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d2b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d2b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d2bc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d2bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f35f2d11580" loc="154:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f35f2d11580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d11900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d11a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d11c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d11db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d10020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d10340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d104d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d10660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d107f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d10980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d10b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d10ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d0f020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f35f2d91020" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f35f2d91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d91530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d916c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d91850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d919e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d91b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d91d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d90020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d901b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d90340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d904d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d90660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d907f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d90a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d90c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f35f2d73020" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f35f2d73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d73530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d736c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d73850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d73b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d73d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d72020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d72340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d72660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d72a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d72c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f35f2d5f020" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f35f2d5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d5f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d5f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d5f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d5f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d5f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d5fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d5fd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d5e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d5e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d5e340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d5e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d5e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d5e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d5ea80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d5ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f35f2d4a200" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f35f2d4a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d4a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d4a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d4a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d4aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d4abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d4ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d49020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d491b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d49340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d494d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d49660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d497f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d49980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d49c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d49da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f35f2d0d580" loc="156:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f35f2d0d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d0d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d0da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d0dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d0ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d0c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d0c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d0c340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d0c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d0c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d0c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d0c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d0cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d0cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d0b020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f35f2d07570" loc="160:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f35f2d07570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d078f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d07a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d07c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d07da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d06020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d06340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d064d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d06660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d067f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d06980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d06b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d06ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d05020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f35f2cfb570" loc="166:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f35f2cfb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cfb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cfba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cfbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cfbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cfa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cfa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cfa340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cfa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cfa660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cfa7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cfa980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cfab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cfaca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cf9020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f35f2d46200" loc="93:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f35f2d46200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d46580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d46710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d468a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d46a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d46bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d46d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d45020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d45340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d454d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d45660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d45980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d45c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d45da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f35f2d0b580" loc="157:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f35f2d0b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d0b900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d0ba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d0bc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d0bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d0a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d0a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d0a340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d0a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d0a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d0a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d0a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d0ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d0aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d09020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f35f2d81020" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f35f2d81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d813a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d81530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d816c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d81850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d819e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d81b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d81d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d80020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d801b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d80340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d804d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d80660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d807f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d80a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d80c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f35f2d6d020" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f35f2d6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d6d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d6d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d6d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d6d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d6d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d6db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d6dd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d6c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d6c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d6c340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d6c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d6c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d6c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d6ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d6cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f35f2d59020" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f35f2d59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d593a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d59530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d596c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d59850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d599e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d59b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d59d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d58020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d58340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d58660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d58a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d58c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f35f2d13580" loc="153:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f35f2d13580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d13900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d13a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d13c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d13db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d12020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d12340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d124d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d12660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d127f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d12980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d12b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d12ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d11020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f35f2cff570" loc="164:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f35f2cff570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cff8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cffa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cffc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cffda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cfe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cfe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cfe340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cfe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cfe660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cfe7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cfe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cfeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cfeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cfd020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cfd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f35f2d54200" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f35f2d54200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d54580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d54710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d548a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d54a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d54bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d54d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d53020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d531b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d53340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d534d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d53660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d537f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d53980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d53c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d53da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f35f2d40200" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f35f2d40200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d40580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d40710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d408a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d40a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d40bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d40d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d3f020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d3f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d3f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d3f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d3f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d3f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d3f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d3fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d3fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f35f2d30200" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f35f2d30200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d30580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d30710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d308a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d30a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d30bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d30d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d2f020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d2f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d2f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d2f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d2f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d2f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d2f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d2fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d2fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f35f2d7b020" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f35f2d7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d7b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d7b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d7b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d7b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d7b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d7bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d7bd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d7a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d7a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d7a340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d7a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d7a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d7a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d7aa80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d7ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f35f2d34200" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f35f2d34200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d34580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d34710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d348a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d34a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d34bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d34d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d33020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d33340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d334d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d33660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d337f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d33980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d33c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d33da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f35f2d77020" loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f35f2d77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d77530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d776c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d77850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d779e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d77b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d77d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d76020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d761b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d76340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d764d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d76660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d767f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d76a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d76c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f35f2d63020" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f35f2d63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d633a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d63530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d636c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d63850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d639e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d63b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d63d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d62020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d62340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d62660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d62a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d62c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f35f2d4e200" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f35f2d4e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d4e580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d4e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d4e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d4ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d4ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d4ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d4d020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d4d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d4d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d4d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d4d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d4d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d4d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d4dc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d4dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f35f2d3a200" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f35f2d3a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d3a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d3a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d3a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d3aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d3abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d3ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d39020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d391b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d39340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d394d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d39660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d397f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d39980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d39c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d39da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f35f2d2a200" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f35f2d2a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d2a580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d2a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d2a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d2aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d2abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d2ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d29020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d291b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d29340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d294d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d29660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d297f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d29980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d29c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d29da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f35f2d86020" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f35f2d86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d86530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d866c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d86850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d869e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d86b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d86d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d85020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d851b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d85340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d854d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d85660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d857f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d85a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d85c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f35f2d71020" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f35f2d71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d71530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d716c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d71850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d719e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d71b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d71d00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d70020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d70340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d70660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d70a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d70c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f35f2d5d020" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f35f2d5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d5d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d5d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d5d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d5d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d5d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d5db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d5dd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d5c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d5c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d5c340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d5c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d5c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d5c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d5ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d5cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f35f2d48200" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f35f2d48200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d48580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d48710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d488a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d48a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d48bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d48d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d47020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d471b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d47340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d474d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d47660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d477f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d47980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d47c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d47da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f35f2d1b560" loc="148:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f35f2d1b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d1b8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d1ba70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d1bc00"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d1bd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d1a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d1a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d1a340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d1a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d1a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d1a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d1a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d1ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d1aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d19020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f35f2d05570" loc="161:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f35f2d05570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d058f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d05a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d05c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d05da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d04020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d04340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d044d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d04660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d047f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d04980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d04b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d04ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d03020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f35f2d1d580" loc="147:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f35f2d1d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d1d900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d1da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d1dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d1ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d1c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d1c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d1c340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d1c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d1c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d1c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d1c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d1cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d1cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d1b020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f35f2d44200" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f35f2d44200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d44580"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d44710"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d448a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d44a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d44bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d44d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d43020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d431b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d43340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d434d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d43660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d437f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d43980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d43c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d43da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f35f2cf9570" loc="168:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f35f2cf9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cf98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cf9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cf9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cf9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cf8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cf81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cf8340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cf84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cf8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cf87f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cf8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cf8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cf8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cf7020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cf71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f35f2cf2580" loc="172:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f35f2cf2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cf2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cf2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cf2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cf2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cf1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cf11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cf1340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cf14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cf1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cf17f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cf1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cf1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cf1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cf0020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cf01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f35f2d251f0" loc="143:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f35f2d251f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2d25970"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2d25b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2d25c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2d25e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2d24020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2d241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2d24340"/>
        <function-ref name="get" scoped="" ref="0x7f35f2d244d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2d24660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2d247f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2d24980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2d24b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2d24ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2d23020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2d231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2cc76d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2cc76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cc7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cc7be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cc7d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cc6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cc61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cc6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cc64d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cc6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cc67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cc6980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cc6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cc6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cc6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cc5120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cc52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2cc2100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2cc2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cc2480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cc2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cc27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cc2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cc2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cc2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cc2de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cc1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cc11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cc1340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cc14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cc1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cc17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cc1a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cc1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2cbed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2cbed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cbd0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cbd270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cbd400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cbd590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cbd720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cbd8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cbda40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cbdbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cbdd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cbc020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cbc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cbc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cbc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cbc760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cbc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2cb9740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2cb9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cb9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cb9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cb9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cb8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cb81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cb8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cb84d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cb8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cb87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cb8980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cb8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cb8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cb8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cb7120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cb72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2cb4100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2cb4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2cb4480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2cb4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2cb47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2cb4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2cb4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2cb4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cb4de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cb3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cb31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cb3340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cb34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cb3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cb37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cb3a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cb3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2cb0d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2cb0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2caf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2caf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2caf400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2caf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2caf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2caf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2cafa40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2cafbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2cafd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2cae020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2cae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2cae340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2cae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2cae760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2cae8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2caa740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2caa740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2caaac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2caac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2caade0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2ca9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2ca91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2ca9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2ca94d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2ca9660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2ca97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2ca9980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2ca9b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2ca9ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2ca9e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2ca8120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2ca82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2ca5100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2ca5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2ca5480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2ca5610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2ca57a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2ca5930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2ca5ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2ca5c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2ca5de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2ca4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2ca41b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2ca4340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2ca44d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2ca4660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2ca47f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2ca4a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2ca4c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2ca1d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2ca1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2ca00e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2ca0270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2ca0400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2ca0590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2ca0720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2ca08b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2ca0a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2ca0bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2ca0d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c9f020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c9f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c9f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c9f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c9f760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c9f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c9c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c9c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c9cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c9cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c9cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c9b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c9b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c9b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c9b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c9b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c9b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c9b980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c9bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c9bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c9be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c9a120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c9a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c97100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c97100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c97480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c97610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c977a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c97930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c97ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c97c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c97de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c96020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c961b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c96340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c964d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c96660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c967f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c96a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c96c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c93d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c93d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c920e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c92270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c92400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c92590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c92720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c928b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c92a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c92bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c92d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c91020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c911b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c91340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c914d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c91760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c8e860" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c8e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c8ebe0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c8ed70"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c8d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c8d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c8d660"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c8d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c8d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c8db10"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c8dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c8de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c8c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c8c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c8c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c89270" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c89270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c895f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c89780"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c89910"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c89aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c89c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c89dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c87020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c871b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c87340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c874d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c87660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c877f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c87980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c87c10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c87da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c84d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c84d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c830e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c83270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c83400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c83590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c83720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c838b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c83a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c83bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c83d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c82020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c821b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c82340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c824d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c82760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c828f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c7f740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c7f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c7fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c7fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c7fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c7e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c7e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c7e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c7e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c7e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c7e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c7e980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c7eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c7eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c7ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c7d120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c7d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c7a100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c7a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c7a480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c7a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c7a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c7a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c7aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c7ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c7ade0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c79020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c791b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c79340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c794d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c79660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c797f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c79a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c79c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c76d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c76d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c750e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c75270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c75400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c75590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c75720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c758b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c75a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c75bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c75d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c74020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c741b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c74340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c744d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c74760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c748f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c71740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c71740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c71ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c71c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c71de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c70020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c701b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c70340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c704d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c70660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c707f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c70980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c70b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c70ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c70e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c6f120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c6f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c6c100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c6c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c6c480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c6c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c6c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c6c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c6cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c6cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c6cde0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c6b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c6b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c6b340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c6b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c6b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c6b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c6ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c6bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c68d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c68d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c670e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c67270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c67400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c67590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c67720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c678b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c67a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c67bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c67d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c66020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c661b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c66340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c664d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c66760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c668f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c63740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c63740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c63ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c63c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c63de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c61020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c611b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c61340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c614d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c61660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c617f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c61980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c61b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c61ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c61e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c60120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c5d100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c5d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c5d480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c5d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c5d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c5d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c5dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c5dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c5dde0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c5c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c5c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c5c340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c5c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c5c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c5c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c5ca80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c5cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c59d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c59d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c580e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c58270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c58400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c58590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c58720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c588b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c58a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c58bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c58d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c57020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c571b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c57340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c574d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c57760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c578f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c54a60" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c54a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c54de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c53020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c531b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c53340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c534d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c53660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c537f0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c53980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c53b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c53ca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c53e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c52020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c521b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c52440"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c525d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c4f460" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c4f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c4f7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c4f970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c4fb00"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c4fc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c4fe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c4e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c4e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c4e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c4e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c4e660"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c4e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c4e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c4eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c4eda0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c4be00" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c4be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c4a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c4a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c4a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c4a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c4a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c4a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c4ab20"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c4acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c4ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c49020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c49340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c49760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c46740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c46740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c46ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c46c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c46de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c45020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c45340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c454d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c45660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c457f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c45980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c45b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c45ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c45e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c44120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c41100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c41100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c41480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c41610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c417a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c41930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c41ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c41c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c41de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c40020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c401b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c40340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c404d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c40660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c407f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c40a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c40c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c3cd10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c3cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c3b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c3b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c3b400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c3b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c3b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c3b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c3ba40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c3bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c3bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c3a020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c3a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c3a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c3a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c3a760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c3a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c37740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c37740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c37ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c37c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c37de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c36020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c36340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c364d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c36660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c367f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c36980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c36b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c36ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c36e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c35120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c32100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c32100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c32480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c32610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c327a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c32930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c32ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c32c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c32de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c31020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c311b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c31340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c314d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c31660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c317f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c31a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c31c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c2ed10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c2ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c2d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c2d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c2d400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c2d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c2d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c2d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c2da40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c2dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c2dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c2c020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c2c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c2c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c2c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c2c760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c2c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c29740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c29740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c29ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c29c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c29de0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c28020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c28340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c284d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c28660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c287f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c28980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c28b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c28ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c28e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c27120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c272b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c24100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c24100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c24480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c24610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c247a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c24930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c24ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c24c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c24de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c23020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c231b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c23340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c234d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c23660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c237f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c23a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c23c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c20d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c20d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c1f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c1f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c1f400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c1f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c1f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c1f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c1fa40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c1fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c1fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c1e020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c1e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c1e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c1e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c1e760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c1e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c1b740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c1b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c1bac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c1bc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c1bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c19020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c191b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c19340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c194d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c19660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c197f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c19980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c19b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c19ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c19e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c18120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c15100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c15100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c15480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c15610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c157a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c15930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c15ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c15c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c15de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c14020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c141b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c14340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c144d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c14660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c147f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c14a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c14c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c11d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c11d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c100e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c10270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c10400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c10590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c10720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c108b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c10a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c10bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c10d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c0f020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c0f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c0f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c0f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c0f760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c0f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c0c740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c0c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c0cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c0cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c0cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c0b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c0b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c0b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c0b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c0b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c0b980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c0bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c0bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c0be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c0a120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c0a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c07100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c07100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c07480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c07610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c077a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c07930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c07ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c07c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c07de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c06020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c061b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c06340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c064d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c06660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c067f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c06a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c06c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2c03d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2c03d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2c020e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2c02270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2c02400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2c02590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2c02720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2c028b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2c02a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2c02bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2c02d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2c01020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2c011b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2c01340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2c014d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2c01760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2c018f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2bfe740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2bfe740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2bfeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2bfec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2bfede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2bfd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2bfd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2bfd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2bfd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2bfd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2bfd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2bfd980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2bfdb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2bfdca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2bfde30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2bfc120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2bfc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2bf9100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2bf9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2bf9480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2bf9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2bf97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2bf9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2bf9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2bf9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2bf9de0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2bf8020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2bf81b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2bf8340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2bf84d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2bf8660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2bf87f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2bf8a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2bf8c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2bf5d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2bf5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2bf30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2bf3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2bf3400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2bf3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2bf3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2bf38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2bf3a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2bf3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2bf3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2bf2020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2bf21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2bf2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2bf24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2bf2760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2bf28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2bef740" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2bef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2befac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2befc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2befde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2bee020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2bee1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2bee340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2bee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2bee660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2bee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2bee980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2beeb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2beeca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2beee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2bed120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2bed2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2bea100" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2bea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2bea480"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2bea610"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2bea7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2bea930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2beaac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2beac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2beade0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2be9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2be91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2be9340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2be94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2be9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2be97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2be9a80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2be9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f35f2be6d10" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f35f2be6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2be50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2be5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2be5400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2be5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2be5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2be58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2be5a40"/>
        <function-ref name="get" scoped="" ref="0x7f35f2be5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2be5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2be4020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2be41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2be4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2be44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2be4760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2be48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f2b6d2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2b6d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2b6d670"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2b6d800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2b6d990"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2b6db20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2b6dcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2b6de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2b6c020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2b6c1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2b6c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2b6c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2b6c660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2b6c7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2b6c980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2b6cc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2b6cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f2b7e020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2b7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2b7e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2b7e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2b7e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2b7e850"/>
        <function-ref name="get" scoped="" ref="0x7f35f2b7e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2b7eb70"/>
        <function-ref name="set" scoped="" ref="0x7f35f2b7ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2b6d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f2b69de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2b69de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2b68180"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2b68310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2b684a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2b68630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2b687c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2b68950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2b68ae0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2b68c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2b68e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2b67020"/>
        <function-ref name="set" scoped="" ref="0x7f35f2b671b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2b67340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2b674d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2b67760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2b678f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f2b6ab90" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2b6ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2b69020"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2b691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2b69340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2b694d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2b69660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2b697f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2b69980"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2b69b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f2b63930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2b63930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2b63cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2b63e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2b62020"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2b621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2b62340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2b624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2b62660"/>
        <function-ref name="get" scoped="" ref="0x7f35f2b627f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2b62980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2b62b10"/>
        <function-ref name="set" scoped="" ref="0x7f35f2b62ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2b62e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2b61020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2b612b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2b61440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f2b65710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2b65710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2b65a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2b65c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2b65db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2b63020"/>
        <function-ref name="get" scoped="" ref="0x7f35f2b631b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2b63340"/>
        <function-ref name="set" scoped="" ref="0x7f35f2b634d0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2b63660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f2b54640" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2b54640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f29a8c40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f29a91e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f29a8020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f29a9ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f29a7590"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f29a7110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f29a9660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f29ab390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f29a8630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f29ab860"/>
        <function-ref name="stop" scoped="" ref="0x7f35f29abd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f35f2b4b610" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b4b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2b47c40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2b491e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2b47020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2b49ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2b46590"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2b46110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2b49660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2b4a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2b47630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f2b4a860"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2b4ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f35f2b411d0" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f35f2b411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2b3e630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2b40c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2b3f9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2b3f550"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2b3c020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2b3eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2b3f0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2b41dc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2b3e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f2b402e0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2b407b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f35f2b39a80" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f35f2b39a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f2b3b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f2b43400" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f2b43400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2b43780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f2a47020" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f2a47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2a44870"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2a46840"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f2a44220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2a46d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f2a44d30"/>
        <function-ref name="start" scoped="" ref="0x7f35f2a47e30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2a46380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f2a48760" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f2a48760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2a48ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f0a864f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f0a864f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f0a84db0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0a85da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f0a84760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f0a842a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f0a832a0"/>
        <function-ref name="start" scoped="" ref="0x7f35f0a853d0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0a858e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0a88c40" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0a88c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0a86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f35f0a6eda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f0a6eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f0a6d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f0a6d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f0a6d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f0a6d630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0a6d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f35f0a70340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f0a70340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f0a706c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f0a70850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f0a709e0"/>
        <function-ref name="get" scoped="" ref="0x7f35f0a70b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f0a70d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f0a6f020"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f0a6f1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f0a6f340"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f0a6f4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f0a6f660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f0a6f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f35f0a6fa80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f0a6fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f0a6fe00"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f0a6e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f0a6e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f0a6e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f0a6e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f0a6e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f0a6e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f0a6e980"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f0a6eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f35f2b16ba0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f2b16ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2b15020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f2b151b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f2b15340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f2b154d0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2b15660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f35f2b1a4d0" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2b1a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2b1a850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2b1a9e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2b1ab70"/>
        <function-ref name="get" scoped="" ref="0x7f35f2b1ad00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2b19020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2b191b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2b19340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2b194d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2b19660"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2b197f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2b19980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f35f2b17280" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f2b17280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2b17600"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2b17790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2b17920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2b17ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2b17c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2b17dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2b16020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f2b161b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2b16340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f35f0a64a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f0a64a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f0a64e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f0a63020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f0a631b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f0a63340"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0a634d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f35f0a66190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f0a66190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f0a66510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f0a666a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f0a66830"/>
        <function-ref name="get" scoped="" ref="0x7f35f0a669c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f0a66b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f0a66ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f0a66e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f0a65030"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f0a651c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f0a65350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f0a654e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f0a6a020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f0a6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f0a67870"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0a68840"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f0a67220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f0a68d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f0a67d30"/>
        <function-ref name="start" scoped="" ref="0x7f35f0a6ae30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0a68380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0a6b660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0a6b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0a6b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f35f0a65770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f0a65770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f0a65af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f0a65c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f0a65e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f0a64020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f0a641b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f0a64340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f0a644d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f0a64660"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f0a647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f35f2ac5020" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f2ac5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f2ac5e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2ac4800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2ac4340"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2ac4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f35f2abc020" loc="43:../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f35f2abc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f2abce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2aba800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2aba340"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2abacc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f35f2aa82c0" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f2aa82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2aa8640"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f2aa87d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2aa8960"/>
        <function-ref name="get" scoped="" ref="0x7f35f2aa8af0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f2aa8c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2aa8e10"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2aa7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2aa71b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2aa7340"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f2aa74d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f2aa7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f35f2ab70a0" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f2ab70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f2aaa020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2aaa9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2aaa4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2aaae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f35f2a86540" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f35f2a86540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f2a853d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2a85d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2a85890"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2a84260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f35f2a890f0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f2a890f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f2a88020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f2a889a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2a884e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f2a88e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f0a80890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f0a80890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f0a7d0d0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0a7e0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f0a7ea50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f0a7e590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f0a7d590"/>
        <function-ref name="start" scoped="" ref="0x7f35f0a7f6e0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0a7fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f35f0a790a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f35f0a790a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f0a77b30"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0a789f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f0a774e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f0a77020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f0a76020"/>
        <function-ref name="start" scoped="" ref="0x7f35f0a78020"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0a78530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f35f0a7dc00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f0a7dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f0a7ca80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f0a7b4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f0a7b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f0a7b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f35f2a12490" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f35f2a12490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f2a12810"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f2a129a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f35f2a151d0" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f2a151d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2a13b30"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2a149f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f2a134e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2a13020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f2a12020"/>
        <function-ref name="start" scoped="" ref="0x7f35f2a14020"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2a14530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f2a1ccf0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2a1ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2a17220"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2a197c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2a18590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2a18110"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2a17b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2a176a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2a19c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2a1a940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2a18ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f2a1ae10"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2a19340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f35f29c1e80" loc="71:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f35f29c1e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f29c0220"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f29c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f35f29c7c30" loc="49:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f35f29c7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f29c1110"/>
        <function-ref name="fired" scoped="" ref="0x7f35f29c46a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f29c34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f29c3020"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f29c1a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f29c1590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f29c4b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f29c5860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f29c3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f29c5d30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f29c4220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f29cc690" loc="48:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f29cc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f29c8cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f29ca260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f29c8090"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f29caba0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f29c7680"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f29c71e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f29ca700"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f29cb390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f29c86c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f29cb880"/>
        <function-ref name="stop" scoped="" ref="0x7f35f29cbd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f35f29becf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f35f29becf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f29bd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f35f29b3020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f29b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f29b3e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f29b2800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f29b2340"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f29b2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f29a5020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestRPLAppC.Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f29a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f29a1630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f29a4a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f29a2920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f29a24a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f29a0020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f29a1ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f29a2020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f29a5c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f29a1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f29a4110"/>
        <function-ref name="stop" scoped="" ref="0x7f35f29a45e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f35f299c4e0" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f299c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f299c860"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f299c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f35f2998370" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f35f2998370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f299c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f299f4f0" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f299f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f299f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f35f29944e0" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f29944e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f2994860"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f29949f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f35f2995390" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f35f2995390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f2994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f299ba90" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f299ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f299be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x7f35f2976e60" loc="72:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRank" scoped="" ref="0x7f35f2976e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f35f2985210"/>
        <function-ref name="isRoot" scoped="" ref="0x7f35f29853a0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f35f2985530"/>
        <function-ref name="hasParent" scoped="" ref="0x7f35f29856c0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f2985850"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f35f29859e0"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f2985b70"/>
        <function-ref name="getEtx" scoped="" ref="0x7f35f2985d00"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f35f2984020"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f35f29841b0"/>
        <function-ref name="isParent" scoped="" ref="0x7f35f2984340"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f35f29844d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f2984660"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f35f29848f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f35f2975a80" loc="76:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f35f2975a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f2975e00"/>
        <function-ref name="recv" scoped="" ref="0x7f35f2974020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f2984bb0" loc="73:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f2984bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f2975020"/>
        <function-ref name="stop" scoped="" ref="0x7f35f29751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f35f29813b0" loc="71:../../../tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f35f29813b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f2981730"/>
        <function-ref name="recv" scoped="" ref="0x7f35f29818c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x7f35f2925230" loc="91:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f35f2925230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f35f29255b0"/>
        <function-ref name="initiate" scoped="" ref="0x7f35f2925740"/>
        <function-ref name="linkResult" scoped="" ref="0x7f35f29258d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f292d020" loc="89:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f292d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f292d3a0"/>
        <function-ref name="changed" scoped="" ref="0x7f35f292d530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f292d6c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f292d850"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f292d9e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f292db70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f292dd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f35f2933c70" loc="86:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f35f2933c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f2935020"/>
        <function-ref name="recv" scoped="" ref="0x7f35f29351b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f35f2914510" loc="93:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f2914510"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f35f292a340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f35f2914a20"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f35f2914bb0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f35f2914d40"/>
        <function-ref name="matchContext" scoped="" ref="0x7f35f292a020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f35f2914890"/>
        <function-ref name="getContext" scoped="" ref="0x7f35f292a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f35f291d2c0" loc="92:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f35f291d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f35f291d640"/>
        <function-ref name="OCP" scoped="" ref="0x7f35f291d7d0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f35f291d960"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f291daf0"/>
        <function-ref name="resetRank" scoped="" ref="0x7f35f291dc80"/>
        <function-ref name="getOCP" scoped="" ref="0x7f35f291de10"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f35f292b020"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f35f292b1b0"/>
        <function-ref name="getParent" scoped="" ref="0x7f35f292b340"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f35f292b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x7f35f293a800" loc="80:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f35f293a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f35f293ab80"/>
        <function-ref name="isRoot" scoped="" ref="0x7f35f293ad10"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f35f2939020"/>
        <function-ref name="hasParent" scoped="" ref="0x7f35f29391b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f2939340"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f35f29394d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f2939660"/>
        <function-ref name="getEtx" scoped="" ref="0x7f35f29397f0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f35f2939980"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f35f2939b10"/>
        <function-ref name="isParent" scoped="" ref="0x7f35f2939ca0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f35f2939e30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f2938020"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f35f29382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x7f35f2933580" loc="83:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLParentTable" scoped="" ref="0x7f35f2933580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f2933900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x7f35f2934760" loc="88:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RouteInfo" scoped="" ref="0x7f35f2934760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f35f2934ae0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f2932b10"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f35f2932ca0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f35f2932020"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f29321b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f35f2932340"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f29324d0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f35f2932660"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f35f2934e00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f35f29327f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f35f2932980"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f35f2934c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f35f292c020" loc="90:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f292c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f35f292c3a0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f35f292c530"/>
        <function-ref name="delRoute" scoped="" ref="0x7f35f292c6c0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f35f292c850"/>
        <function-ref name="addRoute" scoped="" ref="0x7f35f292c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f35f292ecc0" loc="87:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f35f292ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f35f29340a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f35f2934230"/>
        <function-ref name="findTLV" scoped="" ref="0x7f35f29343c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x7f35f28ca380" loc="355:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="newParentSearch" scoped="" ref="0x7f35f28ca380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f28ca800"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f28ca990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f2938570" loc="81:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f2938570"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f29388f0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2938a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x7f35f2938dc0" loc="82:../../../tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x7f35f2938dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f2936180"/>
        <function-ref name="recv" scoped="" ref="0x7f35f2936310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f35f283c080" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f35f283c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f35f283c400"/>
        <function-ref name="setRoot" scoped="" ref="0x7f35f283c590"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f35f283c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x7f35f283b320" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x7f35f283b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f35f283b6a0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f283a670"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f35f283a800"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f35f283bb50"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f283bce0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f35f283be70"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f283a030"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f35f283a1c0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f35f283b9c0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f35f283a350"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f35f283a4e0"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f35f283b830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f283c9e0" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f283c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f283cd60"/>
        <function-ref name="stop" scoped="" ref="0x7f35f283b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f35f2756880" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f35f2756880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f35f2756c00"/>
        <function-ref name="setRoot" scoped="" ref="0x7f35f2756d90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f35f2755020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x7f35f2753ab0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIS" scoped="" ref="0x7f35f2753ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f2753e30"/>
        <function-ref name="recv" scoped="" ref="0x7f35f2752020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x7f35f273fa10" loc="62:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f35f273fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f35f273d020"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f35f273d1b0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f35f273d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x7f35f273bac0" loc="161:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="computeRemaining" scoped="" ref="0x7f35f273bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f273be40"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f273a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x7f35f274d730" loc="56:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InitDISTimer" scoped="" ref="0x7f35f274d730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2749c40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f274b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2749020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f274bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2748590"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2748110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f274b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f274c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2749630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f274c860"/>
        <function-ref name="stop" scoped="" ref="0x7f35f274cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f35f2743e00" loc="58:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f2743e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f27421c0"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f2742350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x7f35f27523d0" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TrickleTimer" scoped="" ref="0x7f35f27523d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f274e870"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2751e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2750c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2750780"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f274d1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f274ecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2750300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2751020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f274e260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f27514f0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f27519c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f35f273aad0" loc="125:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="init" scoped="" ref="0x7f35f273aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f273ae50"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f2739020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f2740270" loc="60:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f2740270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f27405f0"/>
        <function-ref name="changed" scoped="" ref="0x7f35f2740780"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f2740910"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f2740aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f2740c30"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f2740dc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f273f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x7f35f27392f0" loc="124:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDISTask" scoped="" ref="0x7f35f27392f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f2739670"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f2739800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x7f35f2753310" loc="52:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DIO" scoped="" ref="0x7f35f2753310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f2753690"/>
        <function-ref name="recv" scoped="" ref="0x7f35f2753820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f35f273ca40" loc="64:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f273ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="getContext" scoped="" ref="0x7f35f273b7f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f35f273b020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f35f273b1b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f35f273b340"/>
        <function-ref name="matchContext" scoped="" ref="0x7f35f273b4d0"/>
        <function-ref name="havePrefix" scoped="" ref="0x7f35f273cdc0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f35f273b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f35f27425e0" loc="59:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f35f27425e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f35f2742960"/>
        <function-ref name="isRoot" scoped="" ref="0x7f35f2742af0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f35f2742c80"/>
        <function-ref name="hasParent" scoped="" ref="0x7f35f2742e10"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f2741020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f35f27411b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f2741340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f35f27414d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f35f2741660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f35f27417f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f35f2741980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f35f2741b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f2741ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f35f2740020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x7f35f273d590" loc="63:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f35f273d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f35f273d910"/>
        <function-ref name="OCP" scoped="" ref="0x7f35f273daa0"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f35f273dc30"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f273ddc0"/>
        <function-ref name="resetRank" scoped="" ref="0x7f35f273c020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f35f273c1b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f35f273c340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f35f273c4d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f35f273c660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f35f273c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x7f35f273a2f0" loc="126:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDIO" scoped="" ref="0x7f35f273a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f273a670"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f273a800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x7f35f2739ad0" loc="123:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDIOTask" scoped="" ref="0x7f35f2739ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f2739e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f2738020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x7f35f2748ae0" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x7f35f2748ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2743110"/>
        <function-ref name="fired" scoped="" ref="0x7f35f27465b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f27444a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2744020"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2743a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2743590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2746a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2747750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2744ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f2747c20"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2746130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x7f35f2755a10" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f35f2755a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f35f2755d90"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f35f2754e30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f35f2753020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f35f2754340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f27544d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f35f2754660"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f27547f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f35f2754980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f35f2754b10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f35f2754ca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f2754020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f35f27541b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x7f35f273f2b0" loc="61:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RankControl" scoped="" ref="0x7f35f273f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f273f630"/>
        <function-ref name="stop" scoped="" ref="0x7f35f273f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f2755270" loc="48:../../../tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f2755270"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f27555f0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2755780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f2732140" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f2732140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f272e630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2731b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f272f920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f272f4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f272d020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f272eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f272f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2732d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f272e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f2731220"/>
        <function-ref name="stop" scoped="" ref="0x7f35f27316f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f272cb00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f272cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2727110"/>
        <function-ref name="fired" scoped="" ref="0x7f35f27295b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f27284a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2728020"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f2727a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2727590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2729a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f272b750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2728ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f272bc20"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2729130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f27254e0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f27254e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f2721a20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2722020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f2722da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f2722920"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f27204a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f2720020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f27224a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f2723110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f2721410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f27235e0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f2723ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f35f271e8d0" loc="30:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f271e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f271ec50"/>
        <function-ref name="changed" scoped="" ref="0x7f35f271ede0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f271a020"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f271a1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f271a340"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f271a4d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f271a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f35f2719020" loc="31:../../../tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f35f2719020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f35f27193a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f35f270e800" loc="36:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f270e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f35f270eb80"/>
        <function-ref name="changed" scoped="" ref="0x7f35f270ed10"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f2713020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f27131b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f2713340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x7f35f2715020" loc="32:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f2715020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f27153a0"/>
        <function-ref name="changed" scoped="" ref="0x7f35f2715530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f27156c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f2715850"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f27159e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f2715b70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f2715d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetIPAddress" ref="0x7f35f27144a0" loc="33:../../../tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f35f27144a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f35f2714820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f35f2718690" loc="3:../../../tos/chips/cc2420/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f2718690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f35f2718a10"/>
        <function-ref name="changed" scoped="" ref="0x7f35f2718ba0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f2718d30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f26d1020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f26d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f35f26cdda0" loc="8:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f26cdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f35f26cc180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f35f26bfb80" loc="10:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f35f26bfb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f35f26cb020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f35f26cb1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f35f26cb340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f35f26cb4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f35f26cb660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f26cb7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f35f26cb980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f35f26cbb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f35f26cbca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f35f26cbe30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f26ca020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f26ca1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f35f26ca340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f35f26ca5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f35f26ca760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x7f35f26ce300" loc="5:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f26ce300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f35f26ce680"/>
        <function-ref name="changed" scoped="" ref="0x7f35f26ce810"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f26ce9a0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f26ceb30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f26cecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f26d1c50" loc="4:../../../tos/chips/cc2420/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f26d1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f26ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f35f26ab020" loc="4:LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f26ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f35f26ab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f35f26a17e0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f35f26a17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f35f26a1b60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f35f26a1cf0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f35f26a1e80"/>
        <function-ref name="syncDone" scoped="" ref="0x7f35f269c030"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f35f269c1c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f269c350"/>
        <function-ref name="setChannel" scoped="" ref="0x7f35f269c4e0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f35f269c670"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f35f269c800"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f35f269c990"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f269cb20"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f269ccb0"/>
        <function-ref name="sync" scoped="" ref="0x7f35f269ce40"/>
        <function-ref name="getChannel" scoped="" ref="0x7f35f269b120"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f35f269b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f35f26931b0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f35f26931b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f2693da0"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f2692260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f35f2695d90" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f35f2695d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f35f269a180"/>
        <function-ref name="rfOff" scoped="" ref="0x7f35f269a310"/>
        <function-ref name="rxOn" scoped="" ref="0x7f35f269a4a0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f35f269a630"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f35f269a7c0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f35f269a950"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f35f269aae0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f35f269ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f269d980" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f269d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f269dd00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f26a1020"/>
        <function-ref name="request" scoped="" ref="0x7f35f26a11b0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f26a1340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f26a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f35f268d9f0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f35f268d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f35f268dd70"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f35f268b020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f35f268b1b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f35f268b340"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f35f268b4d0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f268b660"/>
        <function-ref name="setChannel" scoped="" ref="0x7f35f268b7f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f35f268b980"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f35f268bb10"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f35f268bca0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f268be30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f268a020"/>
        <function-ref name="sync" scoped="" ref="0x7f35f268a1b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f35f268a440"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f35f268a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f35f266c8e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f266c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f266cc60"/>
        <function-ref name="write" scoped="" ref="0x7f35f266cdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f35f2687450" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f2687450"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f35f26877d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f35f2687e40" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f35f2687e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f26836e0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f26856b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f2683090"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f2685b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f2683ba0"/>
        <function-ref name="start" scoped="" ref="0x7f35f2686ca0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f26851f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f35f26705f0" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f26705f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f2670970"/>
        <function-ref name="write" scoped="" ref="0x7f35f2670b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f35f2681380" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f35f2681380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2681700"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2681890"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2681a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2681bb0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2681d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2680020"/>
        <function-ref name="set" scoped="" ref="0x7f35f26801b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2680340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f35f2689cd0" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f35f2689cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f2688940"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f2688dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f35f265a820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f35f265a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f265aba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f265ad30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f35f266b1c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f35f266b1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f266b540"/>
        <function-ref name="write" scoped="" ref="0x7f35f266b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f35f266ba70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f35f266ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f266bdf0"/>
        <function-ref name="write" scoped="" ref="0x7f35f266a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f35f26753d0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f35f26753d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f2675750"/>
        <function-ref name="write" scoped="" ref="0x7f35f26758e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f35f2676810" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f35f2676810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f35f2676b90"/>
        <function-ref name="changed" scoped="" ref="0x7f35f2676d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7f35f267d020"/>
        <function-ref name="setAddress" scoped="" ref="0x7f35f267d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f35f26820e0" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f35f26820e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2682460"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f26825f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2682780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2682910"/>
        <function-ref name="get" scoped="" ref="0x7f35f2682aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2682c30"/>
        <function-ref name="set" scoped="" ref="0x7f35f2682dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2681020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f35f2669120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f2669120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f26696a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f35f26806a0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f35f26806a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2680a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2680bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2680d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f267f020"/>
        <function-ref name="get" scoped="" ref="0x7f35f267f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f267f340"/>
        <function-ref name="set" scoped="" ref="0x7f35f267f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f267f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f268e610" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f268e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f268e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f35f266c020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f266c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f266c3a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f266c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f35f2669a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f35f2669a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f2669dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f35f26681d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f35f26681d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f2668550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f26686e0"/>
        <function-ref name="request" scoped="" ref="0x7f35f2668870"/>
        <function-ref name="granted" scoped="" ref="0x7f35f2668a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f2668b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f35f2666d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f35f2666d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f2665180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f2665310"/>
        <function-ref name="request" scoped="" ref="0x7f35f26654a0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f2665630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f26657c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f35f268a8d0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f35f268a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f35f268ac50"/>
        <function-ref name="rfOff" scoped="" ref="0x7f35f268ade0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f35f2689020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f35f26891b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f35f2689340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f35f26894d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f35f2689660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f35f26897f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f35f2675c80" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f35f2675c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f26700a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f2670230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f35f266eb00" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f35f266eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f266ee80"/>
        <function-ref name="write" scoped="" ref="0x7f35f2675030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f35f26672b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f35f26672b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f2667630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f2665a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f2665a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f2665e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f2664020"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f26641b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f2664340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f26644d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2664660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f26647f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f2664e30"/>
        <function-ref name="set" scoped="" ref="0x7f35f2664980"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f2664b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f2664ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f35f265b940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f35f265b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f265bcc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f265be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f268ec80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f268ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f268d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f268d230"/>
        <function-ref name="request" scoped="" ref="0x7f35f268d3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f268d550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f268d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f35f2679520" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f35f2679520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f26798a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f2679a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f35f2671a90" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f35f2671a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f2679020"/>
        <function-ref name="write" scoped="" ref="0x7f35f26791b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f35f267e0e0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f35f267e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f267e460"/>
        <function-ref name="disable" scoped="" ref="0x7f35f267e5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f35f267e780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f35f267e910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f35f2666020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f35f2666020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f26663a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f2666530"/>
        <function-ref name="request" scoped="" ref="0x7f35f26666c0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f2666850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f26669e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f35f26679c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f35f26679c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f2667d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f25e37e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f25e37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f25e3b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f35f25df220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f35f25df220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f25ddb30"/>
        <function-ref name="fired" scoped="" ref="0x7f35f25dea60"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f25dd4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f25dd020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f25db020"/>
        <function-ref name="start" scoped="" ref="0x7f35f25de090"/>
        <function-ref name="stop" scoped="" ref="0x7f35f25de5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f25d9260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f25d9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f25d95e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f35f25d9af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f35f25d9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f259f390"/>
        <function-ref name="fired" scoped="" ref="0x7f35f25a0360"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f25a0ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f25a0820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f259f850"/>
        <function-ref name="start" scoped="" ref="0x7f35f25a1970"/>
        <function-ref name="stop" scoped="" ref="0x7f35f25a1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f092bab0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f092bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f0927390"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0928340"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f0928cc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f0928800"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f0927850"/>
        <function-ref name="start" scoped="" ref="0x7f35f09298f0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0929e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f092b260" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f092b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f092b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f0923c20" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f0923c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f09204e0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f09214e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f0921e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f09219a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f09209a0"/>
        <function-ref name="start" scoped="" ref="0x7f35f0922a80"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0921020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f09233d0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f09233d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0923750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f35f090a440" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f090a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f090a7c0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f090a950"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f090aae0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f090ac70"/>
        <function-ref name="fired" scoped="" ref="0x7f35f090ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f35f090d9d0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f090d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f090dd50"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f090c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f090c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f35f090c340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f090c4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f090c660"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f090c7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f090c980"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f090cb10"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f090cca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f090ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f35f090b120" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f090b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f090b4a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f090b630"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f090b7c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f090b950"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f090bae0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f090bc70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f090be00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f090a020"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f090a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f35f09000c0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f35f09000c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f0900440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f35f09005d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f35f0900760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f35f09008f0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0900a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f35f0903710" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f35f0903710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f0903a90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f0903c20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f0903db0"/>
        <function-ref name="get" scoped="" ref="0x7f35f0902020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f09021b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f0902340"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f09024d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f0902660"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f09027f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f35f0902980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f35f0902b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f09065b0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f09065b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f0904df0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0905df0"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f09047a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f09042e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f09032e0"/>
        <function-ref name="start" scoped="" ref="0x7f35f0905420"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0905930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0908ca0" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0908ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f09060a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f35f0902da0" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f0902da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f0901180"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f0901310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f09014a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f0901630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f09017c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f0901950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f0901ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f0901c70"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f0901e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f35f25c3080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f25c3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f25c2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f25c29a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f25c24e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f25c2e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f35f25ba0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f35f25ba0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f25b9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f25b99a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f25b94e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f25b9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f35f25becd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f25becd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f25bdb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f25bc550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f25bc090"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f25bca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f35f091c020" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f35f091c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f091a870"/>
        <function-ref name="fired" scoped="" ref="0x7f35f091b840"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f091a220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f091bd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f091ad30"/>
        <function-ref name="start" scoped="" ref="0x7f35f091ce30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f091b380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f35f0916780" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f35f0916780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f0913020"/>
        <function-ref name="fired" scoped="" ref="0x7f35f0914020"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f09149a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f09144e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f09134e0"/>
        <function-ref name="start" scoped="" ref="0x7f35f09155d0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0915ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f35f09193d0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f09193d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f0918240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f0918bc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f0918700"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f09160d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f35f2598090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f35f2598090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2598410"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f25985a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2598730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f25988c0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2598a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2598be0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2598d70"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2597020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f35f2597390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f35f2597390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2597710"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f25978a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2597a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2597bc0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2597d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2596020"/>
        <function-ref name="set" scoped="" ref="0x7f35f25961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2596340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f35f25966a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f35f25966a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2596a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2596bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2596d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2595020"/>
        <function-ref name="get" scoped="" ref="0x7f35f25951b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2595340"/>
        <function-ref name="set" scoped="" ref="0x7f35f25954d0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2595660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f35f259ae60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f35f259ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2599210"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f25993a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2599530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f25996c0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2599850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f25999e0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2599b70"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2599d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f35f2594ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f35f2594ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f25930a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2593230"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f25933c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2593550"/>
        <function-ref name="get" scoped="" ref="0x7f35f25936e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2593870"/>
        <function-ref name="set" scoped="" ref="0x7f35f2593a00"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2593b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f35f25e0b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f35f25e0b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f259a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f259a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f259a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f259a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f259a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f259a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f259a980"/>
        <function-ref name="clr" scoped="" ref="0x7f35f259ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f35f25959b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f35f25959b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2595d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2594020"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f25941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2594340"/>
        <function-ref name="get" scoped="" ref="0x7f35f25944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2594660"/>
        <function-ref name="set" scoped="" ref="0x7f35f25947f0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2594980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f25902f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f25902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2590670"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2590800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2590990"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2590b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2590cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2590e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f258f020"/>
        <function-ref name="get" scoped="" ref="0x7f35f258f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f258f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f258f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f258f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f258f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f258f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f258fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f35f258fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f2591020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2591020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f25913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2591530"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f25916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2591850"/>
        <function-ref name="get" scoped="" ref="0x7f35f25919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2591b70"/>
        <function-ref name="set" scoped="" ref="0x7f35f2591d00"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2590020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f258cde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f258cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f258b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f258b310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f258b4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f258b630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f258b7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f258b950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f258bae0"/>
        <function-ref name="get" scoped="" ref="0x7f35f258bc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f258be00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f258a020"/>
        <function-ref name="set" scoped="" ref="0x7f35f258a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f258a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f258a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f258a760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f258a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f258db60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f258db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f258c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f258c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f258c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f258c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f258c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f258c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f258c980"/>
        <function-ref name="clr" scoped="" ref="0x7f35f258cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f2586930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2586930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2586cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2586e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2585020"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f25851b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2585340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f25854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2585660"/>
        <function-ref name="get" scoped="" ref="0x7f35f25857f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2585980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2585b10"/>
        <function-ref name="set" scoped="" ref="0x7f35f2585ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2585e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2584020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f25842b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2584440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f2588710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2588710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2588a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2588c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2588db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2586020"/>
        <function-ref name="get" scoped="" ref="0x7f35f25861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2586340"/>
        <function-ref name="set" scoped="" ref="0x7f35f25864d0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2586660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f2581480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2581480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2581800"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2581990"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2581b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2581cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2581e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2580020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f25801b0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2580340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f25804d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2580660"/>
        <function-ref name="set" scoped="" ref="0x7f35f25807f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2580980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2580b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2580da0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f257f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f25821d0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f25821d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2582550"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f25826e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2582870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2582a00"/>
        <function-ref name="get" scoped="" ref="0x7f35f2582b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2582d20"/>
        <function-ref name="set" scoped="" ref="0x7f35f2581020"/>
        <function-ref name="clr" scoped="" ref="0x7f35f25811b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f257c020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f257c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f257c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f257c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f257c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f257c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f257c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f257cb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f257cd00"/>
        <function-ref name="get" scoped="" ref="0x7f35f257b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f257b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f257b340"/>
        <function-ref name="set" scoped="" ref="0x7f35f257b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f257b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f257b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f257ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f35f257bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f257ed70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f257ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f257d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f257d310"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f257d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f257d630"/>
        <function-ref name="get" scoped="" ref="0x7f35f257d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f257d950"/>
        <function-ref name="set" scoped="" ref="0x7f35f257dae0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f257dc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f2578de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2578de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2577180"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2577310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f25774a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2577630"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f25777c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2577950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2577ae0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2577c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2577e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2576020"/>
        <function-ref name="set" scoped="" ref="0x7f35f25761b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2576340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f25764d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2576760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f25768f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f2579b60" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2579b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2578020"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f25781b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2578340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f25784d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2578660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f25787f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f2578980"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2578b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f35f2573930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f35f2573930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2573cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2573e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2571020"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f25711b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2571340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f25714d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2571660"/>
        <function-ref name="get" scoped="" ref="0x7f35f25717f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f2571980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2571b10"/>
        <function-ref name="set" scoped="" ref="0x7f35f2571ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2571e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2570020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f25702b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2570440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f35f2574710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f2574710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2574a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2574c20"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2574db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f2573020"/>
        <function-ref name="get" scoped="" ref="0x7f35f25731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f2573340"/>
        <function-ref name="set" scoped="" ref="0x7f35f25734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f2573660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f35f255d150" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f35f255d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f35f255d4d0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f255d660"/>
        <function-ref name="captured" scoped="" ref="0x7f35f255d7f0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f35f255d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f35f255dd60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f35f255dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f255c180"/>
        <function-ref name="disable" scoped="" ref="0x7f35f255c310"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f35f255c4a0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f35f255c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f35f255ca20" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f35f255ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f255cda0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2559020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f35f25591b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f35f2559340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f35f25418f0" loc="42:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f35f25418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f35f2541c70"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f35f2541e00"/>
        <function-ref name="captured" scoped="" ref="0x7f35f2540020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f25401b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f2540340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f35f25404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f35f2556a20" loc="40:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f35f2556a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f35f2556da0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2542020"/>
        <function-ref name="captured" scoped="" ref="0x7f35f25421b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f35f2542340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f35f25425d0" loc="41:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f35f25425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f35f2542950"/>
        <function-ref name="getControl" scoped="" ref="0x7f35f2542ae0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f35f2542c70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f35f2542e00"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f35f2541020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f35f25411b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f35f2541340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f35f25414d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f35f2541660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f35f25407a0" loc="43:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f35f25407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f2540b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2540cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2540e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f253f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f253f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f253f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f253f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f253f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f253f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f253f980"/>
        <function-ref name="set" scoped="" ref="0x7f35f253fb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f253fca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f253fe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f253e120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f253e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f35f25318a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f35f25318a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2531c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2531db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2530020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25301b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2530340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25304d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f35f2527a30" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f35f2527a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2527db0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2526020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25261b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2526340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25264d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2526660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f35f252e8a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f35f252e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f252ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f252edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f252d020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f252d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f252d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f252d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f35f252c8a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f35f252c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f252cc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f252cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f252b020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f252b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f252b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f252b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f35f25378a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f35f25378a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2537c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2537db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2532020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25321b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2532340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f35f25298a0" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f35f25298a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2529d20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2528020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25281b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2528340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25284d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2528660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f35f25308a0" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f35f25308a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2530c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2530db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f252f020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f252f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f252f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f252f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f35f2526a30" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f35f2526a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2526db0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2525020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25251b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2525340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25254d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2525660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f35f25338f0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f35f25338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2533c70"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2533e00"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2538020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25381b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2538340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25384d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f35f252b8a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f35f252b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f252bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f252bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f252a020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f252a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f252a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f252a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f35f25328a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f35f25328a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2532c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2532db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2531020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25311b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2531340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25314d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f35f2528a30" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f35f2528a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2528db0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2527020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25271b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2527340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25274d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2527660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f35f252f8a0" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f35f252f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f252fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f252fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f252e020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f252e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f252e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f252e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f35f252d8a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f35f252d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f252dc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f252ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f252c020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f252c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f252c340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f252c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f35f25388a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f35f25388a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2538c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2538db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2537020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25371b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2537340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f35f252a8a0" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f35f252a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f252ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f252adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2529020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25291b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2529340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f35f251d8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f35f251d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f251dc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f251ddb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f251c020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f251c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f251c340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f251c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f35f2513a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f35f2513a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2513db0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2512020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25121b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2512340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25124d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2512660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f35f251a8a0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f35f251a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f251ac20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f251adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2519020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25191b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2519340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f35f25188a0" loc="50:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f35f25188a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2518c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2518db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2517020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25171b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2517340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f35f251f8a0" loc="41:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f35f251f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f251fc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f251fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f251e020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f251e1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f251e340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f251e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f35f25158a0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f35f25158a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2515d20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2514020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25141b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2514340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25144d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2514660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f35f251c8a0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f35f251c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f251cc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f251cdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f251b020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f251b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f251b340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f251b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f35f2512a30" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f35f2512a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2512db0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2511020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25111b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2511340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25114d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2511660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f35f2523810" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f35f2523810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2523b90"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2523d20"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2520020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25201b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2520340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f35f25178a0" loc="51:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f35f25178a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2517c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2517db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2516020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25161b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2516340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f35f251e8a0" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f35f251e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f251ec20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f251edb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f251d020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f251d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f251d340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f251d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f35f2514a30" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f35f2514a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2514db0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2513020"/>
        <function-ref name="disable" scoped="" ref="0x7f35f25131b0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f2513340"/>
        <function-ref name="enable" scoped="" ref="0x7f35f25134d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f2513660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f35f251b8a0" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f35f251b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f251bc20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f251bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f251a020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f251a1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f251a340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f251a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f35f25198a0" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f35f25198a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2519c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2519db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2518020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25181b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2518340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25184d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f35f25208a0" loc="40:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f35f25208a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2520c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2520db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f251f020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f251f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f251f340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f251f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f35f25168a0" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f35f25168a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f2516c20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f2516db0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f2515020"/>
        <function-ref name="edge" scoped="" ref="0x7f35f25151b0"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2515340"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f25154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f35f243e610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f35f243e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f243e990"/>
        <function-ref name="fired" scoped="" ref="0x7f35f243eb20"/>
        <function-ref name="disable" scoped="" ref="0x7f35f243ecb0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f243ee40"/>
        <function-ref name="enable" scoped="" ref="0x7f35f2431020"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f24311b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f35f243fa30" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f35f243fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f243fdb0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f243e020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f35f243e1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f35f243e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f35f242f610" loc="46:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f35f242f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f242f990"/>
        <function-ref name="fired" scoped="" ref="0x7f35f242fb20"/>
        <function-ref name="disable" scoped="" ref="0x7f35f242fcb0"/>
        <function-ref name="edge" scoped="" ref="0x7f35f242fe40"/>
        <function-ref name="enable" scoped="" ref="0x7f35f242e020"/>
        <function-ref name="getValue" scoped="" ref="0x7f35f242e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f35f2430a70" loc="45:../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f35f2430a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2430df0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f242f020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f35f242f1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f35f242f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f35f1fd9e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f1fd9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd8410"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f35f1fe5160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f35f1fe5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f35f1fdde50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1fdde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fdc210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fdc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f35f1fd7880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f1fd7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd7c00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f35f1fcf0a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f35f1fcf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fcf420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fcf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f35f1fd60a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f35f1fd60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd6420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd65b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f35f1fc3500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f35f1fc3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc3880"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc3a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f35f1fc6500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f35f1fc6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc6880"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc6a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f35f1fe4490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1fe4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f35f1fcb880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f35f1fcb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fcbc00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fcbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f35f1fc7500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f1fc7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc7880"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc7a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f35f1fdce50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f35f1fdce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fdb210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fdb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f35f1fdbe50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f35f1fdbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd9210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f35f1fd1880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1fd1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd1c00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f35f1fd30a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f35f1fd30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd3420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f35f1fd6880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1fd6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd6c00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f35f1fe7a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f1fe7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f1fe7e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f1fe6020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f1fe61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f35f1fe1e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1fe1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fdf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f35f1fdf490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f35f1fdf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fdf910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f35f1fcac80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f1fcac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc90a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f35f1fdfbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1fdfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f35f1fc7ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f1fc7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc60a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc6230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f35f1fe1160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1fe1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f35f1fcb0a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f35f1fcb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fcb420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fcb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f35f1fdb670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f1fdb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fdb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fdbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f35f1fdc670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f1fdc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fdc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fdcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f35f1fe6ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1fe6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f35f1fcd0a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1fcd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fcd420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fcd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f35f1fcf880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f35f1fcf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fcfc00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fcfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f35f1fcd880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1fcd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fcdc00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fcdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f35f1fc4ce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1fc4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc30a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f35f1fc6ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f35f1fc6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc40a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc4230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f35f1fd3880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f35f1fd3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd3c00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f35f1fce0a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f35f1fce0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fce420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fce5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f35f1fc8ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f35f1fc8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc70a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc7230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f35f1fd5880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1fd5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd5c00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f35f1fc3ce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1fc3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1fc20a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1fc2230"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc23c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1fc2550"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f1fc26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f35f1fe6480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f35f1fe6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f35f1fdd670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f35f1fdd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fdd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f35f1fd9670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f1fd9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd99f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f35f1fd00a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1fd00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd0420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f35f1fd50a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1fd50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd5420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f35f1fd0880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1fd0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd0c00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f35f1fd8870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f35f1fd8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd8bf0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f35f1fe57b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f35f1fe57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f35f1fd70a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f1fd70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd7420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f1fe8e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f1fe8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1fe71c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f1fe7350"/>
        <function-ref name="request" scoped="" ref="0x7f35f1fe74e0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1fe7670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1fe7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f35f1fde2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1fde2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fde670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f35f1fdd020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f35f1fdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fdd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f35f1fc8500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f35f1fc8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc8880"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc8a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f35f1fc9ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f35f1fc9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc80a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f35f1fe17b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f1fe17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f35f1fc9500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f1fc9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc9880"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc9a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f35f1fc4500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f35f1fc4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fc4880"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f35f1fd10a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1fd10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd1420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f35f1fce880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f35f1fce880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fcec00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fced90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f35f1fe5e00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f35f1fe5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f35f1fe4ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1fe4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fe4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f35f1fd40a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1fd40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd4420"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f35f1fde940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f35f1fde940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fdecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f35f1fd4880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f35f1fd4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fd4c00"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fd4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f35f1fca0a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f35f1fca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fca820"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fca9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f35f1fc29b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f35f1fc29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1fc2d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1fc1020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fc11b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1fc1340"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f1fc14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f35f23ee630" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f35f23ee630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f23ee9b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f23eeb40"/>
        <function-ref name="write" scoped="" ref="0x7f35f23eecd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f23eee60"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f23ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f35f23f0670" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f23f09f0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f23f0b80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f23f0d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f35f23ed8c0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f35f23ed8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f23edc40"/>
        <function-ref name="write" scoped="" ref="0x7f35f23eddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f35f23ec6f0" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f35f23ec6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f23eca70"/>
        <function-ref name="write" scoped="" ref="0x7f35f23ecc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f23f3950" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f23f3950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f23f3cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f23f3e60"/>
        <function-ref name="request" scoped="" ref="0x7f35f23f0020"/>
        <function-ref name="granted" scoped="" ref="0x7f35f23f01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f23f0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f35f23eb510" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f35f23eb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f23eb890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f35f23d5680" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f35f23d5680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f23d5a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f23d5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f35f23e5bb0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f35f23e5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f23e4020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f23e41b0"/>
        <function-ref name="write" scoped="" ref="0x7f35f23e4340"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f23e44d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f23e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f35f23ea920" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f23ea920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f23eaca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f23eae30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f23e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f35f23de080" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f35f23de080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f35f23de400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f35f23d1b90" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f35f23d1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f23dc020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f23dc1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f35f23dc340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f23dc4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f23dc660"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f23dc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f35f23e0400" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f35f23e0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f23e0780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f23e0910"/>
        <function-ref name="request" scoped="" ref="0x7f35f23e0aa0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f23e0c30"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f23e0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f35f23e3020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f35f23e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f23e33a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f23e3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f35f23e3db0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f35f23e3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f23e2180"/>
        <function-ref name="write" scoped="" ref="0x7f35f23e2310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f23dca70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f23dca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f23dcdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f23d6020"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f23d61b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f23d6340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f23d64d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f23d6660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f23d67f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f23d6e30"/>
        <function-ref name="set" scoped="" ref="0x7f35f23d6980"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f23d6b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f23d6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f23e6810" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f23e6810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f23e6b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f23e6d20"/>
        <function-ref name="request" scoped="" ref="0x7f35f23e5020"/>
        <function-ref name="granted" scoped="" ref="0x7f35f23e51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f23e5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f35f23ccbd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f35f23ccbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f23cb020"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f23cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f35f23e2ba0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f35f23e2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f23e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f35f2371770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f2371770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f2371af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f2371c80"/>
        <function-ref name="isState" scoped="" ref="0x7f35f2371e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f2369020"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f23691b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f2369340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f35f236c1d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f236c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f236c550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f236c6e0"/>
        <function-ref name="isState" scoped="" ref="0x7f35f236c870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f236ca00"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f236cb90"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f236cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f2368020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f2368020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f23683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f35f2368b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f2368b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f2367020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f23671b0"/>
        <function-ref name="isState" scoped="" ref="0x7f35f2367340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f23674d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f2367660"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f23677f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f35f200e020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f35f200e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f200e3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f200e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f35f234e8f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f35f234e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f35f234ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f234fc40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f234fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f234e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f234e1b0"/>
        <function-ref name="request" scoped="" ref="0x7f35f234e340"/>
        <function-ref name="granted" scoped="" ref="0x7f35f234e4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f234e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f0831af0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f0831af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f0831e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f0830030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f35f082f440" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f35f082f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f082f7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f082f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f35f082fbe0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f35f082fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f35f082e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f35f08302c0" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f35f08302c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f35f0830640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f0835e70" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f0835e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f0831220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f08313b0"/>
        <function-ref name="request" scoped="" ref="0x7f35f0831540"/>
        <function-ref name="granted" scoped="" ref="0x7f35f08316d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f0831860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f35f08308d0" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f35f08308d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f35f0830c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f35f0830de0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f35f082f020"/>
        <function-ref name="write" scoped="" ref="0x7f35f082f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f35f22e95e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f22e95e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f22e9960"/>
        <function-ref name="configure" scoped="" ref="0x7f35f22e9af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f35f22e6510" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f35f22e6510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f22e6890"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f22e6a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f35f22e3600" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f35f22e3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f35f22e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f35f22e9dd0" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f35f22e9dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f35f22e8180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f35f22e4370" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f35f22e4370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f22e46f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f22e4880"/>
        <function-ref name="request" scoped="" ref="0x7f35f22e4a10"/>
        <function-ref name="granted" scoped="" ref="0x7f35f22e4ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f22e4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f22eda20" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f22eda20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f22edda0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f22ea020"/>
        <function-ref name="request" scoped="" ref="0x7f35f22ea1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f22ea340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f22ea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f35f22e8480" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f35f22e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f35f22e8800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f35f22e8990"/>
        <function-ref name="splitRead" scoped="" ref="0x7f35f22e8b20"/>
        <function-ref name="write" scoped="" ref="0x7f35f22e8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f35f22df6a0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f22df6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f22dfa20"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f22dfbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f35f226ec40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f226ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f226d020"/>
        <function-ref name="configure" scoped="" ref="0x7f35f226d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f35f226c700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f35f226c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f226caa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f226cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f35f226be00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f35f226be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f35f226a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f35f226d440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f35f226d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f35f226d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f35f226a490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f35f226a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f226a810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f226a9a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f226ab30"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f226acc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f226ae50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f2268020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f22681b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f2268340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f22684d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f2268660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f22687f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f2268980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f2268b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f2268da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f2267020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f22671b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f2267340"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f22674d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f2267660"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f22677f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f2267980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f2267b10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f2267ca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f2267e30"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f2266020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f22663b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f2266540"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f22666d0"/>
        <function-ref name="tx" scoped="" ref="0x7f35f2266860"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f22669f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f2266b80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f2266d10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f2265020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f22651b0"/>
        <function-ref name="rx" scoped="" ref="0x7f35f2265340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f22654d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f2265660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f22657f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f2265980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f2265b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f22645a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f22645a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f2264920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f2264ab0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f2264c40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f2264dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f2263020"/>
        <function-ref name="get" scoped="" ref="0x7f35f22631b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f2263340"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f2263980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2263660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f22634d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f22637f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f35f226b060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f35f226b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f226b400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f226b590"/>
        <function-ref name="request" scoped="" ref="0x7f35f226b720"/>
        <function-ref name="granted" scoped="" ref="0x7f35f226b8b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f226ba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f226fe80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f226fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f226e240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f226e3d0"/>
        <function-ref name="request" scoped="" ref="0x7f35f226e560"/>
        <function-ref name="granted" scoped="" ref="0x7f35f226e6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f226e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f35f226da50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f35f226da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f35f226ddd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f35f226c020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f35f226c1b0"/>
        <function-ref name="write" scoped="" ref="0x7f35f226c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f35f2265de0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f2265de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f2264180"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f2264310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f35f2263c50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f35f2263c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f2262020"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f22621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f35f22538a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f35f22538a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2253c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f35f22563b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f22563b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f2256730"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f22568c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f35f225d860" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f225d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f225dbe0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f225dd70"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f225a020"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f225a1b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f225a340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f225a4d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f225a660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f225a7f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f225a980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f225ab10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f225aca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f225ae30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f2259020"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f22592b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f2259440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f22595d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f2259760"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f22598f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f2259a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f2259c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f2259da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f2258020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f22581b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f2258340"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f22584d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f2258860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f22589f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f2258b80"/>
        <function-ref name="tx" scoped="" ref="0x7f35f2258d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f2257020"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f22571b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f2257340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f22574d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f2257660"/>
        <function-ref name="rx" scoped="" ref="0x7f35f22577f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f2257980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f2257b10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f2257ca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f2257e30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f2256020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f35f2219670" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f35f2219670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f22199f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2219b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2219d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2218020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f22181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2218340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f22184d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2218660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f22187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2218980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2218b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2218ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2218e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2217120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f22172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f35f224ddc0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f35f224ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f224c180"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f224c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f35f2217670" loc="83:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f35f2217670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f22179f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2217b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2217d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2216020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f22161b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2216340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f22164d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2216660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f22167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2216980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2216b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2216ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2216e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2215120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f22152b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f35f2215670" loc="84:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f35f2215670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f22159f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f2215b80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f2215d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f2214020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f22141b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f2214340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f22144d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f2214660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f22147f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f2214980"/>
        <function-ref name="set" scoped="" ref="0x7f35f2214b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f2214ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f2214e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2213120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f22132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f35f2251020" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f35f2251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f22513a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f2251530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f22516c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f2251850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f22519e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f2251b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f2251d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f2250020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f22501b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f2250340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f22504d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f2250660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f22507f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f2250a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f2250c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f2250da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f224f020"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f224f1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f224f340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f224f4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f224f660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f224f7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f224f980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f224fb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f224fca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f224e220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f224e3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f224e540"/>
        <function-ref name="tx" scoped="" ref="0x7f35f224e6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f224e860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f224e9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f224eb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f224ed10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f224d020"/>
        <function-ref name="rx" scoped="" ref="0x7f35f224d1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f224d340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f224d4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f224d660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f224d7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f224d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f35f22235b0" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f35f22235b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f35f2223930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f35f2223ac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f35f2223c50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f35f2223de0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f35f224a020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f35f224a1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f35f224a340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f35f224a4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f224a660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f35f224a7f0"/>
        <function-ref name="getData" scoped="" ref="0x7f35f224a980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f35f224ab10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f35f224aca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f35f2249020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f35f22491b0"/>
        <function-ref name="getIV" scoped="" ref="0x7f35f2249340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f35f22494d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f35f2249660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f35f22497f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f35f2249980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f35f2249b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f35f2249ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f35f2249e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f35f2222020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f35f22221b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f35f2222540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f35f22226d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f35f2222860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f35f22229f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f35f2222b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f35f2222d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f35f2221020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f35f22211b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f35f2221340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f35f22214d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f35f2221660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f35f22217f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f35f2221980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f35f2221b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f35f2221ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f35f2221e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f35f2220020"/>
        <function-ref name="setData" scoped="" ref="0x7f35f22201b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f35f2220340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f35f22204d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f35f2220660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f35f22207f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f35f2220980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f35f2220b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f35f221f420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f35f221f5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f35f221f740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f35f221f8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f35f221fa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f35f221fbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f35f221fd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f35f221e020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f35f221e1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f35f221e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f35f221b670" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f35f221b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f221b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f221bb80"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f221bd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f221a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f221a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f221a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f221a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f221a660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f221a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f221a980"/>
        <function-ref name="set" scoped="" ref="0x7f35f221ab10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f221aca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f221ae30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f2219120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f22192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f35f224c750" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f224c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f224cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f35f221e700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f35f221e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f221ea80"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f221ec10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f221eda0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f221c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f221c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f221c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f221c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f35f221c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f221c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f221c980"/>
        <function-ref name="set" scoped="" ref="0x7f35f221cb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f221cca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f221ce30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f221b120"/>
        <function-ref name="clr" scoped="" ref="0x7f35f221b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f08265d0" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f08265d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f0826950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f0826ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f35f08207c0" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f35f08207c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f0820b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f0819a80" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f0819a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f0819e00"/>
        <function-ref name="configure" scoped="" ref="0x7f35f0818020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f35f0820dd0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f35f0820dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f35f081f180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f35f081f310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f35f081f4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f35f081f630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f35f081f7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f35f081f950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f35f081fae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f35f081fc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f081fe00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f35f081e020"/>
        <function-ref name="getData" scoped="" ref="0x7f35f081e1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f35f081e340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f35f081e4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f35f081e760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f35f081e8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f35f081ea80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f35f081ec10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f35f081eda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f35f081d020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f35f081d1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f35f081d340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f35f081d4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f35f081d660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f35f081d7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f35f081d980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f35f081dd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f35f081c020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f35f081c1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f35f081c340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f35f081c4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f35f081c660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f35f081c7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f35f081c980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f35f081cb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f35f081cca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f35f081ce30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f35f081b020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f35f081b1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f35f081b340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f35f081b4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f35f081b660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f35f081b7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f35f081b980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f35f081bb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f35f081bca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f35f081be30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f35f081a020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f35f081a1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f35f081a340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f35f081a8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f35f081aa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f35f081abf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f35f081ad80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f35f0819020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f35f08191b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f35f0819340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f35f08194d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f35f0819660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f35f08197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f35f0820020" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f0820020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f08203a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f0820530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f0827860" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f0827860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f0827be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f0827d70"/>
        <function-ref name="request" scoped="" ref="0x7f35f0826020"/>
        <function-ref name="granted" scoped="" ref="0x7f35f08261b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f0826340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f35f08255a0" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f08255a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f0825920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f0825ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f0825c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f0825dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f0824020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f08241b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f0824340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f08244d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f0824660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f08247f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f0824980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f0824b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f0824ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f0823020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f08231b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f0823340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f08234d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f0823660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f08237f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f0823980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f0823b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f0823ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f0823e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f0822020"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f08221b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f0822540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f08226d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f0822860"/>
        <function-ref name="tx" scoped="" ref="0x7f35f08229f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f0822b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f0822d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f0821020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f08211b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f0821340"/>
        <function-ref name="rx" scoped="" ref="0x7f35f08214d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f0821660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f08217f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f0821980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f0821b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f0821ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f0826d70" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f0826d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f0825180"/>
        <function-ref name="userId" scoped="" ref="0x7f35f0825310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f21748a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f21748a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f2174c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f2174db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f2172020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f2172020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f21723a0"/>
        <function-ref name="configure" scoped="" ref="0x7f35f2172530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f35f217aa80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f35f217aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f217ae00"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f2176020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f21755c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f21755c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f2175940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f2175ad0"/>
        <function-ref name="request" scoped="" ref="0x7f35f2175c60"/>
        <function-ref name="granted" scoped="" ref="0x7f35f2175df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f2174020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f35f21769a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f21769a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f2176d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f2173130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f2173130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f21734b0"/>
        <function-ref name="userId" scoped="" ref="0x7f35f2173640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f35f215b4b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f215b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f215b830"/>
        <function-ref name="userId" scoped="" ref="0x7f35f215b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f35f21705c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f35f21705c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f2170960"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f2170af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f35f215ce70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f35f215ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f215b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f35f215c020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f215c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f215c3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f35f215c690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f35f215c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f215ca10"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f215cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f20e1bf0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f20e1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f20e0020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f20e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f20de930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f20de930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f20decd0"/>
        <function-ref name="configure" scoped="" ref="0x7f35f20dee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f35f20e0400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f20e0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f20e0780"/>
        <function-ref name="requested" scoped="" ref="0x7f35f20e0910"/>
        <function-ref name="granted" scoped="" ref="0x7f35f20e0aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f20e0c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f20e0dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f20e2e60" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f20e2e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f20e1230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f20e13c0"/>
        <function-ref name="request" scoped="" ref="0x7f35f20e1550"/>
        <function-ref name="granted" scoped="" ref="0x7f35f20e16e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f20e1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f20de060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f20de060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f20de3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f35f20de570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f07b3a40" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f07b3a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f07b3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f35f07b20a0" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f35f07b20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f35f07b2420"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f35f07b25b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f35f07b2740"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f07b28d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f07af020" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f07af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f07af3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f07af550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f07aecf0" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f07aecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f07ad0e0"/>
        <function-ref name="configure" scoped="" ref="0x7f35f07ad270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f35f07ad500" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f35f07ad500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f35f07ad880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f35f07ada10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f35f07adba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f07add30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f35f07af7a0" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f07af7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f07afb20"/>
        <function-ref name="requested" scoped="" ref="0x7f35f07afcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f07afe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f07ae020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f07ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f07ab020" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f07ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f07ab3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f07ab530"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f07ab6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f07ab850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f07ab9e0"/>
        <function-ref name="get" scoped="" ref="0x7f35f07abb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f07abd00"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f07aa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f07aa1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f07aa020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f07aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f07b0270" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f07b0270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f07b0610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f07b07a0"/>
        <function-ref name="request" scoped="" ref="0x7f35f07b0930"/>
        <function-ref name="granted" scoped="" ref="0x7f35f07b0ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f07b0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f07ae400" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f07ae400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f07ae780"/>
        <function-ref name="userId" scoped="" ref="0x7f35f07ae910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f35f07aa7a0" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f35f07aa7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f07aab20"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f07aacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f35f20d7880" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f35f20d7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f35f20d7c00"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f35f20d7d90"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f35f20d4020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f35f20d41b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f35f20d4340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f35f20d44d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f35f20d4660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f35f20d47f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f20d4980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f35f20d4b10"/>
        <function-ref name="getData" scoped="" ref="0x7f35f20d4ca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f35f20d4e30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f35f20d3020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f35f20d32b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f35f20d3440"/>
        <function-ref name="getIV" scoped="" ref="0x7f35f20d35d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f35f20d3760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f35f20d38f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f35f20d3a80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f35f20d3c10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f35f20d3da0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f35f20d2020"/>
        <function-ref name="isI2C" scoped="" ref="0x7f35f20d21b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f35f20d2340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f35f20d24d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f35f20d2860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f35f20d29f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f35f20d2b80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f35f20d2d10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f35f20d1020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f35f20d11b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f35f20d1340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f35f20d14d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f35f20d1660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f35f20d17f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f35f20d1980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f35f20d1b10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f35f20d1ca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f35f20d1e30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f35f20d0020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f35f20d01b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f35f20d0340"/>
        <function-ref name="setData" scoped="" ref="0x7f35f20d04d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f35f20d0660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f35f20d07f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f35f20d0980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f35f20d0b10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f35f20d0ca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f35f20d0e30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f35f20cf420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f35f20cf5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f35f20cf740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f35f20cf8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f35f20cfa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f35f20cfbf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f35f20cfd80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f35f20ce020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f35f20ce1b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f35f20ce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f35f20c4250" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f35f20c4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f20c45d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f20c4760"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f20c48f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f20c4a80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f20c4c10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f20c4da0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f20c3020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f20c31b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f20c3340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f20c34d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f20c3660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f20c37f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f20c3980"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f20c3c10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f20c3da0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f20c2020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f20c21b0"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f20c2340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f20c24d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f20c2660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f20c27f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f20c2980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f20c2b10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f20c2ca0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f20c2e30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f20c1220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f20c13b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f20c1540"/>
        <function-ref name="tx" scoped="" ref="0x7f35f20c16d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f20c1860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f20c19f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f20c1b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f20c1d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f20c0020"/>
        <function-ref name="rx" scoped="" ref="0x7f35f20c01b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f20c0340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f20c04d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f20c0660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f20c07f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f20c0980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f35f20becb0" loc="43:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f35f20becb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f20bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f20bd230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f20bd3c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f20bd550"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f20bd6e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f20bd870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f20bda00"/>
        <function-ref name="get" scoped="" ref="0x7f35f20bdb90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f20bdd20"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f20bc020"/>
        <function-ref name="set" scoped="" ref="0x7f35f20bc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f20bc340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f20bc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f20bc760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f20bc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f35f20cb430" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f35f20cb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f35f20cb7b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f35f20cb940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f35f20cbad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f35f20cbc60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f35f20cbdf0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f35f20ca020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f35f20ca1b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f35f20ca340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f35f20ca4d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f35f20ca660"/>
        <function-ref name="getData" scoped="" ref="0x7f35f20ca7f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f35f20ca980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f35f20cab10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f35f20cada0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f35f20c9020"/>
        <function-ref name="getIV" scoped="" ref="0x7f35f20c91b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f35f20c9340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f35f20c94d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f35f20c9660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f35f20c97f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f35f20c9980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f35f20c9b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7f35f20c9ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f35f20c9e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f35f20c8020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f35f20c83b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f35f20c8540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f35f20c86d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f35f20c8860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f35f20c89f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f35f20c8b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f35f20c8d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f35f20c7020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f35f20c71b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f35f20c7340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f35f20c74d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f35f20c7660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f35f20c77f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f35f20c7980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f35f20c7b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f35f20c7ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f35f20c7e30"/>
        <function-ref name="setData" scoped="" ref="0x7f35f20c6020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f35f20c61b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f35f20c6340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f35f20c64d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f35f20c6660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f35f20c67f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f35f20c6980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f35f20c5020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f35f20c51b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f35f20c5340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f35f20c54d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f35f20c5660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f35f20c57f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f35f20c5980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f35f20c5b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f35f20c5ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f35f20c5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f35f20c0d40" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f35f20c0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f20bf0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f20bf270"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f20bf400"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f20bf590"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f20bf720"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f20bf8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f20bfa40"/>
        <function-ref name="get" scoped="" ref="0x7f35f20bfbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f20bfd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f20be020"/>
        <function-ref name="set" scoped="" ref="0x7f35f20be1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f20be340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f20be4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f20be760"/>
        <function-ref name="clr" scoped="" ref="0x7f35f20be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f35f1fa9c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f1fa9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa8210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f35f1fb4da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f35f1fb4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f35f1facb50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1facb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fab020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f35f1fa7670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f1fa7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa79f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f35f1fa0e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f35f1fa0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9e210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f35f1fa7e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f35f1fa7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa5210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f35f1f932f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f35f1f932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f93670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f93800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f35f1f952f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f35f1f952f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f95670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f95800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f35f1fb1120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1fb1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb14a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f35f1f9b670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f35f1f9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f35f1f962f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f1f962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f96670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f96800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f35f1fabc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f35f1fabc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1faa020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1faa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f35f1faac60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f35f1faac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa9020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f35f1fa1670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1fa1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa19f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f35f1fa3e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f35f1fa3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa2210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f35f1fa5670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1fa5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa59f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f35f1fb5760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f1fb5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f1fb5ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f1fb5c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f1fb5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f35f1fb0aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1fb0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f35f1faf120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f35f1faf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1faf5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f35f1f9aa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f1f9aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9adf0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f35f1faf870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1faf870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fafbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f35f1f96ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f1f96ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f96e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f35f1fb1dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1fb1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f35f1f9ce50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f35f1f9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9b210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f35f1faa480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f1faa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1faa800"/>
        <function-ref name="write" scoped="" ref="0x7f35f1faa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f35f1fab480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f1fab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fab800"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f35f1fb4750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1fb4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f35f1f9de50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1f9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9c210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f35f1f9e670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f35f1f9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f35f1f9c670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1f9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f35f1f94ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1f94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f94e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f35f1f95ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f35f1f95ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f95e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f35f1fa2670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f35f1fa2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa29f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f35f1f9ee50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f35f1f9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9d210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f35f1f97ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f35f1f97ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f97e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f35f1fa4670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1fa4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa49f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f35f1f93ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1f93ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1f93e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1f92020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f921b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1f92340"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f1f924d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f35f1fb4100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f35f1fb4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f35f1fac370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f35f1fac370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fac6f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fac880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f35f1fa9480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f1fa9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa9800"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f35f1fa1e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1fa1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa0210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f35f1fa5e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1fa5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa4210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f35f1fa0670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1fa0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa09f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f35f1fa8670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f35f1fa8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa89f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f35f1fb3450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f35f1fb3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f35f1fa8e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f1fa8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa7210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f1fb6a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f1fb6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1fb6e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f1fb5020"/>
        <function-ref name="request" scoped="" ref="0x7f35f1fb51b0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1fb5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1fb54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f35f1fae020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1fae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f35f1faecc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f35f1faecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f35f1f972f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f35f1f972f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f97670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f97800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f35f1f99ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f35f1f99ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f99e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f35f1fb0450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f1fb0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f35f1f992f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f1f992f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f99670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f99800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f35f1f942f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f35f1f942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f94670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f94800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f35f1fa2e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1fa2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa1210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f35f1f9d670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f35f1f9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f35f1fb3aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f35f1fb3aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb3e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f35f1fb1770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1fb1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fb1af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f35f1fa4e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1fa4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa3210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f35f1fae670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f35f1fae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1fae9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f35f1fa3670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f35f1fa3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1fa39f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1fa3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f35f1f9be50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f35f1f9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f9a610"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f9a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f35f1f927a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f35f1f927a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1f92b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1f92cb0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f92e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1f90020"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f1f901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f35f1f7cc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f1f7cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7b210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f35f1f87da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f35f1f87da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f86180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f35f1f80b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1f80b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7f020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f35f1f7a670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f1f7a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f35f1f73e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f35f1f73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f72210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f35f1f7ae50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f35f1f7ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f79210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f35f1f662f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f35f1f662f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f66670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f66800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f35f1f692f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f35f1f692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f69670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f69800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f35f1f85120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1f85120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f854a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f35f1f6e670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f35f1f6e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f35f1f6a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f1f6a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6a670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f35f1f7fc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f35f1f7fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7e020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f35f1f7ec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f35f1f7ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7c020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f35f1f74670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1f74670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f749f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f74b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f35f1f77e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f35f1f77e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f75210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f753a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f35f1f79670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1f79670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f799f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f79b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f35f1f88760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f1f88760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f1f88ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f1f88c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f1f88e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f35f1f84aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1f84aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f84e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f35f1f82120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f35f1f82120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f825a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f35f1f6da70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f1f6da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6ddf0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f35f1f82870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1f82870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f82bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f35f1f6aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f1f6aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6ae50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f35f1f85dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1f85dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f84180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f35f1f70e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f35f1f70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6e210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f35f1f7e480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f1f7e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7e800"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f35f1f7f480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f1f7f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7f800"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f35f1f87750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1f87750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f87ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f35f1f71e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1f71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f70210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f35f1f72670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f35f1f72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f729f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f35f1f70670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1f70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f709f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f35f1f67ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1f67ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f67e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f35f1f69ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f35f1f69ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f69e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f35f1f75670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f35f1f75670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f759f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f75b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f35f1f72e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f35f1f72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f71210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f35f1f6bad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f35f1f6bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6be50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f35f1f78670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1f78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f789f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f78b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f35f1f66ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1f66ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1f66e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1f65020"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f651b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1f65340"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f1f654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f35f1f87100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f35f1f87100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f87480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f35f1f80370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f35f1f80370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f806f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f80880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f35f1f7c480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f1f7c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7c800"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f35f1f74e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1f74e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f73210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f733a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f35f1f79e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1f79e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f78210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f35f1f73670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1f73670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f739f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f73b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f35f1f7b670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f35f1f7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f35f1f86450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f35f1f86450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f867d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f35f1f7be50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f1f7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f7a210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f7a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f1f899e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f1f899e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1f89d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f1f88020"/>
        <function-ref name="request" scoped="" ref="0x7f35f1f881b0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1f88340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1f884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f35f1f81020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1f81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f35f1f81cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f35f1f81cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f800a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f35f1f6b2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f35f1f6b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6b670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f35f1f6cad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f35f1f6cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6ce50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f35f1f84450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f1f84450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f847d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f35f1f6c2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f1f6c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6c670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f35f1f672f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f35f1f672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f67670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f67800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f35f1f75e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1f75e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f74210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f743a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f35f1f71670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f35f1f71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f719f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f35f1f86aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f35f1f86aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f86e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f35f1f85770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1f85770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f85af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f35f1f78e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1f78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f77210"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f773a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f35f1f81670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f35f1f81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1f819f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f35f1f77670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f35f1f77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f779f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f77b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f35f1f6ee50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f35f1f6ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1f6d610"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f6d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f35f1f657a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f35f1f657a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1f65b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1f65cb0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1f65e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1f64020"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f1f641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f35f1f5db20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f35f1f5db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f35f1f5a020"/>
        <function-ref name="changed" scoped="" ref="0x7f35f1f5a1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f35f1f5a340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f35f1f5a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x7f35f1f3a020" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x7f35f1f3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f35f1f3a3a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f35f1f3a530"/>
        <function-ref name="startDAO" scoped="" ref="0x7f35f1f3a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x7f35f1f39020" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_RA" scoped="" ref="0x7f35f1f39020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1f393a0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1f39530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f271b6f0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f271b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f271ba70"/>
        <function-ref name="stop" scoped="" ref="0x7f35f271bc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x7f35f1e6a270" loc="57:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f35f1e6a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f35f1e6a5f0"/>
        <function-ref name="setRoot" scoped="" ref="0x7f35f1e6a780"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f35f1e6a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x7f35f1e6f0f0" loc="55:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendPool" scoped="" ref="0x7f35f1e6f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f35f2e39020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f35f2e394f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1e6c260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1e6d660"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1e6fce0"/>
        <function-ref name="put" scoped="" ref="0x7f35f1e6dae0"/>
        <function-ref name="size" scoped="" ref="0x7f35f1e6d1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x7f35f1e77bb0" loc="52:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_DAO" scoped="" ref="0x7f35f1e77bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e75020"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f35f1e77410" loc="51:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f1e77410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f1e77790"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f1e77920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x7f35f1e672f0" loc="109:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDAO" scoped="" ref="0x7f35f1e672f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1e67670"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1e67800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x7f35f1e82ae0" loc="49:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RemoveTimer" scoped="" ref="0x7f35f1e82ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1e7d110"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1e7f5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1e7e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1e7e020"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1e7da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1e7d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1e7fa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1e80750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1e7eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1e80c20"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e7f130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f35f1e745a0" loc="54:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f35f1e745a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f35f2e39020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f35f2e394f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f35f1e724a0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f35f1e70260"/>
        <function-ref name="element" scoped="" ref="0x7f35f1e708d0"/>
        <function-ref name="full" scoped="" ref="0x7f35f1e73680"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1e72020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f1e72b50"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1e73200"/>
        <function-ref name="size" scoped="" ref="0x7f35f1e73b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f1e75400" loc="53:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f1e75400"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f1e75780"/>
        <function-ref name="changed" scoped="" ref="0x7f35f1e75910"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f1e75aa0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f1e75c30"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f1e75dc0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f1e74020"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f1e741b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x7f35f1e67ad0" loc="87:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="initDAO" scoped="" ref="0x7f35f1e67ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1e67e50"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1e66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x7f35f1e884b0" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x7f35f1e884b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f35f1e88830"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f35f1e889c0"/>
        <function-ref name="startDAO" scoped="" ref="0x7f35f1e88b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x7f35f1e87720" loc="48:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayDAOTimer" scoped="" ref="0x7f35f1e87720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1e83c40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1e841e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1e83020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1e84ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1e82590"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1e82110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1e84660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1e85390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1e83630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1e85860"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e85d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x7f35f1e7b020" loc="50:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x7f35f1e7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1e78630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1e7aa60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1e79920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1e794a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1e77020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1e78ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1e79020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1e7bc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1e78020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1e7a110"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e7a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x7f35f1e6c980" loc="56:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRouteInfo" scoped="" ref="0x7f35f1e6c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f35f1e6cd00"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f35f1e6be30"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f35f1e6a020"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f35f1e6b340"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f1e6b4d0"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f35f1e6b660"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f1e6b7f0"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f35f1e6b980"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f35f1e6bb10"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f35f1e6bca0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f1e6b020"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f35f1e6b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f35f1e6ab60" loc="58:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f35f1e6ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f35f1e68020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f35f1e681b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f35f1e68340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f35f1e68590" loc="59:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e68590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f35f1e68910"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f35f1e68aa0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f35f1e68c30"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f35f1e68dc0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f35f1e67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f1e88da0" loc="45:../../../tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f1e88da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1e87180"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e87310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f1e62bd0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f1e62bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1e5d110"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1e606a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1e5f4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1e5f020"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1e5da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1e5d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1e60b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1e61860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1e5fab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1e61d30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e60220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f1e5b560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f1e5b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1e57a20"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1e59020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1e59da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1e59920"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1e564a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1e56020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1e594a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1e5a1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1e57410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1e5a680"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e5ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f1e54020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f1e54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1e50630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1e53a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1e51920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1e514a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1e4f020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1e50ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1e51020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1e54c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1e50020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1e53110"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e535e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f1e4b510" loc="31:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f1e4b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f1e4b890"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f1e4ba20"/>
        <function-ref name="start" scoped="" ref="0x7f35f1e4bbb0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e4bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f35f1e466e0" loc="36:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f35f1e466e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f35f1e46a60"/>
        <function-ref name="initiate" scoped="" ref="0x7f35f1e46bf0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f35f1e46d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f35f1e44930" loc="35:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f35f1e44930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f35f1e44cb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f35f1e44e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f35f1e4ad40" loc="33:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f35f1e4ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e480e0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e48270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f35f1e459d0" loc="41:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f35f1e459d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1e45d50"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f35f1e48560" loc="34:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e48560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f35f1e488e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f35f1e48a70"/>
        <function-ref name="delRoute" scoped="" ref="0x7f35f1e48c00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f35f1e48d90"/>
        <function-ref name="addRoute" scoped="" ref="0x7f35f1e47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f35f1e45130" loc="40:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f1e45130"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1e454b0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e45640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1e4a540" loc="32:../../../tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1e4a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e4a8c0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e4aa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f1e40a10" loc="17:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f1e40a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f1e40d90"/>
        <function-ref name="changed" scoped="" ref="0x7f35f1e3f020"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f1e3f1b0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f1e3f340"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f1e3f4d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f1e3f660"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f1e3f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f1e3ebf0" loc="20:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f1e3ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f1e3c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f1e3c1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f1e3c340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f1e3c4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f1e3c660"/>
        <function-ref name="get" scoped="" ref="0x7f35f1e3c7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f1e3c980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f1e3b020"/>
        <function-ref name="set" scoped="" ref="0x7f35f1e3cb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f1e3cca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f1e3ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x7f35f1e3fae0" loc="18:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubIP" scoped="" ref="0x7f35f1e3fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e3fe60"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f35f1e3e2d0" loc="19:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f35f1e3e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f35f1e3e650"/>
        <function-ref name="delTLV" scoped="" ref="0x7f35f1e3e7e0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f35f1e3e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1e401d0" loc="14:../../../tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1e401d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e40550"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e406e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x7f35f1e25890" loc="22:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingEvents" scoped="" ref="0x7f35f1e25890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x7f35f1e25c10"/>
        <function-ref name="initiate" scoped="" ref="0x7f35f1e25da0"/>
        <function-ref name="linkResult" scoped="" ref="0x7f35f1e23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x7f35f1e211d0" loc="28:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f35f1e211d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e21550"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e216e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1e21870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x7f35f1e1b790" loc="31:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f1e1b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f35f2eec110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1e18860"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1e1acb0"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1e1a3b0"/>
        <function-ref name="put" scoped="" ref="0x7f35f1e18170"/>
        <function-ref name="size" scoped="" ref="0x7f35f1e1a830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x7f35f1e02e40" loc="95:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x7f35f1e02e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1e011e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1e01370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x7f35f1e26a50" loc="21:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x7f35f1e26a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x7f35f1e26dd0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x7f35f1e25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x7f35f1e23a90" loc="24:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPRaw" scoped="" ref="0x7f35f1e23a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e23e10"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f1e222a0" loc="25:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f1e222a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f1e22620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f1e21b20" loc="29:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f1e21b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f1e20020"/>
        <function-ref name="changed" scoped="" ref="0x7f35f1e201b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f1e20340"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f1e204d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f1e20660"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f1e207f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f1e20980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PrintTimer" ref="0x7f35f1e171c0" loc="34:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PrintTimer" scoped="" ref="0x7f35f1e171c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1e13630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1e15c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1e149d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1e14550"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1e12020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1e13ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1e140d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1e17db0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1e13020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1e152e0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1e157b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x7f35f1e41d20" loc="20:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1e41d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f35f1e260e0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f35f1e26270"/>
        <function-ref name="delRoute" scoped="" ref="0x7f35f1e26400"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f35f1e26590"/>
        <function-ref name="addRoute" scoped="" ref="0x7f35f1e26720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x7f35f1e20c30" loc="30:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f35f1e20c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f35f1e1b020"/>
        <function-ref name="delTLV" scoped="" ref="0x7f35f1e1b1b0"/>
        <function-ref name="findTLV" scoped="" ref="0x7f35f1e1b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1e23290" loc="23:../../../tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1e23290"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1e23610"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1e237a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f35f1d94020" loc="11:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f35f1d94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d943a0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d94530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1d946c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f35f1d8d720" loc="15:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f35f1d8d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d8daa0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d8dc30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1d8ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f35f1d95020" loc="10:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f35f1d95d00"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f35f1d95530"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f35f1d956c0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f35f1d95850"/>
        <function-ref name="matchContext" scoped="" ref="0x7f35f1d959e0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f35f1d953a0"/>
        <function-ref name="getContext" scoped="" ref="0x7f35f1d95b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f1d94980" loc="12:../../../tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f1d94980"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1d94d00"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1d93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x7f35f1d92da0" loc="28:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPForward" scoped="" ref="0x7f35f1d92da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d8a180"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d8a310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1d8a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x7f35f1d7d300" loc="45:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Address" scoped="" ref="0x7f35f1d7d300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x7f35f1d7d780"/>
        <function-ref name="changed" scoped="" ref="0x7f35f1d7d910"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f1d7daa0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f1d7dc30"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f1d7ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f35f1d80450" loc="40:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f1d80450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f1d807d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f1d80960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x7f35f1d7f900" loc="43:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f35f1d7f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d7fc80"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d7fe10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1d7e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NS" ref="0x7f35f1d860a0" loc="35:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NS" scoped="" ref="0x7f35f1d860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d86420"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d865b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f1d7e2d0" loc="44:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f1d7e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f1d7e650"/>
        <function-ref name="changed" scoped="" ref="0x7f35f1d7e7e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f1d7e970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f1d7eb00"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f1d7ec90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f1d7ee20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f1d7d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RS" ref="0x7f35f1d88060" loc="33:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RS" scoped="" ref="0x7f35f1d88060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d883e0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d88570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x7f35f1d8a7a0" loc="29:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1d8a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f35f1d894d0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f35f1d8acb0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f35f1d8ae40"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f35f1d89020"/>
        <function-ref name="matchContext" scoped="" ref="0x7f35f1d891b0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f35f1d8ab20"/>
        <function-ref name="getContext" scoped="" ref="0x7f35f1d89340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_NA" ref="0x7f35f1d868a0" loc="36:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_NA" scoped="" ref="0x7f35f1d868a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d86c20"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d86db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_RA" ref="0x7f35f1d88860" loc="34:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP_RA" scoped="" ref="0x7f35f1d88860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1d88be0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1d88d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTimer" ref="0x7f35f1d85270" loc="38:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTimer" scoped="" ref="0x7f35f1d85270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1d826e0"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1d84cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1d83a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1d835f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1d80020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1d82b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1d83170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1d85e60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1d820d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1d84360"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1d84830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f35f1d80c50" loc="42:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f1d80c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f35f1d7f020"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f35f1d7f1b0"/>
        <function-ref name="delRoute" scoped="" ref="0x7f35f1d7f340"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f35f1d7f4d0"/>
        <function-ref name="addRoute" scoped="" ref="0x7f35f1d7f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_rs_task" ref="0x7f35f1d4a380" loc="194:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send_rs_task" scoped="" ref="0x7f35f1d4a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1d4a700"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1d4a890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f1d89790" loc="30:../../../tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f1d89790"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1d89b10"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1d89ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1cefa30" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1cefa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1cefdd0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1cb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x7f35f1ce9280" loc="50:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ICMP_IP" scoped="" ref="0x7f35f1ce9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1ce9600"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1ce9790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f1ce82d0" loc="54:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f1ce82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f1ce8650"/>
        <function-ref name="changed" scoped="" ref="0x7f35f1ce87e0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f1ce8970"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f1ce8b00"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f1ce8c90"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f1ce8e20"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f1ce7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f1ce72a0" loc="55:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f1ce72a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f1ce7620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f1ce77b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f1ce7940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f1ce7ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f1ce7c60"/>
        <function-ref name="get" scoped="" ref="0x7f35f1ce7df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f1ce6020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f1ce6660"/>
        <function-ref name="set" scoped="" ref="0x7f35f1ce61b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f1ce6340"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f1ce64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f35f1ce9a80" loc="53:../../../tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1ce9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1ce9e00"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1ce8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f35f06749f0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f35f06749f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0674d70"/>
        <function-ref name="recv" scoped="" ref="0x7f35f0673020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f06741f0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f06741f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0674590"/>
        <function-ref name="recv" scoped="" ref="0x7f35f0674720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1cb89b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1cb89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1cb8d50"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1cb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f35f0669820" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f35f0669820"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0669ba0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f0669d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f0669020" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f0669020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f06693c0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f0669550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1cb69b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1cb69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1cb6d50"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1cb4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f35f065e020" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f35f065e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f065e3a0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f065e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f065f6a0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f065f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f065fa40"/>
        <function-ref name="recv" scoped="" ref="0x7f35f065fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1cb39b0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1cb39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1cb3d50"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1cb2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f35f06545e0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f35f06545e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0654960"/>
        <function-ref name="recv" scoped="" ref="0x7f35f0654af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f0656db0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="IPNeighborDiscoveryC.ICMP_NA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f0656db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0654180"/>
        <function-ref name="recv" scoped="" ref="0x7f35f0654310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f1cb17b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPNeighborDiscoveryC.RSTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f1cb17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1caec40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1caf260"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1cae020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1cafb60"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1cac590"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1cac110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1caf6e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1cb0400"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1cae630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1cb08d0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1cb0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f1c9a020" loc="35:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f1c9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f1c9a3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f1c9a530"/>
        <function-ref name="start" scoped="" ref="0x7f35f1c9a6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1c9a850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f35f1c98020" loc="37:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f1c98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f35f1ca08c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f35f1c9f090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f1c97170"/>
        <function-ref name="get" scoped="" ref="0x7f35f1c98c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f35f1c9aaf0" loc="36:../../../tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f35f1c9aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1c9ae70"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1c99030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1c991c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f1c92230" loc="46:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f1c92230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f1c925b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f35f1c92870" loc="47:../../../tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f1c92870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f1c92bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f1c92d80"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f1c91020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f1c911b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f1c91340"/>
        <function-ref name="get" scoped="" ref="0x7f35f1c914d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f1c91660"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f1c91ca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f1c917f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f1c91980"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f1c91b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f1c796d0" loc="43:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f1c796d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f1c79a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f1c79be0"/>
        <function-ref name="start" scoped="" ref="0x7f35f1c79d70"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1c78020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x7f35f1c535f0" loc="68:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendInfoPool" scoped="" ref="0x7f35f1c535f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1c51710"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1c52b10"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1c52210"/>
        <function-ref name="put" scoped="" ref="0x7f35f1c51020"/>
        <function-ref name="size" scoped="" ref="0x7f35f1c52690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f35f1c76940" loc="49:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f1c76940"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x7f35f1ca08c0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x7f35f1c9f090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f1c75a70"/>
        <function-ref name="get" scoped="" ref="0x7f35f1c75560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f35f1c74060" loc="53:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f35f1c74060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f1c743e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f1c74570"/>
        <function-ref name="start" scoped="" ref="0x7f35f1c74700"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1c74890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x7f35f1c78d60" loc="47:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPLower" scoped="" ref="0x7f35f1c78d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1c76180"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1c76310"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1c764a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x7f35f1c67020" loc="62:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f35f1c67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f35f1c673a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f35f1c67530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x7f35f1c57cb0" loc="64:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f1c57cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f35f1c630a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f35f1c63230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f35f1c633c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f35f1c63550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f1c78720" loc="44:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f1c78720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f1c78aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x7f35f1c4dc50" loc="70:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendQueue" scoped="" ref="0x7f35f1c4dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f35f293bd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f35f1c4aae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f35f1c48880"/>
        <function-ref name="element" scoped="" ref="0x7f35f1c47020"/>
        <function-ref name="full" scoped="" ref="0x7f35f1c4bce0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1c4a660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f1c481d0"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1c4b860"/>
        <function-ref name="size" scoped="" ref="0x7f35f1c4a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x7f35f1c47900" loc="73:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ExpireTimer" scoped="" ref="0x7f35f1c47900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1c43e80"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1c454a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1c43260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f1c45da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1c427a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1c42320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1c45920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1c46560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1c43870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1c46a30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1c45020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f35f19ca6e0" loc="438:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendTask" scoped="" ref="0x7f35f19ca6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f19caa60"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f19cabf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f35f1c714e0" loc="60:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f1c714e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f35f1c68340"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f35f1c719f0"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f35f1c71b80"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f35f1c71d10"/>
        <function-ref name="matchContext" scoped="" ref="0x7f35f1c68020"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f35f1c71860"/>
        <function-ref name="getContext" scoped="" ref="0x7f35f1c681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x7f35f1c63a10" loc="67:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FragPool" scoped="" ref="0x7f35f1c63a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1c55c00"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1c55090"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1c5c750"/>
        <function-ref name="put" scoped="" ref="0x7f35f1c55510"/>
        <function-ref name="size" scoped="" ref="0x7f35f1c5cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f1c42bc0" loc="75:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f1c42bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f1c41020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f1c411b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f1c41340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f1c414d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f1c41660"/>
        <function-ref name="get" scoped="" ref="0x7f35f1c417f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f1c41980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f1c40020"/>
        <function-ref name="set" scoped="" ref="0x7f35f1c41b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f1c41ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f1c41e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Send" ref="0x7f35f1c720f0" loc="56:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Send" scoped="" ref="0x7f35f1c720f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1c72470"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1c72600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1c72790"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1c72920"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1c72ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x7f35f1c74bd0" loc="55:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f35f1c74bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f1c73020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f1c731b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1c73340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1c734d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f1c73660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x7f35f1c66020" loc="63:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f35f1c66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f35f1c663a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f35f1c66530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f35f1c666c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f35f1c66850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f35f1c669e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x7f35f1c4f150" loc="69:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendEntryPool" scoped="" ref="0x7f35f1c4f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f35f293bd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1c4d260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1c4e660"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1c4fd40"/>
        <function-ref name="put" scoped="" ref="0x7f35f1c4eae0"/>
        <function-ref name="size" scoped="" ref="0x7f35f1c4e1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Receive" ref="0x7f35f1c72e20" loc="57:../../../tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ieee154Receive" scoped="" ref="0x7f35f1c72e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f1c711c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f199b420" loc="19:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f199b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f199b7a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f199b930"/>
        <function-ref name="start" scoped="" ref="0x7f35f199bac0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f199bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f35f1997a30" loc="23:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f35f1997a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f1997db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f35f1998020" loc="21:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f35f1998020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f19983a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f1998530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f19986c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1998850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f19989e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f35f1998d00" loc="22:../../../tos/chips/cc2420/Ieee154BareC.nc">
      <component-ref qname="Ieee154BareC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f35f1998d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f19970a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1997230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f19973c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1997550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f19976e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f1996b40" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f1996b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f1993020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f19931b0"/>
        <function-ref name="start" scoped="" ref="0x7f35f1993340"/>
        <function-ref name="stop" scoped="" ref="0x7f35f19934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f35f197a170" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f35f197a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f35f197a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f35f1982470" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f35f1982470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f35f19827f0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f35f1982980"/>
        <function-ref name="getRetries" scoped="" ref="0x7f35f1982b10"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f35f1982ca0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f35f1982e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f35f1984640" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1984640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f19849c0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f1984b50"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f1984ce0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f1984e70"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f198c030"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f198c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f35f198fd10" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f35f198fd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f198e0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f198e270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f198e400"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f198e590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f198e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f35f197a7f0" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f197a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f35f197ab70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f35f197ad00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f35f1982020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f35f19821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f35f1990820" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f35f1990820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f1990ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f35f198b080" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f198b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f198b400"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f198b590"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f198b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f1993d00" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f1993d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f19920a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f1992230"/>
        <function-ref name="request" scoped="" ref="0x7f35f19923c0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1992550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f19926e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f35f1992a00" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f35f1992a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1992d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1990020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f19901b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1990340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f19904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f35f198f020" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f35f198f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f198f3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f198f530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f198f6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f198f850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f198f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f35f198ea90" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f35f198ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f198ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f197db20" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f197db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f1978020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f19781b0"/>
        <function-ref name="start" scoped="" ref="0x7f35f1978340"/>
        <function-ref name="stop" scoped="" ref="0x7f35f19784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f35f196d230" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f196d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f35f196d5b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f35f196d740"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f35f196d8d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f35f196da60"/>
        <function-ref name="setCca" scoped="" ref="0x7f35f196dbf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f35f196dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f1978790" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f1978790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1978b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1978ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1978e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1977020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f19771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f1977490" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f1977490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f1977810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f1976d90" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f1976d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f196b180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f196b310"/>
        <function-ref name="start" scoped="" ref="0x7f35f196b4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f196b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f35f196a650" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f196a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f35f196a9d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f35f196ab60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f35f196acf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f35f196ae80"/>
        <function-ref name="setCca" scoped="" ref="0x7f35f1969030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f35f19691c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f35f1966e00" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f35f1966e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f35f19651c0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f35f1965350"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f35f19654e0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f35f1965670"/>
        <function-ref name="setCca" scoped="" ref="0x7f35f1965800"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f35f1965990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f35f195cb00" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f195cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f195ce80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f195b030"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f195b1c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f195b350"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f195b4e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f195b670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f35f1966080" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f35f1966080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1966400"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1966590"/>
        <function-ref name="modify" scoped="" ref="0x7f35f1966720"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f19668b0"/>
        <function-ref name="resend" scoped="" ref="0x7f35f1966a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f196b8f0" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f196b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f196bc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f196be00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f196a020"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f196a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f196a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f35f1965c60" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f1965c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f195d020"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f195d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f35f19673e0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f35f19673e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1967760"/>
        <function-ref name="stop" scoped="" ref="0x7f35f19678f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f35f1954130" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f1954130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f19544b0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f1954640"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f19547d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f35f19681a0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f35f19681a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f35f1968520"/>
        <function-ref name="rfOff" scoped="" ref="0x7f35f19686b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f35f1968840"/>
        <function-ref name="startVReg" scoped="" ref="0x7f35f19689d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f35f1968b60"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f35f1968cf0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f35f1968e80"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f35f1967030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f195d470" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f195d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f195d7f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f195d980"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f195db10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f195dca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f195de30"/>
        <function-ref name="get" scoped="" ref="0x7f35f195c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f195c1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f195c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f35f195c340"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f195c4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f195c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f35f19694b0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f19694b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1969830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f19699c0"/>
        <function-ref name="request" scoped="" ref="0x7f35f1969b50"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1969ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1969e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f35f1954b90" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f35f1954b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f195a0a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f195a230"/>
        <function-ref name="isState" scoped="" ref="0x7f35f195a3c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f195a550"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f195a6e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f195a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f35f194f5d0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f35f194f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f194f950"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f194fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f35f1951660" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f35f1951660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f19519e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1951b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f35f1952730" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f35f1952730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1952ab0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1952c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f35f1904020" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f1904020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f35f19043a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f35f1904530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f35f19046c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f35f1904850"/>
        <function-ref name="setCca" scoped="" ref="0x7f35f19049e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f35f1904b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f35f1903ca0" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f35f1903ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f35f19020a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f35f1905300" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f35f1905300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1905680"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1905810"/>
        <function-ref name="modify" scoped="" ref="0x7f35f19059a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1905b30"/>
        <function-ref name="resend" scoped="" ref="0x7f35f1905cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f19089b0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f19089b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1908d30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1905020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f35f1902470" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f35f1902470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f35f19027f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f35f18f7cf0" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f35f18f7cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f35f18f60a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f35f18f6230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f35f18f63c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f35f18f6550"/>
        <function-ref name="setCca" scoped="" ref="0x7f35f18f66e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f35f18f6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f35f18ee200" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f35f18ee200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f35f18ed7c0"/>
        <function-ref name="clear" scoped="" ref="0x7f35f18e4020"/>
        <function-ref name="isValid" scoped="" ref="0x7f35f18ed090"/>
        <function-ref name="set" scoped="" ref="0x7f35f18e4750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f35f18d1990" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f18d1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18d1d10"/>
        <function-ref name="write" scoped="" ref="0x7f35f18d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f35f18d0380" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f35f18d0380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18d0700"/>
        <function-ref name="write" scoped="" ref="0x7f35f18d0890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f35f18f6c90" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f35f18f6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f35f18f50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f35f18d4e60" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f35f18d4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18d3210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f35f18e21e0" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f35f18e21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f35f18e2560"/>
        <function-ref name="disable" scoped="" ref="0x7f35f18e26f0"/>
        <function-ref name="captured" scoped="" ref="0x7f35f18e2880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f35f18e2a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f35f18f4020" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f35f18f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f18f1870"/>
        <function-ref name="fired" scoped="" ref="0x7f35f18f2840"/>
        <function-ref name="startAt" scoped="" ref="0x7f35f18f1220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f18f2d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f35f18f1d30"/>
        <function-ref name="start" scoped="" ref="0x7f35f18f4e30"/>
        <function-ref name="stop" scoped="" ref="0x7f35f18f2380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f35f18f0210" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f18f0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f18f0590"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f18f0720"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f18f08b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f18f0a40"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f18f0bd0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f18f0d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f35f18d6d80" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f18d6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18d5180"/>
        <function-ref name="write" scoped="" ref="0x7f35f18d5310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f35f18d56b0" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f35f18d56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18d5a30"/>
        <function-ref name="write" scoped="" ref="0x7f35f18d5bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f35f18c7780" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f35f18c7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f18c7b00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f35f18c7c90"/>
        <function-ref name="sfd" scoped="" ref="0x7f35f18c7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f18f7020" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f18f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f18f73a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f18f7530"/>
        <function-ref name="modify" scoped="" ref="0x7f35f18f76c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f18f7850"/>
        <function-ref name="resend" scoped="" ref="0x7f35f18f79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f35f18d74e0" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f18d74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f18d7860"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f18d79f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f18d7b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f35f18d35c0" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f18d35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18d3940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f35f18de080" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f35f18de080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f18de400"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f18de590"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f18de720"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f18de8b0"/>
        <function-ref name="get" scoped="" ref="0x7f35f18dea40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f18debd0"/>
        <function-ref name="set" scoped="" ref="0x7f35f18ded60"/>
        <function-ref name="clr" scoped="" ref="0x7f35f18d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f18f8020" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f18f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f18f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f35f18ef0c0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f18ef0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f18ef440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f18ef5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f18ef760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f35f18db570" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f35f18db570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f18db8f0"/>
        <function-ref name="isSet" scoped="" ref="0x7f35f18dba80"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f18dbc10"/>
        <function-ref name="set" scoped="" ref="0x7f35f18dbda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f35f18d3d00" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f18d3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18d2410"/>
        <function-ref name="write" scoped="" ref="0x7f35f18d25a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f35f18d86e0" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f35f18d86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f18d8a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f18d8bf0"/>
        <function-ref name="request" scoped="" ref="0x7f35f18d8d80"/>
        <function-ref name="granted" scoped="" ref="0x7f35f18d7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f18d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f35f18e2d60" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f35f18e2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f18e1210"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f18e13a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f18e1530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f18e16c0"/>
        <function-ref name="get" scoped="" ref="0x7f35f18e1850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f18e19e0"/>
        <function-ref name="set" scoped="" ref="0x7f35f18e1b70"/>
        <function-ref name="clr" scoped="" ref="0x7f35f18e1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f35f18d0bf0" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f35f18d0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18cf020"/>
        <function-ref name="write" scoped="" ref="0x7f35f18cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f35f18cf530" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f35f18cf530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18cf8b0"/>
        <function-ref name="write" scoped="" ref="0x7f35f18cfa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f35f18d4020" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f35f18d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f35f18d9370" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f35f18d9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f18d96f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f18d9880"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f18d9a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f18d9ba0"/>
        <function-ref name="get" scoped="" ref="0x7f35f18d9d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f18d8020"/>
        <function-ref name="set" scoped="" ref="0x7f35f18d81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f18d8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f18cb110" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f18cb110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f18cb490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f18cb620"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f18cb7b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f18cb940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f18cbad0"/>
        <function-ref name="get" scoped="" ref="0x7f35f18cbc60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f18cbdf0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f18ca4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f18ca020"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f18ca1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f18ca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f35f18d10c0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f18d10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18d1440"/>
        <function-ref name="write" scoped="" ref="0x7f35f18d15d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f18f86a0" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f18f86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f18f8a20"/>
        <function-ref name="stop" scoped="" ref="0x7f35f18f8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f35f18d6020" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f35f18d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f18d63a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f18d6530"/>
        <function-ref name="write" scoped="" ref="0x7f35f18d66c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f18d6850"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f18d69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f35f18d4730" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f35f18d4730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18d4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f35f18d2930" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f35f18d2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18d2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f35f18f54b0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f35f18f54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f35f18f5830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f35f182dc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f182dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182c210"/>
        <function-ref name="write" scoped="" ref="0x7f35f182c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f35f1837020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f35f1837020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18373a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f35f1830c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f1830c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182f020"/>
        <function-ref name="write" scoped="" ref="0x7f35f182f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f35f182b670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f182b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f182bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f35f1824e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f35f1824e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1822210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18223a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f35f182be50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f35f182be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1829210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f35f18172f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f35f18172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1817670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1817800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f35f18192f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f35f18192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1819670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1819800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f35f1835370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1835370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18356f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f35f181f670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f35f181f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f181fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f35f181a2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f181a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181a670"/>
        <function-ref name="write" scoped="" ref="0x7f35f181a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f35f182fc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f35f182fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182e020"/>
        <function-ref name="write" scoped="" ref="0x7f35f182e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f35f182ec60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f35f182ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182d020"/>
        <function-ref name="write" scoped="" ref="0x7f35f182d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f35f1825670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f35f1825670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18259f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1825b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f35f1827e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f35f1827e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1826210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f35f1829670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f35f1829670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18299f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1829b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f35f18398f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f18398f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f1839c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f1839e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f1838020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f35f1834d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f1834d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18330a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f35f1833370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f35f1833370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18337f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f35f181ea70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f181ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181edf0"/>
        <function-ref name="write" scoped="" ref="0x7f35f181d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f35f1833ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f35f1833ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1833e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f35f181aad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f181aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181ae50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1819020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f35f1834060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f1834060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18343e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f35f1820e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f35f1820e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181f210"/>
        <function-ref name="write" scoped="" ref="0x7f35f181f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f35f182e480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f182e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182e800"/>
        <function-ref name="write" scoped="" ref="0x7f35f182e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f35f182f480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f182f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182f800"/>
        <function-ref name="write" scoped="" ref="0x7f35f182f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f35f1838940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f35f1838940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1838cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f35f1821e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f1821e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1820210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f35f1822670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f35f1822670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18229f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1822b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f35f1820670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f1820670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18209f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1820b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f35f1818ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f35f1818ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1818e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1817020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f35f1819ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f35f1819ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1819e50"/>
        <function-ref name="write" scoped="" ref="0x7f35f1818020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f35f1826670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f35f1826670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18269f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1826b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f35f1822e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f35f1822e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1821210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f35f181bad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f35f181bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181be50"/>
        <function-ref name="write" scoped="" ref="0x7f35f181a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f35f1828670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f35f1828670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18289f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1828b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f35f1817ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f35f1817ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1817e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1816020"/>
        <function-ref name="write" scoped="" ref="0x7f35f18161b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1816340"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f18164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f35f18382f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f35f18382f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1838670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f35f1830490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f35f1830490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1830810"/>
        <function-ref name="write" scoped="" ref="0x7f35f18309a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f35f182d480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f182d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182d800"/>
        <function-ref name="write" scoped="" ref="0x7f35f182d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f35f1825e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f35f1825e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1824210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18243a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f35f1829e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f35f1829e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1828210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f35f1824670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f35f1824670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18249f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1824b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f35f182c670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f35f182c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182c9f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f182cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f35f1837670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f35f1837670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18379f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f35f182ce50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f182ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f182b210"/>
        <function-ref name="write" scoped="" ref="0x7f35f182b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f183ac30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f183ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1839020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f18391b0"/>
        <function-ref name="request" scoped="" ref="0x7f35f1839340"/>
        <function-ref name="granted" scoped="" ref="0x7f35f18394d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1839660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f35f1832160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f35f1832160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18324e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f35f1832e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f35f1832e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18301c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f35f181b2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f35f181b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181b670"/>
        <function-ref name="write" scoped="" ref="0x7f35f181b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f35f181dad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f35f181dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181de50"/>
        <function-ref name="write" scoped="" ref="0x7f35f181b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f35f18346b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f18346b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1834a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f35f181d2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f181d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181d670"/>
        <function-ref name="write" scoped="" ref="0x7f35f181d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f35f18182f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f35f18182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1818670"/>
        <function-ref name="write" scoped="" ref="0x7f35f1818800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f35f1826e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f1826e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1825210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f35f1821670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f35f1821670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18219f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1821b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f35f1837cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f35f1837cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f18350a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f35f18359c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f35f18359c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1835d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f35f1828e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f35f1828e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f1827210"/>
        <function-ref name="write" scoped="" ref="0x7f35f18273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f35f18327b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f35f18327b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1832b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f35f1827670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f35f1827670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f18279f0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1827b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f35f181fe50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f35f181fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f181e610"/>
        <function-ref name="write" scoped="" ref="0x7f35f181e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f35f18167a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f35f18167a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f1816b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f1816cb0"/>
        <function-ref name="write" scoped="" ref="0x7f35f1816e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f1814020"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f18141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f35f1809df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f35f1809df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f18061c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f35f1806350"/>
        <function-ref name="sfd" scoped="" ref="0x7f35f18064e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f18067c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f18067c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f1806b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f35f1805020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f35f1805020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f35f18053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f18095c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f18095c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1809940"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1809ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f35f17fe380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f35f17fe380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f17fe700"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f17fe890"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f17fea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f17febb0"/>
        <function-ref name="get" scoped="" ref="0x7f35f17fed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f17fd020"/>
        <function-ref name="set" scoped="" ref="0x7f35f17fd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f17fd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f35f17f7b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f35f17f7b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f35f17f5020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f35f17f51b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f35f17f5340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f35f17f54d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f35f17f5660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f35f17f57f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f35f17f5980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f35f17f5b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f35f17f5ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f35f17f5e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f35f17f4020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f35f17f41b0"/>
        <function-ref name="sync" scoped="" ref="0x7f35f17f4340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f35f17f45d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f35f17f4760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f35f17df9d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f35f17df9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f17dfd50"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f17de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f35f17f4d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f35f17f4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f35f17f2330"/>
        <function-ref name="clear" scoped="" ref="0x7f35f17f2a60"/>
        <function-ref name="isValid" scoped="" ref="0x7f35f17f3ba0"/>
        <function-ref name="set" scoped="" ref="0x7f35f17f1210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f35f17fd6b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f35f17fd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f17fda30"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f17fdbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f17fdd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f17fc020"/>
        <function-ref name="get" scoped="" ref="0x7f35f17fc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f17fc340"/>
        <function-ref name="set" scoped="" ref="0x7f35f17fc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f35f17fc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f35f17efcb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f17efcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f17ee0a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f17ee230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f35f17ee590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f35f17ee590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f17ee910"/>
        <function-ref name="write" scoped="" ref="0x7f35f17eeaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f35f17ed6d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f35f17ed6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f17eda50"/>
        <function-ref name="write" scoped="" ref="0x7f35f17edbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f35f17f8330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f17f8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f17f86b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f17f8840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f17f89d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f17f8b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f17f8cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f17f8e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f35f1801550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f35f1801550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f18018d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f35f1801a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f35f1801bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f35f17f93a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f35f17f93a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17f9720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f35f17ff020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f35f17ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f17ff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f17ff530"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f17ff6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f17ff850"/>
        <function-ref name="get" scoped="" ref="0x7f35f17ff9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f17ffb70"/>
        <function-ref name="set" scoped="" ref="0x7f35f17ffd00"/>
        <function-ref name="clr" scoped="" ref="0x7f35f17fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f35f17ec020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f17ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f17ec3a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f17ec530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f1802620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f1802620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f18029a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f35f17f71e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f17f71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f17f7560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f17f76f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f17f7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f1800020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f1800020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f18003a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f35f17fb6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f35f17fb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f17fba60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f17fbbf0"/>
        <function-ref name="request" scoped="" ref="0x7f35f17fbd80"/>
        <function-ref name="granted" scoped="" ref="0x7f35f17fa020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f17fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f35f17eee00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f35f17eee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f17ed1c0"/>
        <function-ref name="write" scoped="" ref="0x7f35f17ed350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f35f17fa530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f35f17fa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f17fa8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f17faa40"/>
        <function-ref name="write" scoped="" ref="0x7f35f17fabd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f17fad60"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f17f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f35f17ec8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f35f17ec8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17ece30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f35f18007c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f35f18007c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f35f1800b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f17eb150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f17eb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f17eb4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f17eb660"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f17eb7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f17eb980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f17ebb10"/>
        <function-ref name="get" scoped="" ref="0x7f35f17ebca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f17ebe30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f17ea4d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f17ea020"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f17ea1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f17ea340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f35f17ef3e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f17ef3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f17ef760"/>
        <function-ref name="write" scoped="" ref="0x7f35f17ef8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f35f17f1b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f35f17f1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f35f17fca50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f35f17fca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f17fcdd0"/>
        <function-ref name="disable" scoped="" ref="0x7f35f17fb020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f35f17fb1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f35f17fb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f35f17f9ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f17f9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f1802ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f1802ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f18010a0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1801230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f35f177fa70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f35f177fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f35f177fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f35f1783670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1783670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f17839f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f1783b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f1783d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f1780020"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f17801b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f1780340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f35f177e550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f35f177e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f35f177cb00"/>
        <function-ref name="clear" scoped="" ref="0x7f35f177b2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f35f177c3d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f177b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f35f177f0c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f177f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f177f440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f177f5d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f177f760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f35f1776480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f35f1776480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1776800"/>
        <function-ref name="isSet" scoped="" ref="0x7f35f1776990"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1776b20"/>
        <function-ref name="set" scoped="" ref="0x7f35f1776cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f35f177a660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f35f177a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f35f1779ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f35f1777460"/>
        <function-ref name="isValid" scoped="" ref="0x7f35f17795b0"/>
        <function-ref name="set" scoped="" ref="0x7f35f1777b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f35f17806e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f35f17806e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f1780a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f1780bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f1780d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f35f176e020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f35f176e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f35f176e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f35f1775d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f1775d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f17710e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f1771270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f1771400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f1771590"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f1771720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f17718b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f35f17654a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f35f17654a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f1765820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f17659b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1765b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1765cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f1765e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f35f176ea80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f35f176ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f35f176c020"/>
        <function-ref name="clear" scoped="" ref="0x7f35f176c750"/>
        <function-ref name="isValid" scoped="" ref="0x7f35f176d8d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f176ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f35f176f640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f176f640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f176f9c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f176fb50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f176fce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f35f17678b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f35f17678b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1767c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f35f1767dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1765020"/>
        <function-ref name="set" scoped="" ref="0x7f35f17651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f35f17643b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f35f17643b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1763020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f35f17636e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f35f17636e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f17623d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f35f176baf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f35f176baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f35f17680d0"/>
        <function-ref name="clear" scoped="" ref="0x7f35f1768800"/>
        <function-ref name="isValid" scoped="" ref="0x7f35f1769970"/>
        <function-ref name="set" scoped="" ref="0x7f35f1767020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f35f1771c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f35f1771c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f176f020"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f176f1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f176f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f35f1713cf0" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f35f1713cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1712980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f35f1711020" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f1711020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1711e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f1710800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f1710340"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f1710cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f170c0b0" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f170c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1709630"/>
        <function-ref name="fired" scoped="" ref="0x7f35f170bb00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f170a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f170a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1707020"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1709ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f170a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f170cca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1709020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f170b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f170b680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f35f16f7620" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f35f16f7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f7ba0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f35f1702940" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f35f1702940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1702cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f35f16fb620" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f35f16fb620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16fb9a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16fbb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f35f16f5060" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f35f16f5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f53e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f35f16ee840" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f35f16ee840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16eebc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16eed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f35f16f5840" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f35f16f5840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f5bc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f5d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f35f16e2c60" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f35f16e2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e1020"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f35f16e4c60" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f35f16e4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e3020"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f35f1701cc0" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f35f1701cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17000a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f35f16e9060" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f35f16e9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e93e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e9570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f35f16e6c60" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f35f16e6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e4020"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f35f16fa620" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f35f16fa620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16fa9a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16fab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f35f16f8620" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f35f16f8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f89a0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f35f16ef060" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f35f16ef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16ef3e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16ef570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f35f16f1840" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f35f16f1840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f1bc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f1d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f35f16f4060" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f35f16f4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f43e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f4570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f35f17032b0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f35f17032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f35f1703630"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f35f17037c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f35f1703950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f35f16fe6b0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f35f16fe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f16fea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f35f16fed00" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f35f16fed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f16fd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f35f16e8480" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f35f16e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e8800"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f35f16fd490" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f35f16fd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f16fd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f35f16e4480" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f35f16e4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e4800"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f35f17009c0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f35f17009c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1700d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f35f16ea840" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f35f16ea840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16eabc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16ead50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f35f16fae00" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f35f16fae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f81c0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f35f16fbe00" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f35f16fbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16fa1c0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16fa350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f35f17022f0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f35f17022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1702670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f35f16ec840" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f35f16ec840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16ecbc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16ecd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f35f16ed060" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f35f16ed060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16ed3e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16ed570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f35f16ea060" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f35f16ea060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16ea3e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16ea570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f35f16e2480" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f35f16e2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e2800"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f35f16e3480" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f35f16e3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e3800"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f35f16f0060" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f35f16f0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f03e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f35f16ed840" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f35f16ed840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16edbc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16edd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f35f16e6480" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f35f16e6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e6800"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f35f16f3060" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f35f16f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f33e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f35f16e1480" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f35f16e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f16e1800"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f16e1990"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e1b20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f16e1cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f16e1e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f35f1703c20" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f35f1703c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f1702020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f35f16fce00" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f35f16fce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16fb1c0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16fb350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f35f16f8e00" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f35f16f8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f71c0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f7350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f35f16ef840" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f35f16ef840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16efbc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16efd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f35f16f4840" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f35f16f4840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f4bc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f4d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f35f16ee060" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f35f16ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16ee3e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16ee570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f35f16f6060" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f35f16f6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f63e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f35f1701020" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f35f1701020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f35f16f6840" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f35f16f6840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f6bc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f6d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f1704520" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f1704520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f17048a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f1704a30"/>
        <function-ref name="request" scoped="" ref="0x7f35f1704bc0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1704d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1703020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f35f16fdae0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f35f16fdae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f16fde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f35f16fc7b0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f35f16fc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f16fcb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f35f16e7c60" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f35f16e7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e6020"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f35f16e7480" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f35f16e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e7800"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f35f16fe060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f35f16fe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f16fe3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f35f16e8c60" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f35f16e8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e7020"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f35f16e3c60" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f35f16e3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e2020"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f35f16f0840" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f35f16f0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f0bc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f0d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f35f16ec060" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f35f16ec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16ec3e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16ec570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f35f1701670" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f35f1701670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17019f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f35f1700370" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f35f1700370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f17006f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f35f16f3840" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f35f16f3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f3bc0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f35f16fc160" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f35f16fc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f35f16fc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f35f16f1060" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f35f16f1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16f13e0"/>
        <function-ref name="write" scoped="" ref="0x7f35f16f1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f35f16e9840" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f35f16e9840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f35f16e8020"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f35f16e0160" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f35f16e0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f35f16e04e0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f35f16e0670"/>
        <function-ref name="write" scoped="" ref="0x7f35f16e0800"/>
        <function-ref name="beginRead" scoped="" ref="0x7f35f16e0990"/>
        <function-ref name="readDone" scoped="" ref="0x7f35f16e0b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f35f16b5390" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f16b5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f16b5710"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f16b58a0"/>
        <function-ref name="isState" scoped="" ref="0x7f35f16b5a30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f16b5bc0"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f16b5d50"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f16b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f16abb50" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f16abb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f16aa020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f16aa1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f16aa340"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f16aa4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f16aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f16aedd0" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f16aedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f16ab180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f16ab310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f16ab4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f16ab630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f16ab7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f16a6b40" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f16a6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f16a5020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f16a51b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f16a5340"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f16a54d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f16a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f16a7660" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f16a7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f16a79e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f16a7b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f16a7d00"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f16a6020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f16a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f35f16a4760" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f35f16a4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f35f16a4ae0"/>
        <function-ref name="rand32" scoped="" ref="0x7f35f16a4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f16a6430" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f16a6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f16a67b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f35f16a3020" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f16a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f16a33a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f16a3530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f16a36c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f35f16a58f0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f16a58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f16a5c70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f16a5e00"/>
        <function-ref name="isState" scoped="" ref="0x7f35f16a4020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f16a41b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f16a4340"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f16a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f35f16a8690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f16a8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f16a8a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f16a8ba0"/>
        <function-ref name="isState" scoped="" ref="0x7f35f16a8d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f1692020"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f16921b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f1692340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f35f168b950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f35f168b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f168bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f168eaa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f168eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f168ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f35f168b200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f35f168b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f168b580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f35f16863f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f35f16863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f1686770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f1687b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f1687b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f1686020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f168ae30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f168ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f16871e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f35f1686a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f1686a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1686df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f1685020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f16851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f35f1687570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f35f1687570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f16878f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f35f1658020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f35f1658020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f16583a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f16586b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f16586b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1658a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1658bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1658d50"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1657020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f16571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f165c8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f165c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f165cc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f165cdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f165b020"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f165b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f165b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f35f165bc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f35f165bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f165a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f165a230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f165a3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f165a550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f165a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f165b5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f165b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f165b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f165dbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f165dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f165c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f165c1b0"/>
        <function-ref name="request" scoped="" ref="0x7f35f165c340"/>
        <function-ref name="granted" scoped="" ref="0x7f35f165c4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f165c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f35f165aa50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f35f165aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f165add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f35f1659170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f35f1659170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f16594f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f1659680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1659810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f16599a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f1659b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f164ed70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f164ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f164d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f164d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f164d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f164d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f164d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f35f164db10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f35f164db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f164c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f35f161fdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f35f161fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f161d180"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f161d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f35f164c2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f164c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f164c670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f164c800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f164c990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f164cb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f164ccb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f164ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f35f1650a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f35f1650a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1650da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f164f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f164f1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f164f340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f164f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f35f164bb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f35f164bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f35f164a020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f35f164a1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f35f164a340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f164a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f35f164b170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f164b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f164b4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f164b680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f164b810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f35f1650370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f35f1650370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f16506f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f16527b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f16527b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1652b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f1652cc0"/>
        <function-ref name="request" scoped="" ref="0x7f35f1652e50"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1651020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f16511b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f35f16514d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f35f16514d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1651850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f16519e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1651b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1651d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1650020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f35f164f840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f35f164f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f164fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f35f164e020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f35f164e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f164e3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f164e530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f164e6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f164e850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f164e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f15fedd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f15fedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f15fd180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f35f15fd410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f35f15fd410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f35f15fd790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f35f15fd920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f35f15fdab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f15fdc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f15f2b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f15f2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f15f1020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f15f11b0"/>
        <function-ref name="start" scoped="" ref="0x7f35f15f1340"/>
        <function-ref name="stop" scoped="" ref="0x7f35f15f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f15f0860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f15f0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f15f0be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f15f0d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f15ef020"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f15ef1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f15ef340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f35f15ef690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f35f15ef690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f15efa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f15f6ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f15f6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f15f30a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f15f3230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f15f33c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f15f3550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f15f36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f35f15f2080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f15f2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f35f15f2400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f35f15f2590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f35f15f2720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f35f15f28b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f35f15f1800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f35f15f1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f15f1b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f15f1d10"/>
        <function-ref name="isState" scoped="" ref="0x7f35f15f0020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f15f01b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f15f0340"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f15f04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f35f15efd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f35f15efd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f15ee180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f15ee310"/>
        <function-ref name="start" scoped="" ref="0x7f35f15ee4a0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f15ee630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f15f3980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f15f3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f15f3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f35f15eb2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f15eb2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f35f15eb650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f35f15eb7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f35f15eb970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f35f15ebb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f35f15ed580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f15ed580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f15ed900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f15eda90"/>
        <function-ref name="isState" scoped="" ref="0x7f35f15edc20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f15eddb0"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f15ec020"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f15ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f15ddd70" loc="47:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f15ddd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f15dc180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f15dc310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f15dc4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f15dc630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f15dc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f15de2a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f15de2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f15de620"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f15de7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f15de940"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f15dead0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f15dec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f35f15dd020" loc="43:../../../tos/chips/cc2420/link/PacketLinkC.nc">
      <component-ref qname="PacketLinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f35f15dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f35f15dd3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f35f15dd530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f35f15dd6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f35f15dd850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f35f15dd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f15d8dd0" loc="47:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f15d8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f15d7180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f15d7310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f15d74a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f15d7630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f15d77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x7f35f15cd2a0" loc="77:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="send" scoped="" ref="0x7f35f15cd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f15cd620"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f15cd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x7f35f15d5650" loc="50:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DelayTimer" scoped="" ref="0x7f35f15d5650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f15d1c40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f15d31e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f15d1020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f15d3ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f15d0590"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f15d0110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f15d3660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f15d4390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f15d1630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f15d4860"/>
        <function-ref name="stop" scoped="" ref="0x7f35f15d4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f15db3a0" loc="42:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f15db3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f15db720"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f15db8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f15dba40"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f15dbbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f15dbd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendState" ref="0x7f35f15d7af0" loc="48:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f35f15d7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f15d7e70"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f15d6030"/>
        <function-ref name="isState" scoped="" ref="0x7f35f15d61c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f15d6350"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f15d64e0"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f15d6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f35f15d0a30" loc="51:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f35f15d0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f35f15d0db0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f35f15cf020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f35f15cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f35f15d69a0" loc="49:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f15d69a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f15d6d20"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f15d5020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f15d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f35f15d8080" loc="43:../../../tos/chips/cc2420/link/PacketLinkP.nc">
      <component-ref qname="PacketLinkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f35f15d8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f35f15d8400"/>
        <function-ref name="setRetries" scoped="" ref="0x7f35f15d8590"/>
        <function-ref name="getRetries" scoped="" ref="0x7f35f15d8720"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f35f15d88b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f35f15d8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f35f15a2350" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="PacketLinkC.SendStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f35f15a2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f35f15a26d0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f35f15a2860"/>
        <function-ref name="isState" scoped="" ref="0x7f35f15a29f0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f35f15a2b80"/>
        <function-ref name="requestState" scoped="" ref="0x7f35f15a2d10"/>
        <function-ref name="forceState" scoped="" ref="0x7f35f15a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f15a0750" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f15a0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f159cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f35f159e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f159c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f159eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f159b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f159b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f159e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f159f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f159c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f159f860"/>
        <function-ref name="stop" scoped="" ref="0x7f35f159fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f35f1999dd0" loc="11:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f35f1999dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f35f1589180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f35f1589310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f35f15894a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f35f1589630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f35f1587670" loc="13:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f1587670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f15879f0"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f1587b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f1587d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f35f15898f0" loc="12:../../../tos/chips/cc2420/RadioPacketMetadataC.nc">
      <component-ref qname="RadioPacketMetadataC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f35f15898f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f35f1589c70"/>
        <function-ref name="setRetries" scoped="" ref="0x7f35f1589e00"/>
        <function-ref name="getRetries" scoped="" ref="0x7f35f1587020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f35f15871b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f35f1587340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f35f1583020" loc="12:../../../tos/chips/cc2420/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f35f1583020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f35f15833a0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f35f1583530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f35f157ec70" loc="10:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f35f157ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f35f157d020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f35f157d1b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f35f157d340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f35f157d4d0"/>
        <function-ref name="getPower" scoped="" ref="0x7f35f157d660"/>
        <function-ref name="getLqi" scoped="" ref="0x7f35f157d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x7f35f157e450" loc="9:../../../tos/lib/net/blip/platform/CC2420ReadLqiC.nc">
      <component-ref qname="CC2420ReadLqiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadLqi" scoped="" ref="0x7f35f157e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x7f35f157e7d0"/>
        <function-ref name="readLqi" scoped="" ref="0x7f35f157e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f1584e70" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.ExpireTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f1584e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f1575390"/>
        <function-ref name="fired" scoped="" ref="0x7f35f1577970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f1576720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f15762a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f1575c90"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f1575810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f1577df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f1578a90"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f1576d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f1577020"/>
        <function-ref name="stop" scoped="" ref="0x7f35f15774f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f156da40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f156da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1547b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1547020"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1549670"/>
        <function-ref name="put" scoped="" ref="0x7f35f15474a0"/>
        <function-ref name="size" scoped="" ref="0x7f35f1549af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f0570210" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f0570210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
            <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f056e330"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f056f780"/>
        <function-ref name="empty" scoped="" ref="0x7f35f0570e00"/>
        <function-ref name="put" scoped="" ref="0x7f35f056fc00"/>
        <function-ref name="size" scoped="" ref="0x7f35f056f300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0572af0" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0572af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0572e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f1543020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f1543020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f35f293bd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1541110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1542550"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1543c10"/>
        <function-ref name="put" scoped="" ref="0x7f35f15429d0"/>
        <function-ref name="size" scoped="" ref="0x7f35f15420d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f055ed80" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f055ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f35f293bd00"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f055ce70"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f055c300"/>
        <function-ref name="empty" scoped="" ref="0x7f35f055d9a0"/>
        <function-ref name="put" scoped="" ref="0x7f35f055c780"/>
        <function-ref name="size" scoped="" ref="0x7f35f055de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f055e690" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f055e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f055ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f35f153d850" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f35f153d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><struct-ref name="send_entry" ref="0x7f35f293bd00"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f35f15216e0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f35f151f490"/>
        <function-ref name="element" scoped="" ref="0x7f35f151fb00"/>
        <function-ref name="full" scoped="" ref="0x7f35f1522900"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f1521260"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f1521d90"/>
        <function-ref name="empty" scoped="" ref="0x7f35f1522480"/>
        <function-ref name="size" scoped="" ref="0x7f35f1522d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f151c020" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f151c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1519110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f151a550"/>
        <function-ref name="empty" scoped="" ref="0x7f35f151cc10"/>
        <function-ref name="put" scoped="" ref="0x7f35f151a9d0"/>
        <function-ref name="size" scoped="" ref="0x7f35f151a0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f0535020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f0535020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f0532110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f0533550"/>
        <function-ref name="empty" scoped="" ref="0x7f35f0535c10"/>
        <function-ref name="put" scoped="" ref="0x7f35f05339d0"/>
        <function-ref name="size" scoped="" ref="0x7f35f05330d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0536900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0536900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0536c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f1510440" loc="11:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f1510440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f15107c0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f1510950"/>
        <function-ref name="start" scoped="" ref="0x7f35f1510ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1510c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x7f35f150b1a0" loc="16:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSplitControl" scoped="" ref="0x7f35f150b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f150b520"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f150b6b0"/>
        <function-ref name="start" scoped="" ref="0x7f35f150b840"/>
        <function-ref name="stop" scoped="" ref="0x7f35f150b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscoveryControl" ref="0x7f35f150bdd0" loc="17:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscoveryControl" scoped="" ref="0x7f35f150bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f150a180"/>
        <function-ref name="stop" scoped="" ref="0x7f35f150a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f150a5c0" loc="18:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f150a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f150a940"/>
        <function-ref name="changed" scoped="" ref="0x7f35f150aad0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f150ac60"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f150adf0"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f1509020"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f15091b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f1509340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x7f35f150c8c0" loc="15:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoutingControl" scoped="" ref="0x7f35f150c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f150cc40"/>
        <function-ref name="stop" scoped="" ref="0x7f35f150cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f35f150c020" loc="14:../../../tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f150c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f150c3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f150c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x7f35f14f0020" loc="15:../../../tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPPacket" scoped="" ref="0x7f35f14f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x7f35f14f03a0"/>
        <function-ref name="delTLV" scoped="" ref="0x7f35f14f0530"/>
        <function-ref name="findTLV" scoped="" ref="0x7f35f14f06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f14d7a40" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f14d7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f35f2eec110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f14d5b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f14d5020"/>
        <function-ref name="empty" scoped="" ref="0x7f35f14d6670"/>
        <function-ref name="put" scoped="" ref="0x7f35f14d54a0"/>
        <function-ref name="size" scoped="" ref="0x7f35f14d6af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f0523d10" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f0523d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x7f35f2eec110"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f0520e10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f05202a0"/>
        <function-ref name="empty" scoped="" ref="0x7f35f0521940"/>
        <function-ref name="put" scoped="" ref="0x7f35f0520720"/>
        <function-ref name="size" scoped="" ref="0x7f35f0521dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0523620" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0523620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f05239a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f35f14d2970" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="IPStackC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f35f14d2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f30f9df0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f35f2f1f200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f35f14cee80"/>
        <function-ref name="fired" scoped="" ref="0x7f35f14d04a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f35f14ce260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f35f14d0da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f35f14cd7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f35f14cd320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f35f14d0920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f35f14d15a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f35f14ce870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f35f14d1a70"/>
        <function-ref name="stop" scoped="" ref="0x7f35f14d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f35f14c1ae0" loc="43:../../../tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f35f14c1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f35f2e39020"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x7f35f2e394f0"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f35f14bf990"/>
        <function-ref name="enqueue" scoped="" ref="0x7f35f14be740"/>
        <function-ref name="element" scoped="" ref="0x7f35f14bedb0"/>
        <function-ref name="full" scoped="" ref="0x7f35f14c0bd0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f14bf510"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f14be090"/>
        <function-ref name="empty" scoped="" ref="0x7f35f14c0750"/>
        <function-ref name="size" scoped="" ref="0x7f35f14bf090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f14ba4a0" loc="42:../../../tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f14ba4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f35f2e39020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f35f2e394f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f14b7570"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f14b99d0"/>
        <function-ref name="empty" scoped="" ref="0x7f35f14b90d0"/>
        <function-ref name="put" scoped="" ref="0x7f35f14b9e50"/>
        <function-ref name="size" scoped="" ref="0x7f35f14b9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f35f0501020" loc="56:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pool" scoped="" ref="0x7f35f0501020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:116" alignment="I:2"><struct-ref ref="0x7f35f2e39020"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x7f35f2e394f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f04fe110"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f04ff550"/>
        <function-ref name="empty" scoped="" ref="0x7f35f0501c10"/>
        <function-ref name="put" scoped="" ref="0x7f35f04ff9d0"/>
        <function-ref name="size" scoped="" ref="0x7f35f04ff0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0502900" loc="55:../../../tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0502900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0502c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f35f14af540" loc="8:../../../tos/lib/net/rpl/RPLOFC.nc">
      <component-ref qname="RPLOFC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f35f14af540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f35f14af8c0"/>
        <function-ref name="OCP" scoped="" ref="0x7f35f14afa50"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f35f14afbe0"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f14afd70"/>
        <function-ref name="resetRank" scoped="" ref="0x7f35f14ac020"/>
        <function-ref name="getOCP" scoped="" ref="0x7f35f14ac1b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f35f14ac340"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f35f14ac4d0"/>
        <function-ref name="getParent" scoped="" ref="0x7f35f14ac660"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f35f14ac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x7f35f14a5260" loc="43:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ParentTable" scoped="" ref="0x7f35f14a5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f14a55e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x7f35f14a59b0" loc="44:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLDAO" scoped="" ref="0x7f35f14a59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x7f35f14a5d30"/>
        <function-ref name="getStoreState" scoped="" ref="0x7f35f14a4020"/>
        <function-ref name="startDAO" scoped="" ref="0x7f35f14a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x7f35f14ab360" loc="40:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLOF" scoped="" ref="0x7f35f14ab360"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x7f35f14ab6e0"/>
        <function-ref name="OCP" scoped="" ref="0x7f35f14ab870"/>
        <function-ref name="objectSupported" scoped="" ref="0x7f35f14aba00"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f14abb90"/>
        <function-ref name="resetRank" scoped="" ref="0x7f35f14abd20"/>
        <function-ref name="getOCP" scoped="" ref="0x7f35f14a8020"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x7f35f14a81b0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x7f35f14a8340"/>
        <function-ref name="getParent" scoped="" ref="0x7f35f14a84d0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x7f35f14a8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x7f35f14a78b0" loc="42:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRoute" scoped="" ref="0x7f35f14a78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x7f35f14a7c30"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f14a6ca0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x7f35f14a6e30"/>
        <function-ref name="hasDODAG" scoped="" ref="0x7f35f14a61b0"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f14a6340"/>
        <function-ref name="inconsistency" scoped="" ref="0x7f35f14a64d0"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f14a6660"/>
        <function-ref name="getDodagId" scoped="" ref="0x7f35f14a67f0"/>
        <function-ref name="getDTSN" scoped="" ref="0x7f35f14a6020"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x7f35f14a6980"/>
        <function-ref name="getInstanceID" scoped="" ref="0x7f35f14a6b10"/>
        <function-ref name="setDTSN" scoped="" ref="0x7f35f14a7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x7f35f14a8990" loc="41:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ForwardingTable" scoped="" ref="0x7f35f14a8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x7f35f14a8d10"/>
        <function-ref name="lookupRoute" scoped="" ref="0x7f35f14a7020"/>
        <function-ref name="delRoute" scoped="" ref="0x7f35f14a71b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x7f35f14a7340"/>
        <function-ref name="addRoute" scoped="" ref="0x7f35f14a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x7f35f14a4540" loc="45:../../../tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RPLRankInfo" scoped="" ref="0x7f35f14a4540"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x7f35f14a48c0"/>
        <function-ref name="isRoot" scoped="" ref="0x7f35f14a4a50"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x7f35f14a4be0"/>
        <function-ref name="hasParent" scoped="" ref="0x7f35f14a4d70"/>
        <function-ref name="validInstance" scoped="" ref="0x7f35f14a3020"/>
        <function-ref name="declareRoot" scoped="" ref="0x7f35f14a31b0"/>
        <function-ref name="getRank" scoped="" ref="0x7f35f14a3340"/>
        <function-ref name="getEtx" scoped="" ref="0x7f35f14a34d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x7f35f14a3660"/>
        <function-ref name="compareAddr" scoped="" ref="0x7f35f14a37f0"/>
        <function-ref name="isParent" scoped="" ref="0x7f35f14a3980"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x7f35f14a3b10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x7f35f14a3ca0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x7f35f14a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f1469840" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f1469840"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1469be0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f1469d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f35f04edae0" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f35f04edae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f04ede60"/>
        <function-ref name="recv" scoped="" ref="0x7f35f04eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f04ed2e0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f04ed2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f04ed680"/>
        <function-ref name="recv" scoped="" ref="0x7f35f04ed810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f14525c0" loc="46:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f14525c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f1452940"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f1452ad0"/>
        <function-ref name="start" scoped="" ref="0x7f35f1452c60"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1452df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f35f144e600" loc="47:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f35f144e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f144e980"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f144eb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f144eca0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f144ee30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f144d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f35f144de10" loc="49:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f35f144de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f144c1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f144c350"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f144c4e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f144c670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f144c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f144d800" loc="48:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f144d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f144db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f1439300" loc="53:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f1439300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f1439680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f1439810"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f14399a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f1439b30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f1439cc0"/>
        <function-ref name="get" scoped="" ref="0x7f35f1439e50"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f1436020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f1436660"/>
        <function-ref name="set" scoped="" ref="0x7f35f14361b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f1436340"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f14364d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f35f144a800" loc="51:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f144a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f144ab80"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f144ad10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f1439020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f35f144b020" loc="50:../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f35f144b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f35f144b3a0"/>
        <function-ref name="source" scoped="" ref="0x7f35f144b530"/>
        <function-ref name="address" scoped="" ref="0x7f35f144b6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f35f144b850"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f144b9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f35f144bb70"/>
        <function-ref name="type" scoped="" ref="0x7f35f144bd00"/>
        <function-ref name="setType" scoped="" ref="0x7f35f144a020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f35f144a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f35f144a340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f35f144a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f35f13db4a0" loc="54:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f35f13db4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f13db820"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f13db9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f13dbb40"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f13dbcd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f13dbe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f35f13da120" loc="55:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f35f13da120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f13da4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f35f1434300" loc="47:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f35f1434300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f14346a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1434830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f14349c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1434b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1434ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f35f13ddd60" loc="50:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f35f13ddd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f13dc180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f13dc310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f13dc4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f13dc630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f13dc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f13df0d0" loc="48:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f13df0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f13df470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f35f13dca10" loc="51:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f35f13dca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f13dcd90"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f13db020"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f13db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f35f13df6c0" loc="49:../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f35f13df6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f35f13dfa40"/>
        <function-ref name="source" scoped="" ref="0x7f35f13dfbd0"/>
        <function-ref name="address" scoped="" ref="0x7f35f13dfd60"/>
        <function-ref name="destination" scoped="" ref="0x7f35f13dd020"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f13dd1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f35f13dd340"/>
        <function-ref name="type" scoped="" ref="0x7f35f13dd4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f35f13dd660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f35f13dd7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f35f13dd980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f35f13ddb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f13d8b90" loc="50:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f13d8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f13d5020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f13d51b0"/>
        <function-ref name="start" scoped="" ref="0x7f35f13d5340"/>
        <function-ref name="stop" scoped="" ref="0x7f35f13d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f13d4790" loc="52:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f13d4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f35f310e8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f13d4b10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f13d4ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f13d4e30"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f13d3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f13d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f13d8540" loc="49:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f13d8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f13d88c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f13d5c60" loc="51:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f13d5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f35f310e8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f13d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f13d12b0" loc="56:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f13d12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f13d1630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f13d17c0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f13d1950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f13d1ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f13d1c70"/>
        <function-ref name="get" scoped="" ref="0x7f35f13d1e00"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f13d0020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f13d0660"/>
        <function-ref name="set" scoped="" ref="0x7f35f13d01b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f13d0340"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f13d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f35f13cd970" loc="55:../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f35f13cd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f35f310e8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f35f13cdcf0"/>
        <function-ref name="offset" scoped="" ref="0x7f35f13cde80"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f35f13d1030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f35f13ca7c0" loc="66:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f35f13ca7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f13cab40"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f13cacd0"/>
        <function-ref name="start" scoped="" ref="0x7f35f13cae60"/>
        <function-ref name="stop" scoped="" ref="0x7f35f13c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f35f13646e0" loc="332:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f35f13646e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1364a60"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1364bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f35f13b8860" loc="74:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f35f13b8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f13b8be0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f13b8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f35f139b4f0" loc="191:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f35f139b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f139b870"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f139ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f13ca170" loc="65:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f13ca170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f13ca4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f35f13b4480" loc="75:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f35f13b4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f35f13b4800"/>
        <function-ref name="flush" scoped="" ref="0x7f35f13b4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f35f1367c70" loc="322:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f35f1367c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1366020"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f13661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f35f13c2020" loc="72:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f35f13c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f35f13c23a0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f35f13c2530"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f35f13c26c0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f35f13c2850"/>
        <function-ref name="putData" scoped="" ref="0x7f35f13c29e0"/>
        <function-ref name="putDone" scoped="" ref="0x7f35f13c2b70"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f35f13c2d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f13be020" loc="73:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f13be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f13be3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f13be530"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f13be6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f13be850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f13be9e0"/>
        <function-ref name="get" scoped="" ref="0x7f35f13beb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f13bed00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f13b84d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f13b8020"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f13b81b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f13b8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f35f1360a00" loc="341:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f35f1360a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1360d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f135f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f35f13c3720" loc="67:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f35f13c3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f35f13c3aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x7f35f13c3c30"/>
        <function-ref name="startSend" scoped="" ref="0x7f35f13c3dc0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f35f13c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f35f13c0c40" loc="68:../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f35f13c0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f35f13c6020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f35f13c61b0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f35f13c6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f35f1295020" loc="275:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f35f1295020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f12953a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1295530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f129ade0" loc="51:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f129ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f35f310e8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f12991c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f1299350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f12994e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1299670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1299800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f35f1295800" loc="158:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f35f1295800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f1295b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f1295d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f35f129a6c0" loc="50:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f35f129a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f35f310e8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f35f129aa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f35f1299c20" loc="54:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f35f1299c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f35f310e8e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f35f1298020"/>
        <function-ref name="offset" scoped="" ref="0x7f35f12981b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f35f1298340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f1297920" loc="57:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f1297920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f1297ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f1297e30"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f1296020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f12961b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f1296340"/>
        <function-ref name="get" scoped="" ref="0x7f35f12964d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f1296660"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f1296ca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f1296980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f12967f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f1296b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f35f1298e80" loc="56:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f35f1298e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f35f1297220"/>
        <function-ref name="nextByte" scoped="" ref="0x7f35f12973b0"/>
        <function-ref name="startSend" scoped="" ref="0x7f35f1297540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f35f12976d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f35f1298590" loc="55:../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f35f1298590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f35f1298910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f35f1298aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f35f1298c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f35f1285d20" loc="50:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f35f1285d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f128e0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f35f128e270"/>
        <function-ref name="receive" scoped="" ref="0x7f35f128e400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f35f128e590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f35f128e720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f35f128e8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f128ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f35f1293e00" loc="48:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f35f1293e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f35f12901c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7f35f1290350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f35f12904e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f35f1290670"/>
        <function-ref name="putData" scoped="" ref="0x7f35f1290800"/>
        <function-ref name="putDone" scoped="" ref="0x7f35f1290990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f35f1290b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f128ecc0" loc="51:../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f128ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f128d0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f128d230"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f128d3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f128d550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f128d6e0"/>
        <function-ref name="get" scoped="" ref="0x7f35f128d870"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f128da00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f12831b0"/>
        <function-ref name="set" scoped="" ref="0x7f35f128db90"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f128dd20"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f1283020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f35f1266020" loc="6:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f35f1266020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f12663a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f35f1266530"/>
        <function-ref name="receive" scoped="" ref="0x7f35f12666c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f35f1266850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f35f1268890" loc="5:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f35f1268890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1268c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f35f1268da0"/>
        <function-ref name="receive" scoped="" ref="0x7f35f1267020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f35f12671b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f35f1267340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f35f12674d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1267660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f1268080" loc="4:../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f1268080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f1268400"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1268590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f10d8c70" loc="45:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f10d8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f10d7020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f10d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f35f10d5440" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f35f10d5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f10d57c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f35f10d5950"/>
        <function-ref name="receive" scoped="" ref="0x7f35f10d5ae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f35f10d5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f35f10d4020" loc="49:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f10d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f35f10d43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f35f10d7440" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f35f10d7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f10d77c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f35f10d7950"/>
        <function-ref name="receive" scoped="" ref="0x7f35f10d7ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f35f10d7c70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f35f10d7e00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f35f10d5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f10d51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f10d8020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f10d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f10d83a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f10d8530"/>
        <function-ref name="request" scoped="" ref="0x7f35f10d86c0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f10d8850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f10d89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f35f1256a30" loc="42:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f1256a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f1256db0"/>
        <function-ref name="configure" scoped="" ref="0x7f35f1254020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f35f1252020" loc="44:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f35f1252020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f12523a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f35f1252530"/>
        <function-ref name="receive" scoped="" ref="0x7f35f12526c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f35f1252850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f35f124f450" loc="47:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f124f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f35f124f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f35f1254860" loc="43:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f35f1254860"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1254be0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f35f1254d70"/>
        <function-ref name="receive" scoped="" ref="0x7f35f1253020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f35f12531b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f35f1253340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f35f12534d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1253660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f35f12511d0" loc="46:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f35f12511d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1251550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f12516e0"/>
        <function-ref name="request" scoped="" ref="0x7f35f1251870"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1251a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1251b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f12577a0" loc="41:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f12577a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1257b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f1257cb0"/>
        <function-ref name="request" scoped="" ref="0x7f35f1257e40"/>
        <function-ref name="granted" scoped="" ref="0x7f35f1256020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f12561b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f35f124e1d0" loc="48:../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f124e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f124e550"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f124e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f35f11e3dc0" loc="44:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f11e3dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f11e2180"/>
        <function-ref name="configure" scoped="" ref="0x7f35f11e2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f35f11e1890" loc="46:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f35f11e1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f11e1c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f35f11e1dc0"/>
        <function-ref name="receive" scoped="" ref="0x7f35f11e0020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f35f11e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f35f11df3e0" loc="49:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f11df3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f35f11df780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f35f11dfa50" loc="50:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f35f11dfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f11dfdd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f11de020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f11de1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f11de340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f11de4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f11de660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f11de7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f11de980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f11deb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f11deca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f11dee30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f11dd020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f11dd1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f11dd440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f11dd5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f11dd760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f11dd8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f11dda80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f11ddc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f11ddda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f11dc020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f11dc1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f11dc340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f11dc4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f11dc660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f11dc9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f11dcb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f11dcd10"/>
        <function-ref name="tx" scoped="" ref="0x7f35f11db020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f11db1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f11db340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f11db4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f11db660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f11db7f0"/>
        <function-ref name="rx" scoped="" ref="0x7f35f11db980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f11dbb10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f11dbca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f11dbe30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f11da020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f11da1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f35f11e26d0" loc="45:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f35f11e26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f11e2a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f35f11e2c00"/>
        <function-ref name="receive" scoped="" ref="0x7f35f11e2d90"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f35f11e1020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f35f11e11b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f35f11e1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f11e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f35f11d8020" loc="52:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f11d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f11d8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f11d7800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f11d7340"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f11d7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f35f11e05b0" loc="48:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f35f11e05b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f11e0950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f11e0ae0"/>
        <function-ref name="request" scoped="" ref="0x7f35f11e0c70"/>
        <function-ref name="granted" scoped="" ref="0x7f35f11e0e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f11df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f11e3020" loc="43:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f11e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f11e33c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f11e3550"/>
        <function-ref name="request" scoped="" ref="0x7f35f11e36e0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f11e3870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f11e3a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f35f11da5b0" loc="51:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f35f11da5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f11da950"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f11daae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f11d6120" loc="53:../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f11d6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f11d64a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f11d6630"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f11d67c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f11d6950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f11d6ae0"/>
        <function-ref name="get" scoped="" ref="0x7f35f11d6c70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f11d6e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f11d54d0"/>
        <function-ref name="set" scoped="" ref="0x7f35f11d51b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f11d5020"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f11d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f35f11c7860" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f11c7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f11c7be0"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f11c7d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f35f11ca500" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f11ca500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f11ca880"/>
        <function-ref name="stop" scoped="" ref="0x7f35f11caa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f35f11cad30" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f11cad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f11cd0e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f11cd270"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f11cd400"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f11cd590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f11cd720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f11cd8b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f11cda40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f11cdbd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f11cdd60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f11cc020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f11cc1b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f11cc340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f11cc4d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f11cc760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f11cc8f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f11cca80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f11ccc10"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f11ccda0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f11c9020"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f11c91b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f11c9340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f11c94d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f11c9660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f11c97f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f11c9980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f11c9d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f11c8020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f11c81b0"/>
        <function-ref name="tx" scoped="" ref="0x7f35f11c8340"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f11c84d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f11c8660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f11c87f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f11c8980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f11c8b10"/>
        <function-ref name="rx" scoped="" ref="0x7f35f11c8ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f11c8e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f11c7020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f11c71b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f11c7340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f11c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f35f11b9990" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f35f11b9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f11b9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f11b8020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f11b81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f11b8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f11b84d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f11b8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f11b87f0"/>
        <function-ref name="get" scoped="" ref="0x7f35f11b8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f11b8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f11b8ca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f11b8e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f11b7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f11b71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f11b7440"/>
        <function-ref name="clr" scoped="" ref="0x7f35f11b75d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f35f11bd130" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f35f11bd130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f11bd4b0"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f11bd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f35f11b7990" loc="81:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f35f11b7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f11b7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f11b6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f11b61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f11b6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f11b64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f11b6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f11b67f0"/>
        <function-ref name="get" scoped="" ref="0x7f35f11b6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f11b6b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f11b6ca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f11b6e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f11b5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f11b51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f11b5440"/>
        <function-ref name="clr" scoped="" ref="0x7f35f11b55d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f35f11b5990" loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f35f11b5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f11b5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f11b4020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f11b41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f11b4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f11b44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f11b4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f11b47f0"/>
        <function-ref name="get" scoped="" ref="0x7f35f11b4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f11b4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f11b4ca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f11b4e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f11b3020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f11b31b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f11b3440"/>
        <function-ref name="clr" scoped="" ref="0x7f35f11b35d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f35f11c3550" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f35f11c3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f11c38d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f11c3a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f11c3bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f11c3d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f11c1020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f11c11b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f11c1340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f11c14d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f11c1660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f11c17f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f11c1980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f11c1b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f11c1ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f11c0020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f11c01b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f11c0340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f11c04d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f11c0660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f11c07f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f11c0980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f11c0b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f11c0ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f11c0e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f11bf020"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f11bf1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f11bf540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f11bf6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f11bf860"/>
        <function-ref name="tx" scoped="" ref="0x7f35f11bf9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f11bfb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f11bfd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f11be020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f11be1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f11be340"/>
        <function-ref name="rx" scoped="" ref="0x7f35f11be4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f11be660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f11be7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f11be980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f11beb10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f11beca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f35f11c6bc0" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f11c6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f11c3020"/>
        <function-ref name="stop" scoped="" ref="0x7f35f11c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f35f11bb990" loc="79:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f35f11bb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f11bbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f11ba020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f11ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f11ba340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f11ba4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f11ba660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f11ba7f0"/>
        <function-ref name="get" scoped="" ref="0x7f35f11ba980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f11bab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f11baca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f11bae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f11b9020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f11b91b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f11b9440"/>
        <function-ref name="clr" scoped="" ref="0x7f35f11b95d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f35f11bda00" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f35f11bda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f35f11bdd80"/>
        <function-ref name="isInput" scoped="" ref="0x7f35f11bc020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f35f11bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f35f11bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f35f11bc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f35f11bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f35f11bc7f0"/>
        <function-ref name="get" scoped="" ref="0x7f35f11bc980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f35f11bcb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f35f11bcca0"/>
        <function-ref name="set" scoped="" ref="0x7f35f11bce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f35f11bb020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f35f11bb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f35f11bb440"/>
        <function-ref name="clr" scoped="" ref="0x7f35f11bb5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f35f1136110" loc="43:../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f35f1136110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f35f2f1f640"/>
            <typename><typedef-ref name="T32khz" ref="0x7f35f2f1f9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f35f1135020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f35f11359a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f35f11354e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f35f1135e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f046f5d0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f046f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f046f950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f046fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f04697c0" loc="48:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f04697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f0469b40"/>
        <function-ref name="configure" scoped="" ref="0x7f35f0469cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f35f0469020" loc="46:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f35f0469020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f04693a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f0469530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f0470880" loc="42:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f0470880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f0470c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f0470d90"/>
        <function-ref name="request" scoped="" ref="0x7f35f046f020"/>
        <function-ref name="granted" scoped="" ref="0x7f35f046f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f046f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f35f046e5a0" loc="45:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f35f046e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f35f046e920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f35f046eab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f35f046ec40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f35f046edd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f35f046d020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f35f046d1b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f35f046d340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f35f046d4d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f35f046d660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f35f046d7f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f35f046d980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f35f046db10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f35f046dca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f35f046c020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f35f046c1b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f35f046c340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f35f046c4d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f35f046c660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f35f046c7f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f35f046c980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f35f046cb10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f35f046cca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f35f046ce30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f35f046b020"/>
        <function-ref name="getMode" scoped="" ref="0x7f35f046b1b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f35f046b540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f35f046b6d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f35f046b860"/>
        <function-ref name="tx" scoped="" ref="0x7f35f046b9f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f35f046bb80"/>
        <function-ref name="disableUart" scoped="" ref="0x7f35f046bd10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f35f046a020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f35f046a1b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f35f046a340"/>
        <function-ref name="rx" scoped="" ref="0x7f35f046a4d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f35f046a660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f35f046a7f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f35f046a980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f35f046ab10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f35f046aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f046fd70" loc="44:../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f046fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f046e180"/>
        <function-ref name="userId" scoped="" ref="0x7f35f046e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f111a510" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f111a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f111a890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f111aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f1119af0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f1119af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f1119e70"/>
        <function-ref name="configure" scoped="" ref="0x7f35f1117030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f35f111c510" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f35f111c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f111c890"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f111ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f111b280" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f111b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f111b600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f111b790"/>
        <function-ref name="request" scoped="" ref="0x7f35f111b920"/>
        <function-ref name="granted" scoped="" ref="0x7f35f111bab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f111bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f111ad20" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f111ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f11190e0"/>
        <function-ref name="userId" scoped="" ref="0x7f35f1119270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f35f1114120" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f1114120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f11144a0"/>
        <function-ref name="userId" scoped="" ref="0x7f35f1114630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f35f1116230" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f35f1116230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f11165d0"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f1116760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f35f1115ad0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f35f1115ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f1115e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f35f1116b60" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f35f1116b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f35f1115020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f35f11152f0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f35f11152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f35f1115670"/>
        <function-ref name="txDone" scoped="" ref="0x7f35f1115800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f1111bd0" loc="92:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f1111bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f110f020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f110f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f110e930" loc="96:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f110e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f110ecd0"/>
        <function-ref name="configure" scoped="" ref="0x7f35f110ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f35f110f400" loc="93:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f110f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f110f780"/>
        <function-ref name="requested" scoped="" ref="0x7f35f110f910"/>
        <function-ref name="granted" scoped="" ref="0x7f35f110faa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f110fc30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f110fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f1112e30" loc="91:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f1112e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f1111210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f11113a0"/>
        <function-ref name="request" scoped="" ref="0x7f35f1111530"/>
        <function-ref name="granted" scoped="" ref="0x7f35f11116c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f1111850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f110e060" loc="94:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f110e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f110e3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f35f110e570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0405ca0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0405ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f04040a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f35f0404330" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f35f0404330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f35f04046b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f35f0404840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f35f04049d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f0404b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f35f04013a0" loc="55:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f35f04013a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f35f0401740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f04018d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f35f03ff210" loc="60:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f35f03ff210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f35f03ff5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f35f03ff740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f35f03ff9d0" loc="61:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f35f03ff9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f35f03ffd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f35f03fd020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f35f03fd1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f03fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f35f0401b20" loc="56:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f0401b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f0400020"/>
        <function-ref name="requested" scoped="" ref="0x7f35f04001b0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f0400340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f04004d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f0400660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f03fd590" loc="62:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f03fd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f03fd910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f03fdaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f03fdc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f03fddc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f03fc020"/>
        <function-ref name="get" scoped="" ref="0x7f35f03fc1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f03fc340"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f03fc980"/>
        <function-ref name="set" scoped="" ref="0x7f35f03fc660"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f03fc4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f03fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f35f0402540" loc="54:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f0402540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f04028e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f0402a70"/>
        <function-ref name="request" scoped="" ref="0x7f35f0402c00"/>
        <function-ref name="granted" scoped="" ref="0x7f35f0402d90"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f0401020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f35f04008b0" loc="57:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f04008b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f0400c30"/>
        <function-ref name="userId" scoped="" ref="0x7f35f0400dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f35f03fcc50" loc="75:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f35f03fcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f03fb020"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f03fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f35f10f2400" loc="72:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f35f10f2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f35f10f2780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f35f10f29d0" loc="73:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f10f29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f10f2d50"/>
        <function-ref name="requested" scoped="" ref="0x7f35f10f1020"/>
        <function-ref name="granted" scoped="" ref="0x7f35f10f11b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f10f1340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f10f14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f35f1109b20" loc="70:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f1109b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f10f2020"/>
        <function-ref name="stop" scoped="" ref="0x7f35f10f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f35f10f1720" loc="74:../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f10f1720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f10f1aa0"/>
        <function-ref name="userId" scoped="" ref="0x7f35f10f1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f35f03ccb00" loc="62:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f35f03ccb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f35f03cce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f35f03cb0f0" loc="63:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f35f03cb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f03cb470"/>
        <function-ref name="requested" scoped="" ref="0x7f35f03cb600"/>
        <function-ref name="granted" scoped="" ref="0x7f35f03cb790"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f03cb920"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f35f03cbab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f35f03cc3a0" loc="60:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f35f03cc3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f03cc720"/>
        <function-ref name="stop" scoped="" ref="0x7f35f03cc8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f35f03cbd00" loc="64:../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f35f03cbd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f35f03c90a0"/>
        <function-ref name="userId" scoped="" ref="0x7f35f03c9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f35f10d08e0" loc="3:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f35f10d08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f35f10d0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f35f10cf020" loc="4:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f35f10cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f35f10cf3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f35f10cf530"/>
        <function-ref name="request" scoped="" ref="0x7f35f10cf6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f35f10cf850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f35f10cf9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f10d0080" loc="2:../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f10d0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f10d0400"/>
        <function-ref name="stop" scoped="" ref="0x7f35f10d0590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f35f10be8c0" loc="47:../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f35f10be8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f35f10bec40"/>
        <function-ref name="offset" scoped="" ref="0x7f35f10bedd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f35f10bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f35f10a8690" loc="9:../../../tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="TestRPLAppC.RPLUDP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f35f10a8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f35f10a8a10"/>
        <function-ref name="bind" scoped="" ref="0x7f35f10a8ba0"/>
        <function-ref name="sendtov" scoped="" ref="0x7f35f10a8d30"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f35f1056020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f35f10a3160" loc="13:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f10a3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f35f1c9b700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f35f1c9bbd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f10a22a0"/>
        <function-ref name="get" scoped="" ref="0x7f35f10a3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f35f10a4460" loc="12:../../../tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f35f10a4460"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f35f10a47e0"/>
        <function-ref name="bind" scoped="" ref="0x7f35f10a4970"/>
        <function-ref name="sendtov" scoped="" ref="0x7f35f10a4b00"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f35f10a4c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x7f35f109c110" loc="15:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BlipStatistics" scoped="" ref="0x7f35f109c110"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x7f35f1c9b700"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x7f35f1c9bbd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f109b260"/>
        <function-ref name="get" scoped="" ref="0x7f35f109cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f109e8b0" loc="14:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f109e8b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f35f35f0b80"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f109ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f109a020" loc="19:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f109a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f109a3a0"/>
        <function-ref name="changed" scoped="" ref="0x7f35f109a530"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f109a6c0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f109a850"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f109a9e0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f109ab70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f109ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x7f35f10a1900" loc="13:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UDP" scoped="" ref="0x7f35f10a1900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x7f35f10a1c80"/>
        <function-ref name="bind" scoped="" ref="0x7f35f10a1e10"/>
        <function-ref name="sendtov" scoped="" ref="0x7f35f109e020"/>
        <function-ref name="recvfrom" scoped="" ref="0x7f35f109e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x7f35f109b6f0" loc="18:../../../tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f109b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f109ba70"/>
        <function-ref name="recv" scoped="" ref="0x7f35f109bc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f35f104e460" loc="44:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f35f104e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f35f104e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f35f1052750" loc="41:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f35f1052750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f35f1052ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x7f35f1052d80" loc="42:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IPAddress" scoped="" ref="0x7f35f1052d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x7f35f104f180"/>
        <function-ref name="changed" scoped="" ref="0x7f35f104f310"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x7f35f104f4a0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x7f35f104f630"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f104f7c0"/>
        <function-ref name="removeAddress" scoped="" ref="0x7f35f104f950"/>
        <function-ref name="isLLAddress" scoped="" ref="0x7f35f104fae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetIPAddress" ref="0x7f35f104fdb0" loc="43:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SetIPAddress" scoped="" ref="0x7f35f104fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetIPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="setAddress" scoped="" ref="0x7f35f104e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x7f35f104eae0" loc="45:../../../tos/lib/net/blip/StaticIPAddressP.nc">
      <component-ref qname="StaticIPAddressP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="NeighborDiscovery" scoped="" ref="0x7f35f104eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="havePrefix" scoped="" ref="0x7f35f104d7f0"/>
        <function-ref name="getPrefixLength" scoped="" ref="0x7f35f104d020"/>
        <function-ref name="setPrefix" scoped="" ref="0x7f35f104d1b0"/>
        <function-ref name="resolveAddress" scoped="" ref="0x7f35f104d340"/>
        <function-ref name="matchContext" scoped="" ref="0x7f35f104d4d0"/>
        <function-ref name="getPrefix" scoped="" ref="0x7f35f104ee60"/>
        <function-ref name="getContext" scoped="" ref="0x7f35f104d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x7f35f10407f0" loc="44:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RootControl" scoped="" ref="0x7f35f10407f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x7f35f1040b70"/>
        <function-ref name="setRoot" scoped="" ref="0x7f35f1040d00"/>
        <function-ref name="unsetRoot" scoped="" ref="0x7f35f103f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f35f1040020" loc="43:../../../tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f35f1040020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f35f10403a0"/>
        <function-ref name="stop" scoped="" ref="0x7f35f1040530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f103d1f0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f103d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f103d590"/>
        <function-ref name="recv" scoped="" ref="0x7f35f103d720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x7f35f03bc500" loc="36:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RA" scoped="" ref="0x7f35f03bc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f03bc880"/>
        <function-ref name="recv" scoped="" ref="0x7f35f03bca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x7f35f03bdce0" loc="35:../../../tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IP" scoped="" ref="0x7f35f03bdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f03bc0a0"/>
        <function-ref name="recv" scoped="" ref="0x7f35f03bc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f35f0fc1da0" loc="49:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f35f0fc1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0fbf180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f0fbf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f0fbf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f0fbf630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f0fbf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f35f0fbfa10" loc="50:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f35f0fbfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f0fbfd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f0fbe020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f0fbe1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f0fbe340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f0fbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f35f0fbe720" loc="51:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f35f0fbe720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f35f0fbeaa0"/>
        <function-ref name="source" scoped="" ref="0x7f35f0fbec30"/>
        <function-ref name="address" scoped="" ref="0x7f35f0fbedc0"/>
        <function-ref name="destination" scoped="" ref="0x7f35f0fbd020"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f0fbd1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f35f0fbd340"/>
        <function-ref name="type" scoped="" ref="0x7f35f0fbd4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f35f0fbd660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f35f0fbd7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f35f0fbd980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f35f0fbdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f35f0fbdda0" loc="52:../../../tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f35f0fbdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f35f0fbc180"/>
        <function-ref name="noAck" scoped="" ref="0x7f35f0fbc310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f35f0fbc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f35f03ac0c0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f35f03ac0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f03ac440"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f03ac5d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f03ac760"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f03ac8f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f03aca80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f35f03acd30" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f03acd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f03ab0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f03ab270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f03ab400"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f03ab590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f03ab720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f35f03ab970" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f35f03ab970"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f35f03abcf0"/>
        <function-ref name="source" scoped="" ref="0x7f35f03abe80"/>
        <function-ref name="address" scoped="" ref="0x7f35f03aa030"/>
        <function-ref name="destination" scoped="" ref="0x7f35f03aa1c0"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f03aa350"/>
        <function-ref name="setDestination" scoped="" ref="0x7f35f03aa4e0"/>
        <function-ref name="type" scoped="" ref="0x7f35f03aa670"/>
        <function-ref name="setType" scoped="" ref="0x7f35f03aa800"/>
        <function-ref name="isForMe" scoped="" ref="0x7f35f03aa990"/>
        <function-ref name="setGroup" scoped="" ref="0x7f35f03aab20"/>
        <function-ref name="localGroup" scoped="" ref="0x7f35f03aacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f1018390" loc="44:../../../tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f1018390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f1018710"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f10188a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f1018a30"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f1018bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f1018d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f35f0fcda40" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f35f0fcda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0fcdde0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f0fcc020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f0fcc1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f0fcc340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f0fcc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f35f0fceb00" loc="46:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f35f0fceb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0fcd020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f0fcd1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f0fcd340"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f0fcd4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f0fcd660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f35f0fcbd60" loc="50:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f35f0fcbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f0fca180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f0fca310"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f0fca4a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f0fca630"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f0fca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f35f0fcaa90" loc="169:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f35f0fcaa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f0fcae10"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f0fc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f35f0fc92f0" loc="126:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f35f0fc92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f0fc9670"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f0fc9800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f35f0fcc720" loc="49:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f35f0fcc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f35f0fccaa0"/>
        <function-ref name="source" scoped="" ref="0x7f35f0fccc30"/>
        <function-ref name="address" scoped="" ref="0x7f35f0fccdc0"/>
        <function-ref name="destination" scoped="" ref="0x7f35f0fcb020"/>
        <function-ref name="setSource" scoped="" ref="0x7f35f0fcb1b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f35f0fcb340"/>
        <function-ref name="type" scoped="" ref="0x7f35f0fcb4d0"/>
        <function-ref name="setType" scoped="" ref="0x7f35f0fcb660"/>
        <function-ref name="isForMe" scoped="" ref="0x7f35f0fcb7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f35f0fcb980"/>
        <function-ref name="localGroup" scoped="" ref="0x7f35f0fcbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f35f0fb9760" loc="43:../../../tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f35f0fb9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f35f0f975f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f35f0f96020"/>
        <function-ref name="element" scoped="" ref="0x7f35f0f964f0"/>
        <function-ref name="full" scoped="" ref="0x7f35f0f99810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f0f97170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f0f97a70"/>
        <function-ref name="empty" scoped="" ref="0x7f35f0f99390"/>
        <function-ref name="size" scoped="" ref="0x7f35f0f99c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f35f0f8fca0" loc="93:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f35f0f8fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f35f0f90ae0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f35f0f8d4a0"/>
        <function-ref name="element" scoped="" ref="0x7f35f0f8d970"/>
        <function-ref name="full" scoped="" ref="0x7f35f0f91d40"/>
        <function-ref name="maxSize" scoped="" ref="0x7f35f0f90660"/>
        <function-ref name="dequeue" scoped="" ref="0x7f35f0f8d020"/>
        <function-ref name="empty" scoped="" ref="0x7f35f0f918c0"/>
        <function-ref name="size" scoped="" ref="0x7f35f0f901e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f35f0f8ddf0" loc="94:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f35f0f8ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f35f0f8b1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f0f8b350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f0f8b4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f35f0f8b670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f35f0f8b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f35f0f8ba90" loc="95:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f35f0f8ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f35f0f8be10"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f35f0f8a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f35f0f8a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f35f0f8a340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f35f0f8a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x7f35f0f86d10" loc="114:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="retrySend" scoped="" ref="0x7f35f0f86d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f35f0f850e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f35f0f85270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0f95cc0" loc="89:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0f95cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0f920a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f35f0f8a750" loc="96:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f35f0f8a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f35f0f8aad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f35f0f8ac60"/>
        <function-ref name="led1On" scoped="" ref="0x7f35f0f8adf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f35f0f89020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f35f0f891b0"/>
        <function-ref name="get" scoped="" ref="0x7f35f0f89340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f35f0f894d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f35f0f89b10"/>
        <function-ref name="set" scoped="" ref="0x7f35f0f89660"/>
        <function-ref name="led0On" scoped="" ref="0x7f35f0f897f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f35f0f89980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x7f35f0f8f400" loc="90:../../../tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f35f0f8f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f35f0f8f780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f35f0f6c2a0" loc="43:../../../tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f35f0f6c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f35f0f6c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f35f0f6b5a0" loc="94:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f35f0f6b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f35f0f6b920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x7f35f0f6bc00" loc="95:../../../tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Putchar" scoped="" ref="0x7f35f0f6bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x7f35f0f67020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f35f0f62b90" loc="39:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f35f0f62b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f35f0f5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f35f0f5f3c0" loc="40:../../../tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f35f0f5f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f35f0f5f740"/>
        <function-ref name="stopDone" scoped="" ref="0x7f35f0f5f8d0"/>
        <function-ref name="start" scoped="" ref="0x7f35f0f5fa60"/>
        <function-ref name="stop" scoped="" ref="0x7f35f0f5fbf0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f35f30f4270" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f35f30fbd70" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f35f30c7420" loc="48:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f35f30ca700" loc="43:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f35f30c8ce0" loc="47:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f35f30ca020" loc="42:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f35f30cae70" loc="45:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f35f30cb0e0" loc="40:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f35f30cb7c0" loc="41:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f35f30c85c0" loc="46:../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f35f326f020" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f35f3534c00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f35f3075020" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f35f3077cc0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f35f3079390" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f35f30c0ec0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f35f30bf940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f35f3075890" loc="57:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f35f30747b0" loc="59:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f35f3077560" loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f35f3074020" loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f35f3079b30" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f35f3078350" loc="44:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f35f3078da0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f35f30c0ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f35f30bf940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f35f3078b20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f35f30c0ec0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f35f30bf940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f35f30680e0" loc="44:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f35f3065730" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f35f30654b0" loc="84:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f35f30642e0" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f35f3064060" loc="91:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f35f3067ca0" loc="73:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f35f30673e0" loc="68:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f35f3068a90" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f35f3068810" loc="56:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f35f306f3e0" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f35f306fd60" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f35f306fae0" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f35f306e790" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f35f306e510" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f35f306c2a0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f35f306c020" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f35f306c990" loc="45:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f35f307f810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f35f307d2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f35f307d020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f35f307e020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f35f3085aa0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f35f307e760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f35f30829b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f35f307f120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f35f3082270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f35f30810e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f35f30819f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f35f3081770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f35f307dcb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f35f307da30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f35f303e1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f35f3192a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f35f318f1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f35f31922b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f35f33ab810" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f35f35ee020" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f35f35ed020" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f35f35ee790" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f35f35e2270" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f35f35e2ac0" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:../../../tos/lib/net/RootControl.nc">
      <documentation loc="35:../../../tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x7f35f2e9c750" loc="43:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x7f35f2ea9930" loc="41:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x7f35f2e9c070" loc="42:../../../tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f35f2e97020" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f35f2e98c50" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f35f2e95520" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f35f2e952a0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f35f2e98270" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f35f2e97870" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f35f2e0d020" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e23c60" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f35f2e0c110" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e0de10" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f35f2e08490" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e09e50" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f2e081c0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f35f2e09560" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f35f2e0b5e0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e0b020" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f2e0b350" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f35f2e16020" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2e195e0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f35f2e19960" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f2e19c90" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f35f2e13660" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e13060" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f2e13390" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f35f2e11790" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f35f2e15390" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e15110" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f35f2e148b0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e142d0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f35f2e14620" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <function command="" provided="0" name="newParent" ref="0x7f35f2e2c810" loc="47:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x7f35f2e2c120" loc="44:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x7f35f2e2e980" loc="41:../../../tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f35f2e37820" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f35f2e37020" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:../../../tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x7f35f2e922c0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f35f2ef4140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f35f2e937f0" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f35f2ef4140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f35f2e93b40" loc="18:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f2e92020" loc="19:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x7f35f2e93020" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x7f35f2e9bc90" loc="12:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x7f35f2e90130" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f35f2ef4140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f35f2e92a80" loc="21:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f35f2ef4140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x7f35f2e92e80" loc="22:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x7f35f2e8f6e0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f35f2ef4140"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f35f2e908c0" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:18" alignment="I:2"><struct-ref name="sockaddr_in6" ref="0x7f35f2ef4140"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f35f2e90c10" loc="29:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f2e8f020" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f35f2e8f430" loc="30:../../../tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x7f35f2e2a110" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2e8ee30" loc="29:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f35f2e26e50" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x7f35f2e26bd0" loc="54:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x7f35f2e272a0" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2e27020" loc="44:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x7f35f2e2abb0" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2e2a930" loc="34:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f35f2e28640" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f35f2e283c0" loc="39:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x7f35f2e26540" loc="52:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x7f35f2e27d30" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2e27ab0" loc="50:../../../tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f35f2e9a070" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f35f2e9a880" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f2ebd4f0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f2ebd4f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f35f2eb51f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f35f2ebaaa0" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f35f2eb8860" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f35f2eb8290" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f35f2eb85d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f35f2eb9aa0" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f35f2eb4270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f35f2eb5980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f35f2eb92b0" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f35f2ebc0b0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f35f2ebdde0" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f35f2eb6820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f35f2eb6250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f35f2eb6590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f35f2ebcb70" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f35f2ebc8f0" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f35f2eba390" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f35f2e1ccd0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2e1c370" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f35f2e1c6c0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f2e1c9f0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f35f2ece070" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f35f2ece820" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f35f2ecd030" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f35f2ecb020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f35f2eca7d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f35f2ec0020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f35f2ecd7c0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f35f2ec0b90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f35f2ec0910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f35f2ecf8a0" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f35f2ecb800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f35f2eca020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x7f35f2ea2ba0" loc="53:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x7f35f2ea1510" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x7f35f2ea1290" loc="54:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x7f35f2ea1c20" loc="55:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x7f35f2ea8030" loc="42:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f35f2ea5400" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f35f2ea5180" loc="46:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x7f35f2ea0350" loc="57:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f35f2ea6270" loc="44:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x7f35f2ea5be0" loc="47:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x7f35f2ea24a0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x7f35f2ea4380" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x7f35f2ea46f0" loc="49:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x7f35f2ea4a80" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x7f35f2ea4e00" loc="50:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x7f35f2ea21e0" loc="51:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x7f35f2ea69c0" loc="45:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f35f2ea8ad0" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f35f2ea8850" loc="43:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x7f35f2eab900" loc="41:../../../tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x7f35f2e1e820" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f35f2e8ca30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x7f35f2e1e560" loc="22:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x7f35f2e1f2f0" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f35f2e8ca30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f35f2e21c00" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f35f2e1f020" loc="18:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x7f35f2e21390" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f35f2e8c6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f35f2e21110" loc="16:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f35f2e8c6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x7f35f2e1fd70" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:40" alignment="I:2"><struct-ref name="route_entry" ref="0x7f35f2e8ca30"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f35f2e8c6f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x7f35f2e1fab0" loc="20:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2">
              <typename><typedef-ref name="route_key_t" ref="0x7f35f2e8c6f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x7f35f2e228e0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
          <long>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2">
            <typename><typedef-ref name="route_key_t" ref="0x7f35f2e8c6f0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x7f35f2e6baf0" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x7f35f2e6be50" loc="10:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="next_hop" ref="0x7f35f2e222d0" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x7f35f2e22630" loc="11:../../../tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f35f2db7020" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f35f2db7750" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f35f2db80e0" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f35f2db65e0" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f35f2db87e0" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f35f2db7e70" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f35f2db92b0" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f35f2db9980" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f35f2d8c0e0" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f35f2d8c830" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f35f2d872e0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f35f2d87060" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f35f2d8e940" loc="58:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f35f2d8b780" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f35f2d87bd0" loc="117:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f35f2d8b020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f35f2d8d920" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f35f2d88020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f35f2d8d120" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f35f2d92a90" loc="48:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f35f2d89020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f35f2d887c0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f35f2d897e0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f35f2d8e1f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f2b3cc40" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f2b3cc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f35f2b395a0" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f2b335d0" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f2b335d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f35f2b33810" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f35f2b2f390" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f35f2b313b0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f35f2b309d0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f35f2b30400" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f35f2b30740" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f35f2b31b90" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f35f2b2fb80" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f35f2b32390" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f35f2b32110" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2b33810"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f35f2b32bc0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f2ac34f0" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f2ac34f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f35f2ac3730" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2ac3730"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f35f2ac2070" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f2ac3730"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f35f2ac1190" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f35f2ac28f0" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f35f2ac18f0" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f35f299a160" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f35f299a160"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f35f299aca0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f35f299a160"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f35f299aa20" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f35f299a160"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="68:../../../tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="63:../../../tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10; @author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x7f35f2978550" loc="102:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x7f35f297e350" loc="77:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x7f35f2976020" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x7f35f2978c60" loc="104:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x7f35f297c780" loc="94:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x7f35f2979df0" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x7f35f2979b70" loc="100:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x7f35f29804d0" loc="71:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f35f297eda0" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f35f297eb20" loc="80:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x7f35f297a5a0" loc="97:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x7f35f297ce60" loc="95:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x7f35f2979420" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x7f35f297ad50" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x7f35f2979190" loc="99:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x7f35f297d800" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x7f35f297d580" loc="83:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x7f35f297c020" loc="90:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x7f35f2976bc0" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f35f2976940" loc="106:../../../tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x7f35f2980bd0" loc="74:../../../tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:../../../tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x7f35f29869d0" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f2986750" loc="17:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f35f2981020" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f35f3ca5a20"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x7f35f2982150" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x7f35f2982490" loc="23:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f29827d0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="size_t" ref="0x7f35f3ca5a20"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x7f35f2982be0" loc="24:../../../tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x7f35f2927db0" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f35f29276e0" loc="28:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f35f2927b20" loc="29:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x7f35f2929dc0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x7f35f29296f0" loc="13:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x7f35f2929b30" loc="14:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x7f35f2926e40" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f35f29267c0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x7f35f2926bb0" loc="39:../../../tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="getPrefix" ref="0x7f35f2916aa0" loc="23:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrefixLength" ref="0x7f35f2914270" loc="24:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrefix" ref="0x7f35f29162d0" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newprefix" ref="0x7f35f2917410" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f2917760" loc="21:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="valid_lifetime" ref="0x7f35f2917b30" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
          <variable name="preferred_lifetime" ref="0x7f35f2916020" loc="22:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resolveAddress" ref="0x7f35f291b8c0" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue&#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f35f2f19a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f35f2f18020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f291b220" loc="11:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x7f35f291b630" loc="12:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:10" alignment="I:2"><struct-ref ref="0x7f35f2f19a80"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x7f35f2f18020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x7f35f291a780" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="14:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f291a180" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x7f35f291a4f0" loc="17:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x7f35f2918510" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x7f35f291ae70" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x7f35f2918280" loc="18:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="havePrefix" ref="0x7f35f2918c20" loc="20:../../../tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="7:../../../tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x7f35f291e5f0" loc="27:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x7f35f2924640" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x7f35f29243c0" loc="10:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x7f35f29227b0" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x7f35f2922530" loc="14:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x7f35f2920020" loc="21:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x7f35f29206f0" loc="22:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOCP" ref="0x7f35f2924d50" loc="11:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x7f35f291d020" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f35f291ed20" loc="29:../../../tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x7f35f2921020" loc="16:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x7f35f2921810" loc="18:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x7f35f2920e30" loc="24:../../../tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="7:../../../tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x7f35f29332e0" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:24" alignment="I:2"><struct-ref ref="0x7f35f2e30ec0"/>
              <typename><typedef-ref name="parent_t" ref="0x7f35f2e2f520"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x7f35f2933020" loc="8:../../../tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x7f35f29317e0" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x7f35f2935d90" loc="14:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x7f35f2931180" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x7f35f2931540" loc="15:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x7f35f292ea20" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f292e0d0" loc="21:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f35f292e420" loc="22:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f35f292e780" loc="23:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x7f35f2930970" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x7f35f2930020" loc="17:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:6" alignment="I:2"><struct-ref name="ip_iovec" ref="0x7f35f2f12770"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x7f35f2930370" loc="18:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
          <variable name="type" ref="0x7f35f29306d0" loc="19:../../../tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetIPAddress" loc="19:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
      <documentation loc="2:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <short>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address.</short>
        <long>&#10; Splitting the setAddress function into its own interface allows us to use&#10; the wiring check to make sure that some module is setting the local node's&#10; address. This is useful because there are many modules that set the node's&#10; address upon boot including:&#10;  - StaticIPAddressTosIdC&#10;  - StaticIPAddressC&#10;  - Dhcp6C&#10;&#10; It is up to the application to choose which addressing scheme it would&#10; like to use.&#10;&#10; @author Brad Campbell &#60;bradjc@umich.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAddress" ref="0x7f35f2717830" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
        <interfacedef-ref qname="SetIPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f27175b0" loc="20:../../../tos/lib/net/blip/interfaces/SetIPAddress.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:../../../tos/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x7f35f2711560" loc="5:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7f35f2f1b210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f35f270e560" loc="10:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f35f2710e80" loc="8:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f35f2f1b630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2710c00" loc="8:../../../tos/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f35f2f1b630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f35f2710490" loc="7:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f35f2f1c670"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x7f35f2f1ba70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f35f2711cf0" loc="6:../../../tos/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7f35f2f1b630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f35f26cda70" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f35f2f1c670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f35f2f1cdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f35f26c0640" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f35f26c0060" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f35f26c03b0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f35f26c1020" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f35f26c2690" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f35f26c2020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f35f26c2400" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f35f26c9a40" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f35f26c97c0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f35f26c18a0" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f35f26c5540" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f35f26c52c0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f35f26c8b90" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f35f26c8910" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f35f26bf8a0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f35f26c46b0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f35f26c4430" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f35f26bf070" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f35f26c6350" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f35f2f1c670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f35f2f1cdd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f35f26c6b40" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f35f26c9020" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f35f26c81f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f35f26c5ce0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f35f26995c0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f35f26995c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f35f2699e80" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f35f2691bd0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f35f26995c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f35f2691620" loc="63:../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f35f2691940" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f35f26995c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f35f2697960" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f35f2695a80" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f35f26952b0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f35f26980e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f35f2697120" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f35f2696270" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f35f2696a90" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f35f2698940" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f35f269eb60" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f35f269fb60" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f35f269f1f0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f35f269e390" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f35f269d5e0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f35f266fc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f35f314d020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f266f990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f35f266e710" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f35f314d020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f266e490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f35f2677560" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f35f26764f0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f35f2677d40" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f35f310f180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f35f2678cd0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f35f310f180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f35f26786f0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f35f310f180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f35f2678a40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f35f266ae40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f35f314d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f35f2674e80" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f35f314d020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f35f2674020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f35f2674890" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f2674be0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f35f2671610" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f35f314d020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f35f2672770" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f35f2671020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f2671370" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f35f267bc30" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f35f267b470" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f35f267cce0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f35f267c420" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f35f255bbb0" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f35f255ad70" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f35f255a5c0" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f35f255a340" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f35f255b350" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f35f2536a60" loc="52:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f35f2533540" loc="72:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f35f25362d0" loc="47:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f35f2535cf0" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f35f2535a70" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f35f2539b00" loc="42:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f35f25352b0" loc="59:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f35f2422270" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f35f2422ac0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f35f2420350" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f35f23fab60" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f23fa580" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f23fa8d0" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f35f23f5dd0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f23f5490" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f23f57e0" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f35f23f5b30" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f35f23f76b0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f35f314d020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f23f70d0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f23f7420" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f35f23fc730" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f35f314d020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f23fc150" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f23fc4a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f35f23f82c0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f23f9930" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f35f23f9c80" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f35f23f8020" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f35f23dbdf0" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f35f23db480" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f35f23db810" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f23dbb50" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f35f23d93c0" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f35f23d86a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f35f23d8a30" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f23d8d70" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f35f23d9110" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f35f23dfc90" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f35f23dfa10" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f35f23d17f0" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f35f23d3d40" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f35f23d1020" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f35f23d2c70" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f35f23d24d0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f35f23dda80" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f35f23dd800" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f35f23d3560" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f35f23d32e0" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f35f22f66f0" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f35f22f5070" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f35f22ee710" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f35f2328020"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f35f2328440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f35f22f22a0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f22f2020" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f35f22f1680" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f22f1400" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f35f22f2b10" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f35f22f02a0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f22f0020" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f35f22e7ca0" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f35f22e7480" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f35f22df2a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f22df020" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f35f22e0780" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f35f22bbaf0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f35f22c7790" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f35f22d3610" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2345080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f35f23458c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f35f22d3390" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2345080"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f35f23458c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f35f22c9870" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f35f22d1a90" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2340080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f35f23408c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f35f22d1810" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2340080"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f35f23408c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f35f22c0e70" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f35f22bd480" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f35f22d1070" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2342020"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f35f23427b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f35f22d02b0" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2340080"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f35f23408c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f35f22cc020" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f35f22cdd30" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f35f22cd610" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f35f22c0740" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f35f22d2840" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2342020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f35f23427b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f35f22d25c0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2342020"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f35f23427b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f35f22ce420" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f35f22bf5d0" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f35f22cee00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f35f22ceb80" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f35f22cb910" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f35f22c90e0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f35f22c2840" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f35f22c4790" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f35f22c87e0" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f35f22c0020" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f35f22c5020" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f35f22bfcf0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f35f22cc800" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f35f234cdc0"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f35f2347680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f35f22be4c0" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f35f22bb350" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f35f22d0c50" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f35f22d09d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f35f22ba4d0" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f22ba250" loc="224:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f35f22d3df0" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f35f2345080"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f35f23458c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f35f22c8020" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f35f22c5770" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f35f22c2020" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f35f2317e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f35f23152b0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f35f22c3cf0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f35f2317e70"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f35f23152b0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f35f22c32a0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f35f2328020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f35f2328440"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f35f22c3020" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f35f2328020"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f35f2328440"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f35f22bad90" loc="231:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f35f22becb0" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f35f22cb070" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f35f22bdbe0" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f35f22c4020" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f35f22c7020" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f35f2253600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f35f222b070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f35f223fb10" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f35f2233d50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2233ad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f35f2246270" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f35f222f350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f35f2238cf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f35f2240c50" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f35f223d9c0" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f35f2241c00" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f35f2241980" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f35f2242120" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f35f223b790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f35f2232c80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f35f222d8f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f35f2233390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f35f2228b60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f35f2223270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f35f22450e0" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f35f223b020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f35f2239910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f35f2240500" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f35f2247020" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f35f2234ba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f35f2234920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f35f224b7d0" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f35f2231b80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f35f222b7d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f35f2225350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f35f2224a90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f35f222e270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f35f222a020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f35f2232520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f35f2229bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f35f2245800" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f35f2236020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f35f2229020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f35f222d190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f35f2238520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f35f22382a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f35f2225af0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f35f22341f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f35f222fac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f35f2247aa0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f35f2303b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f35f2301020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f35f2247820" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f35f2303b90"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f35f2301020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f35f223c870" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f35f2244980" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f35f2244700" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f35f2239120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f223be70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f35f22283b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f35f2241270" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f35f2244020" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f35f22369e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f35f2236760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f35f22469a0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f35f222a740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f35f222e9e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f35f2231420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f35f2237740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f35f22374c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f35f223c120" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f35f223f3b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f35f22242b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f35f2242aa0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f35f2242820" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f35f2226350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f35f223d270" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f35f2226b10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f35f2188780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f35f2187020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f35f2150900" loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f35f214fa20" loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f35f2150070" loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f35f214f1f0" loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f35f214d390" loc="81:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f35f2143b50" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f35f214cb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f35f21438d0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f35f214cb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f35f2148b80" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f35f21456b0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f35f214cb30"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f35f2145430" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f35f214cb30"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f35f2143020" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f35f214cb30"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../../../tos/interfaces/Pool.nc">
      <documentation loc="33:../../../tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f35f1f14d70" loc="50:../../../tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f14d70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f35f1f0d0e0" loc="97:../../../tos/interfaces/Pool.nc">
        <documentation loc="91:../../../tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f14d70"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f35f1f108a0" loc="80:../../../tos/interfaces/Pool.nc">
        <documentation loc="74:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f35f1f116b0" loc="61:../../../tos/interfaces/Pool.nc">
        <documentation loc="52:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f35f1f0e350" loc="89:../../../tos/interfaces/Pool.nc">
        <documentation loc="82:../../../tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f14d70"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f35f1f0e0d0" loc="89:../../../tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f14d70"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f35f1f10020" loc="72:../../../tos/interfaces/Pool.nc">
        <documentation loc="63:../../../tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../../../tos/interfaces/Queue.nc">
      <documentation loc="33:../../../tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f35f1f20020" loc="43:../../../tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f20020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f35f1f1d790" loc="80:../../../tos/interfaces/Queue.nc">
        <documentation loc="74:../../../tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f20020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f35f1f1b2a0" loc="97:../../../tos/interfaces/Queue.nc">
        <documentation loc="90:../../../tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f20020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f35f1f1b020" loc="97:../../../tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f20020"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f35f3c9cc30"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:2"><attribute-ref name="one" ref="0x7f35f3c9cc30"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f35f1f192a0" loc="108:../../../tos/interfaces/Queue.nc">
        <documentation loc="99:../../../tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f20020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f35f1f19020" loc="108:../../../tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f35f1f1e070" loc="57:../../../tos/interfaces/Queue.nc">
        <documentation loc="52:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f35f1f1d020" loc="72:../../../tos/interfaces/Queue.nc">
        <documentation loc="67:../../../tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f35f1f1c390" loc="88:../../../tos/interfaces/Queue.nc">
        <documentation loc="82:../../../tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f1f20020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f35f1f208d0" loc="50:../../../tos/interfaces/Queue.nc">
        <documentation loc="45:../../../tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f35f1f1e7f0" loc="65:../../../tos/interfaces/Queue.nc">
        <documentation loc="59:../../../tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x7f35f1e47cb0" loc="43:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x7f35f1e445a0" loc="50:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:../../../tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:../../../tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x7f35f1e1fd30" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f35f1e1f330" loc="18:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:16" alignment="I:2"><struct-ref name="in6_addr" ref="0x7f35f2ef7cd0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f35f1e1f740" loc="19:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f35f1e1fa90" loc="20:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f35f1e1c8e0" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f35f1e1ee70" loc="28:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f35f1e1c210" loc="29:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f35f1e1c640" loc="30:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f35f1e1e740" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f35f1e1e4c0" loc="22:../../../tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:../../../tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x7f35f1d90740" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f35f2f18d50"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x7f35f1d93d10" loc="18:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:22" alignment="I:2"><struct-ref name="ieee154_frame_addr" ref="0x7f35f2f18d50"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x7f35f1d90150" loc="19:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:44" alignment="I:2"><struct-ref name="ip6_packet" ref="0x7f35f2ee11b0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f35f1d904a0" loc="20:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x7f35f1d8d480" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x7f35f1d8e9d0" loc="28:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x7f35f2ef4aa0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f35f1d8ed40" loc="29:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x7f35f1d8d1e0" loc="30:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:12" alignment="I:2"><struct-ref name="ip6_metadata" ref="0x7f35f2ee35e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f35f1d8e2a0" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f35f1d8e020" loc="22:../../../tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><struct-ref name="send_info" ref="0x7f35f293c870"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x7f35f1c998f0" loc="24:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f35f1c998f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7f35f1c96b20" loc="34:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f35f1c96450" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f35f1c998f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x7f35f1c961d0" loc="29:../../../tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x7f35f1c998f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x7f35f1c65c80" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c65a00" loc="8:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x7f35f1c652a0" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c65020" loc="6:../../../tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f35f1c582b0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c59bd0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f35f1c58020" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f35f1c57430" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c571b0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f35f1c593e0" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f35f1c5a9e0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f35f1c5a760" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f35f1c70890" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c702d0" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f1c70600" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f35f1c69020" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c6a890" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f1c6abc0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f35f1c6a020" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f35f1c6eb90" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c6e910" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f35f1c6f0c0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c6ca80" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f35f1c6cdd0" loc="100:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f35f1c5e680" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c5e400" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f35f1c62770" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c62150" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f35f1c624e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f35f1c60650" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c603d0" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f35f1c61b70" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c61550" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f35f1c618e0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f35f1c5d650" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1c5d3d0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f35f197c780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f197c500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f35f1989be0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f1989600" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f35f1989950" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f35f19843a0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f1985d50" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f35f1984110" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f35f19886e0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f35f3c97110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f1988460" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f35f19852a0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f1985020" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f35f198ddd0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f198db50" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f35f19862a0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f1986020" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f35f19812e0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1981060" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f35f1980510" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1980290" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f35f197f680" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f197f400" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f35f196ee40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f196ebc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f35f1970120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1971e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f35f19727a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f35f1972520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f35f1974bd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f35f1974950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f35f19712a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f35f1971020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f35f196e020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1970d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f35f1963040" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f1964a50" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f35f1964d80" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f35f1961350" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f35f195fc50" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f35f1960e00" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f35f195f680" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f195f9b0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f35f1960600" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f35f1960020" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f35f1960370" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f35f1963ad0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f35f1963850" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f35f1957ae0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1957820" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f35f1957020" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f35f314cdf0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f35f314a7d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1958be0" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f35f1955de0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:16" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f35f31483e0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f35f31462e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f1955ae0" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f35f1903890" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f35f18ec020" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f35f18ec020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f35f18ec260" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f18ec260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f35f18e90b0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f18ec260"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18eae00" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f35f18e82a0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18e8020" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f35f18ece20" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18ecba0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f35f18e7610" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f18ec260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18e7020" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f35f18e7380" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f35f18ec260"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f35f18c7420" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f35f18c8a20" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f35f18c7190" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f35f18c8270" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f35f18c9a00" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f35f18c9780" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f35f3c96920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f35f18dfcb0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18dfa30" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f35f18e3c90" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18e3a10" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f35f18dcc80" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18dca00" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f35f18ddca0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f18dda20" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f35f143b840" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f35f310f180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f143b5c0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f35f1446350" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f14460d0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f35f1449790" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f35f14472a0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f1447020" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f35f1442c40" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f1442660" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f35f14429b0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f35f1445760" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f1445180" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f35f14454d0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f35f310f560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f35f14402e0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f1440060" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f35f143e680" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f143e0d0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f35f143e3f0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f35f3110d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f35f14410b0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f1443e00" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f35f1438d00" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f35f310f180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f35f1438720" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f35f1438a70" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f35f310f180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f35f1437b50" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f35f310f180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f35f13cd020" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f13ce960" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f35f13cece0" loc="31:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f35f13cf020" loc="15:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f35f13ce020" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f35f13cf8b0" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:140" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f35f30ff0c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f35f30fe6f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f35f13cfc20" loc="23:../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f35f13b4190" loc="54:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f35f13b79e0" loc="49:../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f35f13bd270" loc="56:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f35f13bc6c0" loc="72:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f35f13ba390" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f13ba110" loc="94:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f35f13bb020" loc="79:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f35f13bdde0" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f13bdb60" loc="65:../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f35f13babf0" loc="100:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f35f13bb8d0" loc="85:../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f35f13c5c10" loc="71:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f35f13c4590" loc="81:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f35f13c52a0" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f35f13c5020" loc="62:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f35f13c32a0" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f35f13c3020" loc="91:../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f35f13c1020" loc="62:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f35f13c1c40" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f35f13c19c0" loc="69:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f35f13c0730" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f35f13c04b0" loc="80:../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f35f128fdd0" loc="48:../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f35f128f800" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f128fb40" loc="48:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f35f1289ac0" loc="79:../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f35f1289840" loc="79:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f35f1286930" loc="90:../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f35f1286360" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f12866a0" loc="90:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f35f1288740" loc="65:../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f35f12852c0" loc="99:../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f35f1284920" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f1284c60" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f35f1285020" loc="99:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f35f1289070" loc="72:../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f35f128a720" loc="57:../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f35f128bdb0" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f35f128a130" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f35f128a480" loc="57:../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f35f12645b0" loc="50:../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f35f1264330" loc="50:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f35f1264df0" loc="59:../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f35f1263cf0" loc="69:../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f35f1263700" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f35f1263a60" loc="69:../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f35f3c96160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f35f1261b50" loc="79:../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f35f1259420" loc="39:../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f35f2317e70"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f35f23152b0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f35f11cb860" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f35f11ca0e0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f35f1105470" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:../../../tos/interfaces/BigQueue.nc">
      <documentation loc="33:../../../tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f35f0fb5070" loc="43:../../../tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f0fb5070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f35f0fb3850" loc="80:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="74:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f0fb5070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f35f0fb1a70" loc="97:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="90:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f35f35e9c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f0fb5070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f35f0fb17f0" loc="97:../../../tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f0fb5070"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f35f0fb0510" loc="108:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="99:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f0fb5070"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f35f0fb0290" loc="108:../../../tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f35f0fb40e0" loc="57:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="52:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f35f0fb30e0" loc="72:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="67:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f35f0fb1070" loc="88:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="82:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f35f0fb5070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f35f0fb5920" loc="50:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="45:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f35f35f1090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f35f0fb4870" loc="65:../../../tos/interfaces/BigQueue.nc">
        <documentation loc="59:../../../tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f35f3c96520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:../../../tos/lib/printf/Putchar.nc">
      <documentation loc="32:../../../tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TINYOS_OS_DIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x7f35f0f8f0b0" loc="49:../../../tos/lib/printf/Putchar.nc">
        <documentation loc="46:../../../tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x7f35f0f92dd0" loc="49:../../../tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
