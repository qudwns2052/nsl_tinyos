<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="12:TestSerialAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efe4635a640"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efe45e81a80"/></to>
    </wire>
    <wire loc="72:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7efe45e81a80"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7efe45e7d760"/></to>
    </wire>
    <wire loc="13:TestSerialAppC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7efe4636aa00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe45e80b20"/></to>
    </wire>
    <wire loc="61:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efe45e80b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe45df94e0"/></to>
    </wire>
    <wire loc="14:TestSerialAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7efe4636e6b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe459b3c70"/></to>
    </wire>
    <wire loc="78:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efe459b3c70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe459872f0"/></to>
    </wire>
    <wire loc="15:TestSerialAppC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7efe46309210"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe44bd23a0"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe44bd23a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe459ae020"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:TestSerialAppC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7efe462fe660"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe44be5020"/></to>
    </wire>
    <wire loc="64:../../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efe44be5020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe44211b60"/></to>
    </wire>
    <wire loc="17:TestSerialAppC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x7efe4635b520"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe45e6b020"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:TestSerialAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x7efe4635bbe0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe45e6eca0"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:TestSerialAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe462d47e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe44be48b0"/></to>
    </wire>
    <wire loc="66:../../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe44be48b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe4420e590"/></to>
    </wire>
    <wire loc="20:TestSerialAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe4635c0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="51:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b0020"/></to>
    </wire>
    <wire loc="21:TestSerialAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x7efe462f5290"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe44be0640"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe44be0640"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efe44e6f2c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:TestSerialAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7efe462f4bb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe44be5c30"/></to>
    </wire>
    <wire loc="65:../../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efe44be5c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe4420f8b0"/></to>
    </wire>
    <wire loc="23:TestSerialAppC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0x7efe462ff9b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe45e6b630"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efe45e6b630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe45e01720"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe46286c40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe462ae9c0"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efe462a67b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7efe4628a360"/></to>
    </wire>
    <wire loc="58:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7efe4628a360"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe45ea7020"/></to>
    </wire>
    <wire loc="55:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efe462ac980"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7efe462886a0"/></to>
    </wire>
    <wire loc="61:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7efe462886a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe45e93b90"/></to>
    </wire>
    <wire loc="56:../../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efe462abca0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7efe462879c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7efe462879c0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe45e8e710"/></to>
    </wire>
    <wire loc="56:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7efe460cc520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe46286c40"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45e962f0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7efe4622e200"/></to>
    </wire>
    <wire loc="486:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7efe4622e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4610a740"/></to>
    </wire>
    <wire loc="62:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45e92de0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7efe4622c200"/></to>
    </wire>
    <wire loc="487:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7efe4622c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46105100"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45e8d930"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7efe4622a200"/></to>
    </wire>
    <wire loc="488:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7efe4622a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46101d10"/></to>
    </wire>
    <wire loc="442:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7efe4626f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe461a4100"/></to>
    </wire>
    <wire loc="455:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7efe4625b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46174d10"/></to>
    </wire>
    <wire loc="531:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7efe46211560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46166d10"/></to>
    </wire>
    <wire loc="551:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7efe461ed570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460da100"/></to>
    </wire>
    <wire loc="532:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7efe4620f580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46161740"/></to>
    </wire>
    <wire loc="460:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7efe46257020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4616a100"/></to>
    </wire>
    <wire loc="473:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7efe46242200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4613be00"/></to>
    </wire>
    <wire loc="497:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7efe4621e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460e4d10"/></to>
    </wire>
    <wire loc="535:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7efe46209580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46158d10"/></to>
    </wire>
    <wire loc="545:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7efe461f9570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460f7100"/></to>
    </wire>
    <wire loc="557:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7efe461e4580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460d6d10"/></to>
    </wire>
    <wire loc="445:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7efe46269020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46195100"/></to>
    </wire>
    <wire loc="536:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7efe46207580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46152740"/></to>
    </wire>
    <wire loc="450:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7efe46265020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4618c740"/></to>
    </wire>
    <wire loc="463:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7efe46251020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4615c100"/></to>
    </wire>
    <wire loc="476:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7efe4623c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4612cd10"/></to>
    </wire>
    <wire loc="489:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7efe46228200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460fc740"/></to>
    </wire>
    <wire loc="500:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7efe46217200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460d6d10"/></to>
    </wire>
    <wire loc="440:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7efe46273020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe461aed10"/></to>
    </wire>
    <wire loc="453:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7efe4625f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4617e860"/></to>
    </wire>
    <wire loc="466:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7efe4624b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4614d100"/></to>
    </wire>
    <wire loc="530:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7efe46213580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46166d10"/></to>
    </wire>
    <wire loc="548:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7efe461f3570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460e9100"/></to>
    </wire>
    <wire loc="555:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7efe461e6570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460d6d10"/></to>
    </wire>
    <wire loc="541:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7efe461ff580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46110d10"/></to>
    </wire>
    <wire loc="471:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7efe46246020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46144a60"/></to>
    </wire>
    <wire loc="484:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7efe46232200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46114100"/></to>
    </wire>
    <wire loc="495:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7efe46222200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460ee740"/></to>
    </wire>
    <wire loc="549:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7efe461f1570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460e4d10"/></to>
    </wire>
    <wire loc="538:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7efe46205570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4611ed10"/></to>
    </wire>
    <wire loc="443:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7efe4626d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe461a0d10"/></to>
    </wire>
    <wire loc="456:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7efe46259020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4616f740"/></to>
    </wire>
    <wire loc="493:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7efe46226200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460f7100"/></to>
    </wire>
    <wire loc="461:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7efe46255020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46166d10"/></to>
    </wire>
    <wire loc="474:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7efe46240200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46136740"/></to>
    </wire>
    <wire loc="498:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7efe4621c200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460df740"/></to>
    </wire>
    <wire loc="540:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7efe46201580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46114100"/></to>
    </wire>
    <wire loc="438:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7efe46280020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe461b76d0"/></to>
    </wire>
    <wire loc="451:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7efe46263020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46187100"/></to>
    </wire>
    <wire loc="464:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7efe4624f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46158d10"/></to>
    </wire>
    <wire loc="477:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7efe4623a200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46127740"/></to>
    </wire>
    <wire loc="542:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7efe461fd580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4614d100"/></to>
    </wire>
    <wire loc="546:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7efe461f7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460f3d10"/></to>
    </wire>
    <wire loc="552:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7efe461eb570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460d6d10"/></to>
    </wire>
    <wire loc="482:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7efe46236200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4611ed10"/></to>
    </wire>
    <wire loc="543:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7efe461fb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46149d10"/></to>
    </wire>
    <wire loc="441:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7efe46271020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe461a9740"/></to>
    </wire>
    <wire loc="454:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7efe4625d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46178270"/></to>
    </wire>
    <wire loc="467:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7efe46248020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46149d10"/></to>
    </wire>
    <wire loc="539:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7efe46203580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46119740"/></to>
    </wire>
    <wire loc="550:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7efe461ef570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460df740"/></to>
    </wire>
    <wire loc="472:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7efe46244200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4613f460"/></to>
    </wire>
    <wire loc="485:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7efe46230200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46110d10"/></to>
    </wire>
    <wire loc="496:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7efe46220200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460e9100"/></to>
    </wire>
    <wire loc="444:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7efe4626b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4619a740"/></to>
    </wire>
    <wire loc="494:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7efe46224200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460f3d10"/></to>
    </wire>
    <wire loc="449:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7efe46267020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46191d10"/></to>
    </wire>
    <wire loc="462:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7efe46253020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46161740"/></to>
    </wire>
    <wire loc="475:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7efe4623e200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46131100"/></to>
    </wire>
    <wire loc="499:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7efe46219200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460da100"/></to>
    </wire>
    <wire loc="439:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7efe46275020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe461b2100"/></to>
    </wire>
    <wire loc="452:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7efe46261020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46183d10"/></to>
    </wire>
    <wire loc="465:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7efe4624d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46152740"/></to>
    </wire>
    <wire loc="478:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7efe46238200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46122100"/></to>
    </wire>
    <wire loc="534:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7efe4620b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4615c100"/></to>
    </wire>
    <wire loc="547:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7efe461f5570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460ee740"/></to>
    </wire>
    <wire loc="533:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7efe4620d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4615c100"/></to>
    </wire>
    <wire loc="483:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7efe46234200"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe46119740"/></to>
    </wire>
    <wire loc="554:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7efe461e8570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460da100"/></to>
    </wire>
    <wire loc="558:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7efe461e2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe460fc740"/></to>
    </wire>
    <wire loc="529:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7efe462151f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7efe4616a100"/></to>
    </wire>
    <wire loc="48:../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe460d3db0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe460cd020"/></to>
    </wire>
    <wire loc="49:../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efe460cd730"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7efe460ce390"/></to>
    </wire>
    <wire loc="46:../../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7efe460ce390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe460ac280"/></to>
    </wire>
    <wire loc="50:../../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7efe460cde10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe460c61a0"/></to>
    </wire>
    <wire loc="46:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe460ac280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe46095020"/></to>
    </wire>
    <wire loc="47:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efe460a5850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efe460956d0"/></to>
    </wire>
    <wire loc="48:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe464874c0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe460949a0"/></to>
    </wire>
    <wire loc="113:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7efe46051730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f8d6d0"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7efe4603f0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f86b30"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7efe46048890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f93160"/></to>
    </wire>
    <wire loc="149:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7efe4602ca20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f6ccb0"/></to>
    </wire>
    <wire loc="107:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7efe4604fc10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f94480"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7efe46032020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f6c020"/></to>
    </wire>
    <wire loc="170:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7efe46029a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f55cb0"/></to>
    </wire>
    <wire loc="154:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7efe4603a5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f66220"/></to>
    </wire>
    <wire loc="99:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7efe46052d60"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45fe39d0"/></to>
    </wire>
    <wire loc="135:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7efe4602ea20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f7b2f0"/></to>
    </wire>
    <wire loc="134:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7efe460343e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f7c610"/></to>
    </wire>
    <wire loc="133:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7efe4603e5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f7d220"/></to>
    </wire>
    <wire loc="115:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7efe46047890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f8b7a0"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7efe4602ba20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f642f0"/></to>
    </wire>
    <wire loc="140:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7efe4603dbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f766d0"/></to>
    </wire>
    <wire loc="114:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7efe4604ea20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f8cac0"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7efe460591b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45ff3c80"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7efe46032da0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f65610"/></to>
    </wire>
    <wire loc="106:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7efe46058220"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f95020"/></to>
    </wire>
    <wire loc="161:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7efe46039a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f5f6d0"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7efe460428d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f9ba90"/></to>
    </wire>
    <wire loc="142:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7efe4602da20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f747a0"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7efe4604ae60"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f9cde0"/></to>
    </wire>
    <wire loc="141:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7efe460331f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f75ac0"/></to>
    </wire>
    <wire loc="163:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7efe4602aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f5c7a0"/></to>
    </wire>
    <wire loc="147:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7efe4603b0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f6fb30"/></to>
    </wire>
    <wire loc="120:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="162:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7efe46031b80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f5dac0"/></to>
    </wire>
    <wire loc="128:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7efe4602fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe45f84cb0"/></to>
    </wire>
    <wire loc="169:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7efe46030a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f55020"/></to>
    </wire>
    <wire loc="127:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7efe46035570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7efe45f84020"/></to>
    </wire>
    <wire loc="168:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7efe46036020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7efe45f57b30"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efe45ff1c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45ff15b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efe45ff02f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7efe45f50a90"/></to>
    </wire>
    <wire loc="96:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efe45ff0940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7efe45f4d260"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f9a930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45ff3c80"/></to>
    </wire>
    <wire loc="103:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f98020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45ff15b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f92020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45ff3c80"/></to>
    </wire>
    <wire loc="110:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f917a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45ff15b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f8a610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45ff3c80"/></to>
    </wire>
    <wire loc="117:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f89c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45ff15b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7efe45fe9c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7efe45fe82f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7efe45f4d9f0"/></to>
    </wire>
    <wire loc="123:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7efe45fe8940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7efe45f4b240"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f83b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="130:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f812f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f7a160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="137:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f797a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f73610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="144:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f72c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f6bb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f692f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f63160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="158:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f627a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f5b610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="165:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f5ac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe45f54b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></to>
    </wire>
    <wire loc="172:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7efe45f522f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44d43dd0"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44dcdb70"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44dec750"/></to>
    </wire>
    <wire loc="52:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44e0c080"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44f43130"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe45044620"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe45134820"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe458107e0"/></to>
    </wire>
    <wire loc="103:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44423a40"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe454f8020"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe458c2510"/></to>
    </wire>
    <wire loc="103:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe4460b3b0"/></to>
    </wire>
    <wire loc="59:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe45dfce50"/></to>
    </wire>
    <wire loc="67:../../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efe45e7ddd0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efe468043a0"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7efe468043a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7efe463af140"/></to>
    </wire>
    <wire loc="68:../../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7efe45e79820"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe460d3db0"/></to>
    </wire>
    <wire loc="71:../../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e78020"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe463ad040"/></to>
    </wire>
    <wire loc="55:../../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7efe463a9490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7efe4679b3b0"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efe45df94e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe45de92f0"/></to>
    </wire>
    <wire loc="63:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efe45e6eca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe45e60b40"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe45e6b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe45e039e0"/></to>
    </wire>
    <wire loc="67:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45e614c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45dff400"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe45e6a2d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe45e02020"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe45dfce50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe45deac30"/></to>
    </wire>
    <wire loc="60:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45df6940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe45e61e40"/></to>
    </wire>
    <wire loc="69:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe45dffd90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe45df7020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efe45dfea50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe45df84c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efe45df6020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7efe459c48c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe45df7020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe45cb8de0"/></to>
    </wire>
    <wire loc="65:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe45df84c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe45cb86c0"/></to>
    </wire>
    <wire loc="66:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7efe45cb7c20"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efe45df6020"/></to>
    </wire>
    <wire loc="70:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45de68e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe45df6940"/></to>
    </wire>
    <wire loc="71:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45cb5920"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe45df6940"/></to>
    </wire>
    <wire loc="72:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45cabcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe45df6940"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efe45cb6590"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efe45ddf5c0"/></to>
    </wire>
    <wire loc="75:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7efe45cb6e80"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7efe45de2130"/></to>
    </wire>
    <wire loc="77:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7efe45dd98e0"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7efe45cb1e00"/></to>
    </wire>
    <wire loc="78:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7efe45dd48a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efe45c86080"/></to>
    </wire>
    <wire loc="17:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efe45c86080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efe459d60c0"/></to>
    </wire>
    <wire loc="80:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efe45ca1d20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efe45c86890"/></to>
    </wire>
    <wire loc="13:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efe45c86890"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efe459dc440"/></to>
    </wire>
    <wire loc="332:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7efe45d816e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7efe45db94f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7efe45d85c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:../../../../tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7efe45d7ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7efe45cb3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7efe45cb3800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efe45c84020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efe459db440"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efe459db440"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efe45c19210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efe459dc440"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efe45c1cb50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe459da020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe459d6920"/></to>
    </wire>
    <wire loc="19:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe459d5020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe459de020"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe459de020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45c1f320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe459dec70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4468e020"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4468e020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe45aa4d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe45c16600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe459da020"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44687440"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45c1add0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efe45c17370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4468f340"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe4468f340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45aa5a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe45c12be0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe44688c10"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe44688c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efe45aa9cd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45c1add0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45b89e70"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7efe45c19210"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7efe45b87890"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7efe45c1cb50"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7efe45b88790"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe45c1f320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45b890d0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe45b853e0"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe45c16600"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efe45b865b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7efe45c17370"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe45b805b0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe45c12be0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7efe45b85a50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe45b70d30"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe45b70d30"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efe45b68550"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe45b7e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe45adc110"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe45adc110"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efe45ad6210"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45b7c120"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="89:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe45b6d860"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efe45b63130"/></to>
    </wire>
    <wire loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45b70500"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45b6bbc0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efe45b63a00"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7efe46203580"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7efe45b61990"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7efe46201580"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efe45b5f990"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7efe461ff580"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7efe45b5d990"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7efe461fb580"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7efe45b5b990"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7efe461fd580"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efe45ad6210"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe45ad02a0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe45ac1450"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe4468d020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe45b70d30"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4468e7c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45aa3590"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45aa3590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45a11a70"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45aa2370"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44687440"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe45aa4d50"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe45a126c0"/></to>
    </wire>
    <wire loc="106:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe45a126c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe44607a60"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7efe45aa9cd0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efe45a9e0d0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe45aa5a60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45a147e0"/></to>
    </wire>
    <wire loc="105:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe45a147e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe44608c80"/></to>
    </wire>
    <wire loc="108:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45a11a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe44606e80"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7efe45a8d0a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe45b6d860"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45a103e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45aa2370"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45a8c020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45a11a70"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe45a0cd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe45a12e40"/></to>
    </wire>
    <wire loc="107:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe45a12e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe44606270"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45a0c020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45b70500"/></to>
    </wire>
    <wire loc="109:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44605790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45a103e0"/></to>
    </wire>
    <wire loc="111:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efe44604020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efe4460b9c0"/></to>
    </wire>
    <wire loc="75:../../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efe44602160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe445d2900"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45a0c020"/></to>
    </wire>
    <wire loc="82:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efe445d10e0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efe45a0c780"/></to>
    </wire>
    <wire loc="84:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe445d16b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe45a0cd50"/></to>
    </wire>
    <wire loc="85:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe445d0400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe459f5990"/></to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efe459872f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe4595c020"/></to>
    </wire>
    <wire loc="80:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efe459b0ca0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe45986320"/></to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efe45986320"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe44d05020"/></to>
    </wire>
    <wire loc="82:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7efe459aec00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7efe459831d0"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7efe459831d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7efe44d04df0"/></to>
    </wire>
    <wire loc="83:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efe459ad2b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe45981020"/></to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efe45981020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe44d02a80"/></to>
    </wire>
    <wire loc="89:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe459a09e0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe44fbf550"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe44fbf550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe44fb1a80"/></to>
    </wire>
    <wire loc="86:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efe459925b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efe45974170"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efe45974170"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efe45955700"/></to>
    </wire>
    <wire loc="81:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe459ae020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe45984510"/></to>
    </wire>
    <wire loc="87:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe45984510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe44d04210"/></to>
    </wire>
    <wire loc="85:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe459ab800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45980020"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45980020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45956670"/></to>
    </wire>
    <wire loc="84:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe459ac020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe45983800"/></to>
    </wire>
    <wire loc="89:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe45983800"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe44d03470"/></to>
    </wire>
    <wire loc="90:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efe4599faf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efe44fbb660"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efe44fbb660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efe44fadaf0"/></to>
    </wire>
    <wire loc="97:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efe4595c020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe44d37b80"/></to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4597f2c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efe44d008b0"/></to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7efe4596a1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7efe44d01ce0"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe459770f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe45957670"/></to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe45957670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efe45955700"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efe44d37080"/></to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45956670"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efe44fc16e0"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efe45961430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efe459542e0"/></to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efe459542e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efe44d22020"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe45973170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe45955080"/></to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe45955080"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe44fc0a70"/></to>
    </wire>
    <wire loc="97:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7efe44cf70f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4595b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe44cff860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efe45958170"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7efe45958170"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efe44da1c90"/></to>
    </wire>
    <wire loc="99:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efe44cfd690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efe45957020"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7efe45957020"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efe44da0a50"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efe44cf94d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efe451e7b20"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44cfdce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fb6d20"/></to>
    </wire>
    <wire loc="103:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44cfcb70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fb2640"/></to>
    </wire>
    <wire loc="104:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efe44cfb610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efe458cbdc0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efe458cbdc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efe458c1970"/></to>
    </wire>
    <wire loc="106:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7efe44cf81f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4594f990"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4594f990"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efe45948020"/></to>
    </wire>
    <wire loc="109:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe44cf7d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efe44d37b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7efe44d34d90"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe44fc0a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe44fb1020"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7efe44d22020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7efe44d20410"/></to>
    </wire>
    <wire loc="97:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7efe44da1c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7efe44d95a20"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7efe44d37080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7efe44d2f2d0"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7efe4595ad30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe44da15e0"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe44da15e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7efe44d95370"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efe44fc16e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efe44fb3c50"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe4595b1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe44da3be0"/></to>
    </wire>
    <wire loc="96:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe44da3be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe44d977b0"/></to>
    </wire>
    <wire loc="89:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7efe4595a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe44da28e0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe44da28e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7efe44d964d0"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efe45959420"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efe44d9e170"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7efe44d9e170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7efe44d93020"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7efe44da0a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7efe44d94840"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efe44d34d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe459539f0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7efe459539f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7efe4594b690"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe44d9d6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe44df5220"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe44df5220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe44defa20"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe44df4020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe44d25350"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe44d25350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efe44d22d70"/></to>
    </wire>
    <wire loc="103:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe44d22d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe44d3bce0"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe44d3bce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efe44d35860"/></to>
    </wire>
    <wire loc="104:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe44d35860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe45950600"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe45950600"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe459492e0"/></to>
    </wire>
    <wire loc="107:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efe44d9d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe44d38980"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe44d38980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efe44d34690"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efe44d34690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe44dd4aa0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe44dd4aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe44dd0e30"/></to>
    </wire>
    <wire loc="109:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efe44dd1950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe4594f300"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe4594f300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe450497c0"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7efe450497c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7efe45042020"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe45948e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe458db950"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe458db950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe458c2b80"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7efe4593f3f0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7efe458d6bf0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7efe458d6bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7efe458bf740"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efe459466f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efe4513f6c0"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7efe459466f0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efe4504c5c0"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efe4504c5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efe45044ca0"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7efe4513f6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efe45133020"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7efe459372a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7efe4513c020"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7efe4513c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe451338c0"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7efe4593e060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4513ccb0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4513ccb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7efe45132650"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe45935330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></to>
    </wire>
    <wire loc="73:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe4592d920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efe45934420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efe44e12a20"/></to>
    </wire>
    <wire loc="56:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efe44e12a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efe44e0ba20"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7efe45930110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe44e14aa0"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efe44e14aa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe454fc280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45934bf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7efe45923b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7efe45924ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7efe45925c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7efe458c80c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7efe458beb40"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7efe458b2d90"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efe4580d220"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7efe4580d220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efe458072e0"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efe458af060"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efe45725370"/></to>
    </wire>
    <wire loc="72:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efe45725370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe457181b0"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7efe458ae380"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7efe45722ce0"/></to>
    </wire>
    <wire loc="75:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7efe45722ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe45709710"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7efe458ad6a0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7efe4571f380"/></to>
    </wire>
    <wire loc="77:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7efe4571f380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe45700d70"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7efe458ab0e0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7efe456e9210"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7efe456e9210"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efe455cba30"/></to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efe458941d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45272e20"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe45272e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4557f960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efe458932b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7efe4526f7b0"/></to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efe4526f7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efe458939c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7efe4526eae0"/></to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efe4526eae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efe45895a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7efe45270ad0"/></to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efe45270ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe45895120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe4526d160"/></to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe4526d160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efe4589ab00"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7efe45264870"/></to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efe45264870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efe458a13d0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7efe45262880"/></to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efe45262880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efe458a1c80"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7efe452610a0"/></to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efe452610a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe4589c5f0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe45269e50"/></to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe45269e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45898020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45268670"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45268670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efe458a6520"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7efe45252500"/></to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efe45252500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efe4589da90"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7efe45253ce0"/></to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efe45253ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efe458988e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45265e50"/></to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45265e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efe458971c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7efe45268e50"/></to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efe45268e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efe45897a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7efe45267e50"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efe45267e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7efe45892d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45240a80"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe45240a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4557f960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7efe45892020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe452139e0"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe452139e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4557f960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efe458a3810"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efe451e7b20"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efe458ba020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efe451e6d20"/></to>
    </wire>
    <wire loc="23:../../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efe451e6d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efe451cb310"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7efe45886820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7efe45887940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe458107e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe45808a20"/></to>
    </wire>
    <wire loc="51:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe45808a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe445aadf0"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7efe458072e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe445a8690"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe445aadf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe445a1020"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efe445a8690"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe4459ba90"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe445a1020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44585a30"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efe44594210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe445a1870"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efe445a1870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe44584340"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe44597e10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe45794020"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe45794020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe4578e5f0"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe445814c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efe4458a570"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe4458a570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe4457fa90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe44589c10"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe44589c10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe4457eda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efe44587020"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe44587020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></to>
    </wire>
    <wire loc="59:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7efe4603f0c0"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7efe46035570"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7efe4603dbe0"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7efe460331f0"/></to>
    </wire>
    <wire loc="70:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></to>
    </wire>
    <wire loc="71:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7efe4603b0c0"/></to>
    </wire>
    <wire loc="72:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7efe46032020"/></to>
    </wire>
    <wire loc="74:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></to>
    </wire>
    <wire loc="75:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7efe4603a5a0"/></to>
    </wire>
    <wire loc="76:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7efe46032da0"/></to>
    </wire>
    <wire loc="78:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></to>
    </wire>
    <wire loc="79:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7efe46039a50"/></to>
    </wire>
    <wire loc="80:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7efe46031b80"/></to>
    </wire>
    <wire loc="82:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></to>
    </wire>
    <wire loc="83:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7efe46036020"/></to>
    </wire>
    <wire loc="84:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7efe46030a20"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efe45771950"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efe45ad6210"/></to>
    </wire>
    <wire loc="73:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7efe457246a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe45713d70"/></to>
    </wire>
    <wire loc="74:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7efe457239d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe4570eb70"/></to>
    </wire>
    <wire loc="71:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7efe457260e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe4571d710"/></to>
    </wire>
    <wire loc="76:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7efe45720020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe457041b0"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe4571c930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efe4626f020"/></to>
    </wire>
    <wire loc="64:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45717480"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7efe46242200"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45711020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7efe46271020"/></to>
    </wire>
    <wire loc="66:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe4570dde0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efe46280020"/></to>
    </wire>
    <wire loc="67:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45708930"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7efe4623a200"/></to>
    </wire>
    <wire loc="68:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45703480"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7efe46244200"/></to>
    </wire>
    <wire loc="69:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe456fd020"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7efe4623c200"/></to>
    </wire>
    <wire loc="63:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7efe456e55a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7efe456ce020"/></to>
    </wire>
    <wire loc="65:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efe456e9e30"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7efe455bca70"/></to>
    </wire>
    <wire loc="53:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe456ceae0"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7efe4603e5a0"/></to>
    </wire>
    <wire loc="54:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7efe456cdda0"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7efe4602ea20"/></to>
    </wire>
    <wire loc="55:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7efe456ccc20"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7efe46244200"/></to>
    </wire>
    <wire loc="60:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efe455ca610"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efe456bdc40"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7efe456bdc40"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7efe456a9a30"/></to>
    </wire>
    <wire loc="61:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7efe455bb610"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efe456bfe70"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7efe456bfe70"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7efe456af9c0"/></to>
    </wire>
    <wire loc="82:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7efe456b3bc0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7efe4569fbc0"/></to>
    </wire>
    <wire loc="73:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7efe456babc0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7efe456a6a30"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7efe456b8bc0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7efe456a4a30"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7efe456c3d20"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7efe456aba30"/></to>
    </wire>
    <wire loc="80:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7efe456b5bc0"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7efe456a1a30"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7efe456bcbc0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7efe456a8a30"/></to>
    </wire>
    <wire loc="83:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7efe456b1bc0"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7efe4569ebc0"/></to>
    </wire>
    <wire loc="78:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7efe456b7bc0"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7efe456a3a30"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7efe456bec80"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7efe456aaa30"/></to>
    </wire>
    <wire loc="81:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7efe456b4c40"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7efe456a0bc0"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7efe456bbbc0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7efe456a7a30"/></to>
    </wire>
    <wire loc="76:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7efe456b9bc0"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7efe456a5a30"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7efe456c4dc0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7efe456aca30"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7efe456b6bc0"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7efe456a2a30"/></to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efe4526f160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45263880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efe4525b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efe452620a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efe4524d500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efe45250500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efe4526e490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efe45255880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe45251500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efe4525d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efe4525f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45271a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4557b680"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4557b680"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45574920"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe4526de00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efe4526b490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe45254c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efe4526bbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe45251ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efe452550a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45267670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efe452570a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efe4525b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efe45257880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efe4524ece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efe45250ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efe4525f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efe4525a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efe45252ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efe45261880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efe4524dce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efe45270480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efe45269670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45265670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efe4525c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efe4525c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efe452630a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efe4526a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efe45269020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4526d7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe45253500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efe4524e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efe4525d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efe4525a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efe4526fe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efe452600a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efe4526a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efe45260880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efe452540a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efe4524c9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45570bb0"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe4556e020"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe4556edb0"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe4557f960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45571810"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe4556dba0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7efe45568020"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe45500770"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efe45500770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe454fc280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efe4556b400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe454dfc40"/></to>
    </wire>
    <wire loc="52:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe454dfc40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe444a3e70"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efe45569080"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efe454de8f0"/></to>
    </wire>
    <wire loc="53:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efe454de8f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efe444a02c0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efe45560680"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efe4529a020"/></to>
    </wire>
    <wire loc="54:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efe4529a020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efe4449e440"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45568df0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7efe4555b120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efe454fc280"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe454f8b70"/></to>
    </wire>
    <wire loc="110:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efe4449e440"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efe454c9850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efe444a02c0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efe454ca020"/></to>
    </wire>
    <wire loc="105:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe444a3e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe454cd430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe444a1af0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe444965d0"/></to>
    </wire>
    <wire loc="64:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe444965d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe453752c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7efe454ca020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7efe4546da10"/></to>
    </wire>
    <wire loc="108:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7efe444a08d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7efe454ca6a0"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7efe454ca6a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7efe4546c060"/></to>
    </wire>
    <wire loc="111:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efe454c7a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efe4449ebe0"/></to>
    </wire>
    <wire loc="115:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44489a80"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe454cb6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efe454c8690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe44497860"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe44497860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe45376020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe454c52a0"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe44490020"/></to>
    </wire>
    <wire loc="67:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe44490020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efe453784d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe454cb6b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe4546d250"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7efe454c9850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7efe4546cc50"/></to>
    </wire>
    <wire loc="88:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe454cd430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4546f470"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efe4546a3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efe454c7a40"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7efe4546b5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7efe454c8690"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe45465480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe454c52a0"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7efe4546aa50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe4545b020"/></to>
    </wire>
    <wire loc="85:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe4545b020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efe45454c70"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe45465c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7efe454632f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efe454565e0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe4544c150"/></to>
    </wire>
    <wire loc="86:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe45457d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efe4544d780"/></to>
    </wire>
    <wire loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efe4541fbb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7efe46213580"/></to>
    </wire>
    <wire loc="91:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7efe4541db20"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7efe4620f580"/></to>
    </wire>
    <wire loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efe4541bb20"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7efe4620d580"/></to>
    </wire>
    <wire loc="93:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7efe45419b20"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7efe46207580"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7efe45417b20"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7efe46209580"/></to>
    </wire>
    <wire loc="14:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7efe45424d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7efe45356430"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efe444907c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe453773f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efe44490dd0"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efe45362540"/></to>
    </wire>
    <wire loc="11:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efe45362540"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7efe45356430"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe444955a0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe4545b020"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe44496d70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45375ad0"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45375ad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4536bc30"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe453748a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44489a80"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe453752c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4536c850"/></to>
    </wire>
    <wire loc="106:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4536c850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4441f020"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7efe453784d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7efe45371060"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe45376020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4536da80"/></to>
    </wire>
    <wire loc="105:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe4536da80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe44420270"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe453773f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe45371990"/></to>
    </wire>
    <wire loc="108:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4536bc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4441d400"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45369570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe453748a0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45370e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4536bc30"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7efe45370060"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe45457d10"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efe45370840"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efe454565e0"/></to>
    </wire>
    <wire loc="107:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe4536b020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe4441f7a0"/></to>
    </wire>
    <wire loc="109:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe4441dcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45369570"/></to>
    </wire>
    <wire loc="111:../../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efe4441c500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efe444220a0"/></to>
    </wire>
    <wire loc="75:../../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7efe4441a7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7efe4534f250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7efe45454c70"/></to>
    </wire>
    <wire loc="18:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7efe4534bd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7efe46213580"/></to>
    </wire>
    <wire loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7efe45349cb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7efe4620d580"/></to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45233c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efe4523eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe45236b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45231670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efe4522ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efe45231e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efe4521d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efe4521f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efe4523b120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efe45225670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe452202f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efe45235c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efe45234c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efe4522b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efe4522de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efe4522f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4523f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4557b680"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe4523aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efe45239120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe45224a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efe45239870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe45220ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe4523bdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efe45226e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45234480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45235480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efe4523e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efe45227e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efe45228670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efe45226670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efe4521ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efe4521fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efe4522c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efe45228e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efe45221ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efe4522e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efe4521dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efe4523e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efe45236370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45233480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efe4522be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efe4522fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efe4522a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efe45232670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efe4523d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efe45232e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efe45238020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efe45238cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efe452212f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efe45223ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4523a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe452232f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efe4521e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efe4522ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efe45227670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efe4523daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efe4523b770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efe4522ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efe45238670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efe4522d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efe45225e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efe4521c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45206c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efe45211da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe4520ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45204670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efe451fde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efe45204e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efe451f02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efe451f32f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efe4520f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efe451f8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe451f42f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efe45209c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efe45208c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efe451fe670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efe45201e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efe45203670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45212760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4557b680"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe4520eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efe4520c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe451f7a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efe4520c870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe451f4ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe4520fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efe451fae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45208480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45209480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efe45211750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efe451fbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efe451fc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efe451fa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efe451f1ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efe451f3ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efe451ff670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efe451fce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efe451f5ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efe45202670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efe451f0ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efe45211100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efe4520a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45206480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efe451fee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efe45203e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efe451fd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efe45205670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efe45210450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efe45205e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efe4520b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efe4520bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efe451f52f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efe451f6ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4520e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe451f62f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efe451f12f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efe451ffe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efe451fb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efe45210aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efe4520f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efe45202e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efe4520b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efe45201670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efe451f8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efe451ef7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7efe451c7880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7efe451bd020"/></to>
    </wire>
    <wire loc="20:../../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7efe451bd020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7efe451b7140"/></to>
    </wire>
    <wire loc="16:../../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7efe451b3bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7efe451bcc50"/></to>
    </wire>
    <wire loc="21:../../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7efe451bcc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7efe4519e150"/></to>
    </wire>
    <wire loc="17:../../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7efe451b6530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7efe45155a20"/></to>
    </wire>
    <wire loc="18:../../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7efe451a2540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7efe451a3590"/></to>
    </wire>
    <wire loc="11:../../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7efe451a3590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7efe451539e0"/></to>
    </wire>
    <wire loc="18:../../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7efe45199950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7efe451a0ca0"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7efe451a0ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7efe45176a90"/></to>
    </wire>
    <wire loc="19:../../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7efe4519e9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7efe451a2540"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe45166020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7efe45161530"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7efe45161530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe4515de50"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe45159020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7efe460591b0"/></to>
    </wire>
    <wire loc="9:../../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45152c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7efe4625f020"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7efe45138990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7efe451315e0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7efe4513a150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7efe45131d70"/></to>
    </wire>
    <wire loc="66:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7efe451307f0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7efe4580d220"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7efe45122500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7efe457260e0"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efe4511b820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efe45725370"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7efe4511ab40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7efe45720020"/></to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7efe45123880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7efe456e55a0"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efe45118020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4507dc30"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe4507dc30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4557f960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45118d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4507b8f0"/></to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4507b8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4557b680"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efe451156d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7efe4507a2f0"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efe4507a2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efe45115de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7efe45079cc0"/></to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efe45079cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efe45114530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7efe45078370"/></to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efe45078370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe45114c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe45077d00"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe45077d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efe45116e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7efe45071c60"/></to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efe45071c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efe45117780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7efe450587a0"/></to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efe450587a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe45116550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe4505d2f0"/></to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe4505d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe451123e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45072480"/></to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45072480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efe451115e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7efe4506ee50"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efe4506ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45110020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7efe4506d670"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efe4506d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efe45112e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7efe450747b0"/></to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efe450747b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efe4510f9c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7efe4505aad0"/></to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efe4505aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efe45110890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7efe4505c2f0"/></to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efe4505c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efe4510f130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7efe4505cad0"/></to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efe4505cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7efe4510ad40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7efe4504cdf0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7efe4504cdf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7efe45043550"/></to>
    </wire>
    <wire loc="98:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe4512ca00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></to>
    </wire>
    <wire loc="99:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe4512b9a0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efe451287c0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe44fbf550"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efe4511db30"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efe44fb7480"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efe44fb7480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efe44fa98b0"/></to>
    </wire>
    <wire loc="104:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe4510d6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45070c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efe45079020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe45073c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efe45066e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efe4506de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efe450592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efe45061670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efe45072c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efe45067670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efe4506ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efe4506c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efe45075370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe45060a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efe45075ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe4505dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe45077060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efe45063e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45071480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efe4507a940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efe45064e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efe45065670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efe45063670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efe45068670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efe45065e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efe4505ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efe4506b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efe45059ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efe45073490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45070480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efe45067e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efe4506ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efe45066670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efe4506e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efe45079670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efe45074160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efe45074e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efe4505e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efe4505fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe450776b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe4505f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efe4505a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efe45068e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efe45064670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efe450789c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efe4506be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efe4506a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efe45061e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7efe45048020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7efe450427c0"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7efe4502d150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></to>
    </wire>
    <wire loc="68:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7efe45041020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7efe45725370"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7efe45040380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7efe457246a0"/></to>
    </wire>
    <wire loc="70:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7efe4503e6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7efe457239d0"/></to>
    </wire>
    <wire loc="71:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efe4503da50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efe456e9e30"/></to>
    </wire>
    <wire loc="72:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7efe4503c6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe44e60d00"/></to>
    </wire>
    <wire loc="126:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7efe44e60d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7efe4557f960"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efe4503b530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7efe44e3dad0"/></to>
    </wire>
    <wire loc="195:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7efe44e3dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4503aad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe44e5a6b0"/></to>
    </wire>
    <wire loc="137:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe44e5a6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efe4503a3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7efe44e59370"/></to>
    </wire>
    <wire loc="139:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7efe44e59370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe45039330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></to>
    </wire>
    <wire loc="77:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe450381e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></to>
    </wire>
    <wire loc="78:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efe45036d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe44fbf550"/></to>
    </wire>
    <wire loc="79:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7efe45038b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7efe458cbdc0"/></to>
    </wire>
    <wire loc="81:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efe450313e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7efe44e52e50"/></to>
    </wire>
    <wire loc="155:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7efe44e52e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45031cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7efe44e51670"/></to>
    </wire>
    <wire loc="156:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7efe44e51670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efe45032b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7efe44e58160"/></to>
    </wire>
    <wire loc="141:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7efe44e58160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efe4502f6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7efe44e3d2f0"/></to>
    </wire>
    <wire loc="192:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7efe44e3d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efe45030590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7efe44e3f2f0"/></to>
    </wire>
    <wire loc="188:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7efe44e3f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efe45030e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7efe44e3fad0"/></to>
    </wire>
    <wire loc="189:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7efe44e3fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe4502e020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe44e40ad0"/></to>
    </wire>
    <wire loc="187:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe44e40ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efe4502e8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7efe44e5e300"/></to>
    </wire>
    <wire loc="129:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7efe44e5e300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7efe450219d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe44f4a7c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe45794020"/></to>
    </wire>
    <wire loc="65:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7efe44fa4820"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efe44f534e0"/></to>
    </wire>
    <wire loc="69:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7efe44fa6b80"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efe44f3d610"/></to>
    </wire>
    <wire loc="59:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7efe44f3d610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7efe44e822b0"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efe44f42020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe44e91150"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe44f43130"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44f0e020"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe44f0e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe442f39d0"/></to>
    </wire>
    <wire loc="61:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7efe44e8b640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7efe44ee22f0"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efe44edd850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe44f0e870"/></to>
    </wire>
    <wire loc="53:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efe44f0e870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe442ec5f0"/></to>
    </wire>
    <wire loc="63:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe44e81690"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe44f2db70"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe44f2db70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe44f25610"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe442f39d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe442d7360"/></to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7efe442e7d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe442f2260"/></to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7efe442f2260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7efe442d7bf0"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7efe442e99b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7efe44f2db70"/></to>
    </wire>
    <wire loc="54:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe442d3dd0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efe442dc020"/></to>
    </wire>
    <wire loc="49:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7efe442dc020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe442d1440"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe442db760"/></to>
    </wire>
    <wire loc="50:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe442db760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe442d0760"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efe442daa80"/></to>
    </wire>
    <wire loc="51:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7efe442daa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7efe44f23b90"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efe45ad6210"/></to>
    </wire>
    <wire loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7efe44ed79c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7efe44e86a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7efe44e788c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efe44e6f2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7efe44e6f2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7efe44f42020"/></to>
    </wire>
    <wire loc="153:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7efe44e53c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7efe44e5d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe44e57c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7efe44e4ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7efe44e51e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7efe44e5b370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7efe44e45670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe44e402f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7efe44e55c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7efe44e54c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7efe44e4b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7efe44e4de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7efe44e4f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe44e5f970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4557b680"/></to>
    </wire>
    <wire loc="138:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe44e5ad00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe44e44a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7efe44e59ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe44e5a060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7efe44e46e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7efe44e54480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe44e55480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7efe44e5e950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7efe44e47e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7efe44e48670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7efe44e46670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7efe44e3ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7efe44e4c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7efe44e48e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7efe44e41ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7efe44e4e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7efe44e57490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7efe44e53480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7efe44e4be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7efe44e4fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7efe44e4a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7efe44e52670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7efe44e5d670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7efe44e58e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7efe44e412f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7efe44e43ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe44e432f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7efe44e3e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7efe44e4ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7efe44e47670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7efe44e5dcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7efe44e5b9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7efe44e4ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7efe44e587b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7efe44e4d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7efe44e45e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7efe44e3c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7efe44e10920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7efe44e0c940"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7efe44e169a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7efe44e0c080"/></to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe44dece60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efe44df4020"/></to>
    </wire>
    <wire loc="60:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efe44debae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe44dd8690"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efe44dd8690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe454fc280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7efe44dea8f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7efe44e12a20"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44de8170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></to>
    </wire>
    <wire loc="57:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7efe44dd1200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7efe44dcd570"/></to>
    </wire>
    <wire loc="58:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efe44dcc3f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efe44dd1950"/></to>
    </wire>
    <wire loc="62:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44dcca70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></to>
    </wire>
    <wire loc="94:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7efe44d93d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7efe44d9d6b0"/></to>
    </wire>
    <wire loc="95:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7efe44d92b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7efe44d9d020"/></to>
    </wire>
    <wire loc="100:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44d912f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></to>
    </wire>
    <wire loc="101:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44d8f170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></to>
    </wire>
    <wire loc="102:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7efe44d8fb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7efe44d42410"/></to>
    </wire>
    <wire loc="184:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7efe44d63db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7efe44d36800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe44d31580"/></to>
    </wire>
    <wire loc="74:../../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7efe44d31580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7efe454fc280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe44d1d1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45956670"/></to>
    </wire>
    <wire loc="63:../../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efe44211b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe44203660"/></to>
    </wire>
    <wire loc="64:../../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efe4420f8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe459ad2b0"/></to>
    </wire>
    <wire loc="65:../../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe4420e590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe459ac020"/></to>
    </wire>
    <wire loc="67:../../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efe44be2020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7efe4420dc10"/></to>
    </wire>
    <wire loc="66:../../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7efe4420dc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe459ab800"/></to>
    </wire>
    <wire loc="60:../../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe441f7460"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe44c47940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe441f60e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe459ac020"/></to>
    </wire>
    <wire loc="53:../../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7efe44c47940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7efe44bfb4b0"/></to>
    </wire>
    <wire loc="54:../../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7efe44bfa400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7efe459b0ca0"/></to>
    </wire>
    <wire loc="55:../../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe44bf9060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe459ac020"/></to>
    </wire>
    <wire loc="56:../../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efe44bf7720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe459ad2b0"/></to>
    </wire>
    <wire loc="169:../../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7efe44bf6480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:../../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7efe44bf6c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7efe44bd2970"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7efe459ad2b0"/></to>
    </wire>
    <wire loc="56:../../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7efe44bd15a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7efe459ac020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestSerialC" loc="57:TestSerialC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformC" loc="40:../../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="MainC" loc="56:../../../../tos/system/MainC.nc">
      <documentation loc="45:../../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:../../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:../../../../tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:../../../../tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):../../../../tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):../../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):../../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):../../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:../../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):../../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):../../../../tos/system/ArbiterP.nc">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../../tos/system/StateC.nc">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestSerialAppC.AMSenderC" loc="47(TestSerialAppC.AMSenderC):../../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.AMSenderC.SenderC" loc="47(TestSerialAppC.AMSenderC.SenderC):../../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP):../../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestSerialAppC.TimerMilliC" loc="44(TestSerialAppC.TimerMilliC):../../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestSerialAppC.AMReceiverC" loc="43(TestSerialAppC.AMReceiverC):../../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7efe461dd9f0" loc="40:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7efe461ddda0" loc="41:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7efe461dc1a0" loc="42:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7efe461dc550" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7efe461dc8c0" loc="44:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7efe46024230" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7efe460245d0" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7efe46024980" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7efe46024d00" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7efe460230d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7efe46023440" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7efe460237d0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7efe46023b60" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7efe46021020" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7efe45fe6950" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7efe45fe6d20" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:../../../../tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:../../../../tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:../../../../tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:../../../../tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efe45acf460" loc="42:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efe45acf460"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7efe45a899b0" loc="89:../../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7efe45a7daf0" loc="42:../../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7efe45a5f5e0" loc="52:../../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../../../../tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../../../../tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7efe457c79d0" loc="43:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7efe457c79d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efe45790ba0" loc="55:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efe45790ba0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efe4578d3b0" loc="56:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efe4578d3b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efe4578d7a0" loc="57:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efe4578d7a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efe4578c020" loc="58:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efe4578c020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efe4578c3f0" loc="59:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7efe4578cbf0" loc="60:../../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7efe4578cbf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7efe45795dc0" loc="52:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7efe45795dc0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7efe4576a600" loc="53:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7efe4576a600"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7efe4576a9f0" loc="54:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7efe4576a9f0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7efe45769210" loc="55:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7efe45769210"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7efe457695e0" loc="56:../../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:../../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe45174020" loc="52:../../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe45174020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efe451747b0" loc="52:../../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe451747b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe44f55a60" loc="46:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe44f55a60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe44f0acc0" loc="46:../../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe44f0acc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe44ed2230" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe44ed2230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7efe44ed2560" loc="46:../../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:../../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7efe44c6d6a0" loc="47:../../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7efe44c643a0" loc="47:../../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7efe44c5d0d0" loc="43:../../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7efe44c43c80" loc="45:../../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7efe44bdac50" loc="43:../../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x7efe4636e6b0" loc="60:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7efe4636e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe4636ea30"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe4636ebc0"/>
        <function-ref name="start" scoped="" ref="0x7efe4636ed50"/>
        <function-ref name="stop" scoped="" ref="0x7efe4636d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7efe4635a640" loc="62:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efe4635a640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efe4635a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7efe462f4bb0" loc="69:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7efe462f4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe462ff020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe462ff1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe462ff340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe462ff4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe462ff660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7efe46309210" loc="64:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7efe46309210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe46309590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x7efe4635bbe0" loc="67:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialSend" scoped="" ref="0x7efe4635bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe46307020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe463071b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe46307340"/>
        <function-ref name="cancel" scoped="" ref="0x7efe463074d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe46307660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0x7efe462ff9b0" loc="70:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacket" scoped="" ref="0x7efe462ff9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe462ffd30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe462fc020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe462fc1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe462fc340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe462fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x7efe4635b520" loc="66:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialReceive" scoped="" ref="0x7efe4635b520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe4635b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe4635c0d0" loc="61:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe4635c0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe4635c450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe4635c5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7efe4635c770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe4635c900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe4635ca90"/>
        <function-ref name="get" scoped="" ref="0x7efe4635cc20"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe4635cdb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe463684d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46368020"/>
        <function-ref name="led0On" scoped="" ref="0x7efe463681b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efe46368340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7efe4636aa00" loc="59:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe4636aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe4636ad80"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe4636e020"/>
        <function-ref name="start" scoped="" ref="0x7efe4636e1b0"/>
        <function-ref name="stop" scoped="" ref="0x7efe4636e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7efe462fe660" loc="65:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7efe462fe660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe462fe9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe462feb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe462fed00"/>
        <function-ref name="cancel" scoped="" ref="0x7efe4635b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4635b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x7efe462f5290" loc="71:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MilliTimer" scoped="" ref="0x7efe462f5290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe462e76e0"/>
        <function-ref name="fired" scoped="" ref="0x7efe462f2cc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe462e8a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe462e85f0"/>
        <function-ref name="getdt" scoped="" ref="0x7efe462e5020"/>
        <function-ref name="gett0" scoped="" ref="0x7efe462e7b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe462e8170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe462f5e80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe462e70d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe462f2370"/>
        <function-ref name="stop" scoped="" ref="0x7efe462f2840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efe462d47e0" loc="72:TestSerialC.nc">
      <component-ref qname="TestSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe462d47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe462d4b60"/>
        <function-ref name="source" scoped="" ref="0x7efe462d4cf0"/>
        <function-ref name="address" scoped="" ref="0x7efe462d4e80"/>
        <function-ref name="destination" scoped="" ref="0x7efe462e4030"/>
        <function-ref name="setSource" scoped="" ref="0x7efe462e41c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe462e4350"/>
        <function-ref name="type" scoped="" ref="0x7efe462e44e0"/>
        <function-ref name="setType" scoped="" ref="0x7efe462e4670"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe462e4800"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe462e4990"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe462e4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efe462b7820" loc="46:../../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe462b7820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe462b7ba0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe462b7d30"/>
        <function-ref name="led1On" scoped="" ref="0x7efe462b4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe462b41b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe462b4340"/>
        <function-ref name="get" scoped="" ref="0x7efe462b44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe462b4660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe462b4ca0"/>
        <function-ref name="set" scoped="" ref="0x7efe462b47f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe462b4980"/>
        <function-ref name="led2On" scoped="" ref="0x7efe462b4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7efe462a67b0" loc="50:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efe462a67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462a6b30"/>
        <function-ref name="isInput" scoped="" ref="0x7efe462a6cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe462a6e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462ac020"/>
        <function-ref name="get" scoped="" ref="0x7efe462ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe462ac340"/>
        <function-ref name="set" scoped="" ref="0x7efe462ac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe462ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe462ae9c0" loc="46:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe462ae9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe462aed40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7efe462ac980" loc="51:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efe462ac980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462acd00"/>
        <function-ref name="isInput" scoped="" ref="0x7efe462ab020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe462ab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462ab340"/>
        <function-ref name="get" scoped="" ref="0x7efe462ab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe462ab660"/>
        <function-ref name="set" scoped="" ref="0x7efe462ab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7efe462ab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7efe462b0020" loc="47:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe462b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe462b03a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe462b0530"/>
        <function-ref name="led1On" scoped="" ref="0x7efe462b06c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe462b0850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe462b09e0"/>
        <function-ref name="get" scoped="" ref="0x7efe462b0b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe462b0d00"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe462af4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe462af020"/>
        <function-ref name="led0On" scoped="" ref="0x7efe462af1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efe462af340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7efe462abca0" loc="52:../../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efe462abca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe462a5230"/>
        <function-ref name="toggle" scoped="" ref="0x7efe462a53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462a5550"/>
        <function-ref name="get" scoped="" ref="0x7efe462a56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe462a5870"/>
        <function-ref name="set" scoped="" ref="0x7efe462a5a00"/>
        <function-ref name="clr" scoped="" ref="0x7efe462a5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7efe4628a360" loc="41:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7efe4628a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4628a6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4628a870"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4628aa00"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4628ab90"/>
        <function-ref name="get" scoped="" ref="0x7efe4628ad20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46288020"/>
        <function-ref name="set" scoped="" ref="0x7efe462881b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe46288340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7efe462886a0" loc="42:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7efe462886a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46288a20"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46288bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46288d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46287020"/>
        <function-ref name="get" scoped="" ref="0x7efe462871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46287340"/>
        <function-ref name="set" scoped="" ref="0x7efe462874d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe46287660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7efe46286c40" loc="44:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe46286c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe46285020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7efe462879c0" loc="43:../../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7efe462879c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46287d40"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46286020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe462861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46286340"/>
        <function-ref name="get" scoped="" ref="0x7efe462864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46286660"/>
        <function-ref name="set" scoped="" ref="0x7efe462867f0"/>
        <function-ref name="clr" scoped="" ref="0x7efe46286980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efe4626f020" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efe4626f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4626f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4626f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4626f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4626f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4626f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4626fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4626fd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4626e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4626e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4626e340"/>
        <function-ref name="set" scoped="" ref="0x7efe4626e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4626e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4626e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4626ea80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4626ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efe4625b020" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efe4625b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4625b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4625b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4625b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4625b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4625b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4625bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4625bd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4625a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4625a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4625a340"/>
        <function-ref name="set" scoped="" ref="0x7efe4625a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4625a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4625a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4625aa80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4625ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7efe46211560" loc="145:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7efe46211560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462118e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46211a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46211c00"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46211d90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46210020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46210340"/>
        <function-ref name="get" scoped="" ref="0x7efe462104d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46210660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462107f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46210980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46210b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46210ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4620f020"/>
        <function-ref name="clr" scoped="" ref="0x7efe4620f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7efe461ed570" loc="165:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7efe461ed570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461ed8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461eda80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461edc10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461edda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461ec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461ec340"/>
        <function-ref name="get" scoped="" ref="0x7efe461ec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461ec660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461ec7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461ec980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461ecb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461ecca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461eb020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7efe4620f580" loc="146:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7efe4620f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4620f900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4620fa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4620fc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4620fdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4620e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4620e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4620e340"/>
        <function-ref name="get" scoped="" ref="0x7efe4620e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4620e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4620e7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe4620e980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4620eb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4620eca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4620d020"/>
        <function-ref name="clr" scoped="" ref="0x7efe4620d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7efe46257020" loc="71:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7efe46257020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462573a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46257530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462576c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46257850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462579e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46257b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46257d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46256020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462561b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46256340"/>
        <function-ref name="set" scoped="" ref="0x7efe462564d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46256660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462567f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46256a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46256c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7efe46242200" loc="84:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7efe46242200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46242580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46242710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462428a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46242a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46242bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46242d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46241020"/>
        <function-ref name="get" scoped="" ref="0x7efe462411b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46241340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462414d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46241660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462417f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46241980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46241c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46241da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7efe4622e200" loc="97:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7efe4622e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4622e580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4622e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4622e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4622ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4622ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4622ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4622d020"/>
        <function-ref name="get" scoped="" ref="0x7efe4622d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4622d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4622d4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4622d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4622d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4622d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4622dc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4622dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7efe4621e200" loc="108:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7efe4621e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4621e580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4621e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4621e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4621ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4621ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4621ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4621d020"/>
        <function-ref name="get" scoped="" ref="0x7efe4621d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4621d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4621d4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4621d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4621d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4621d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4621dc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4621dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7efe46209580" loc="149:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7efe46209580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46209900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46209a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46209c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46209db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46208020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46208340"/>
        <function-ref name="get" scoped="" ref="0x7efe462084d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46208660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462087f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46208980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46208b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46208ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46207020"/>
        <function-ref name="clr" scoped="" ref="0x7efe462071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7efe461f9570" loc="159:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7efe461f9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461f98f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461f9a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461f9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461f9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461f8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461f81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461f8340"/>
        <function-ref name="get" scoped="" ref="0x7efe461f84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461f8660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461f87f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461f8980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461f8b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461f8ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461f7020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7efe461e4580" loc="171:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7efe461e4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461e4900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461e4a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461e4c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461e4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461e3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461e3340"/>
        <function-ref name="get" scoped="" ref="0x7efe461e34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461e3660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461e37f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461e3980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461e3b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461e3ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461e2020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461e21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efe46269020" loc="56:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efe46269020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46269530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462696c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46269850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462699e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46269b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46269d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46268020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462681b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46268340"/>
        <function-ref name="set" scoped="" ref="0x7efe462684d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46268660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462687f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46268a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46268c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7efe46207580" loc="150:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7efe46207580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46207900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46207a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46207c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46207db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46206020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462061b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46206340"/>
        <function-ref name="get" scoped="" ref="0x7efe462064d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46206660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462067f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46206980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46206b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46206ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46205020"/>
        <function-ref name="clr" scoped="" ref="0x7efe462051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efe46265020" loc="61:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efe46265020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46265530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462656c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46265850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462659e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46265b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46265d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46264020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462641b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46264340"/>
        <function-ref name="set" scoped="" ref="0x7efe462644d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46264660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462647f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46264a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46264c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7efe46251020" loc="74:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7efe46251020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462513a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46251530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462516c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46251850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462519e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46251b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46251d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46250020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462501b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46250340"/>
        <function-ref name="set" scoped="" ref="0x7efe462504d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46250660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462507f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46250a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46250c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7efe4623c200" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7efe4623c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4623c580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4623c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4623c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4623ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4623cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4623cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4623b020"/>
        <function-ref name="get" scoped="" ref="0x7efe4623b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4623b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4623b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4623b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4623b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4623b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4623bc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4623bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7efe46228200" loc="100:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7efe46228200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46228580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46228710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462288a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46228a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46228bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46228d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46227020"/>
        <function-ref name="get" scoped="" ref="0x7efe462271b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46227340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462274d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46227660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462277f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46227980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46227c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46227da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7efe46217200" loc="111:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7efe46217200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46217580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46217710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462178a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46217a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46217bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46217d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46216020"/>
        <function-ref name="get" scoped="" ref="0x7efe462161b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46216340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462164d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46216660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462167f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46216980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46216c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46216da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efe46273020" loc="51:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efe46273020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46273530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462736c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46273850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462739e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46273b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46273d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46272020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462721b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46272340"/>
        <function-ref name="set" scoped="" ref="0x7efe462724d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46272660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462727f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46272a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46272c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efe4625f020" loc="64:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efe4625f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4625f4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4625f630"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4625f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4625f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4625fae0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4625fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4625fe00"/>
        <function-ref name="get" scoped="" ref="0x7efe4625e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4625e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4625e340"/>
        <function-ref name="set" scoped="" ref="0x7efe4625e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4625e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4625e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4625ea80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4625ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7efe4624b020" loc="77:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7efe4624b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4624b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4624b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4624b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4624b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4624b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4624bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4624bd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4624a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4624a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4624a340"/>
        <function-ref name="set" scoped="" ref="0x7efe4624a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4624a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4624a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4624aa80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4624ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7efe46213580" loc="144:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7efe46213580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46213900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46213a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46213c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46213db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46212020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46212340"/>
        <function-ref name="get" scoped="" ref="0x7efe462124d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46212660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462127f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46212980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46212b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46212ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46211020"/>
        <function-ref name="clr" scoped="" ref="0x7efe462111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7efe461f3570" loc="162:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7efe461f3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461f38f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461f3a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461f3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461f3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461f2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461f21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461f2340"/>
        <function-ref name="get" scoped="" ref="0x7efe461f24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461f2660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461f27f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461f2980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461f2b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461f2ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461f1020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7efe461e6570" loc="169:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7efe461e6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461e68f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461e6a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461e6c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461e6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461e5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461e51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461e5340"/>
        <function-ref name="get" scoped="" ref="0x7efe461e54d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461e5660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461e57f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461e5980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461e5b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461e5ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461e4020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461e41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7efe461ff580" loc="155:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7efe461ff580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461ff900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461ffa90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461ffc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461ffdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461fe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461fe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461fe340"/>
        <function-ref name="get" scoped="" ref="0x7efe461fe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461fe660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461fe7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461fe980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461feb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461feca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461fd020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7efe46246020" loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7efe46246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462465a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46246730"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462468c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46246a50"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46246be0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46246d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46245020"/>
        <function-ref name="get" scoped="" ref="0x7efe462451b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46245340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462454d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46245660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462457f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46245980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46245c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46245da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7efe46232200" loc="95:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7efe46232200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46232580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46232710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462328a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46232a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46232bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46232d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46231020"/>
        <function-ref name="get" scoped="" ref="0x7efe462311b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46231340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462314d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46231660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462317f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46231980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46231c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46231da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7efe46222200" loc="106:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7efe46222200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46222580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46222710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462228a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46222a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46222bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46222d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46221020"/>
        <function-ref name="get" scoped="" ref="0x7efe462211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46221340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462214d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46221660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462217f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46221980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46221c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46221da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7efe461f1570" loc="163:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7efe461f1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461f18f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461f1a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461f1c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461f1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461f01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461f0340"/>
        <function-ref name="get" scoped="" ref="0x7efe461f04d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461f0660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461f07f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461f0980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461f0b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461f0ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461ef020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461ef1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7efe46205570" loc="152:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7efe46205570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462058f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46205a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46205c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46205da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46204020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46204340"/>
        <function-ref name="get" scoped="" ref="0x7efe462044d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46204660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462047f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46204980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46204b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46204ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46203020"/>
        <function-ref name="clr" scoped="" ref="0x7efe462031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efe4626d020" loc="54:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efe4626d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4626d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4626d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4626d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4626d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4626d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4626db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4626dd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4626c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4626c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4626c340"/>
        <function-ref name="set" scoped="" ref="0x7efe4626c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4626c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4626c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4626ca80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4626cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efe46259020" loc="67:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efe46259020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462593a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46259530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462596c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46259850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462599e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46259b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46259d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46258020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462581b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46258340"/>
        <function-ref name="set" scoped="" ref="0x7efe462584d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46258660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462587f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46258a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46258c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7efe46226200" loc="104:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7efe46226200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46226580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46226710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462268a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46226a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46226bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46226d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46225020"/>
        <function-ref name="get" scoped="" ref="0x7efe462251b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46225340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462254d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46225660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462257f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46225980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46225c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46225da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7efe46255020" loc="72:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7efe46255020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46255530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462556c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46255850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462559e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46255b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46255d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46254020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462541b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46254340"/>
        <function-ref name="set" scoped="" ref="0x7efe462544d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46254660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462547f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46254a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46254c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7efe46240200" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7efe46240200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46240580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46240710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462408a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46240a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46240bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46240d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4623f020"/>
        <function-ref name="get" scoped="" ref="0x7efe4623f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4623f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4623f4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4623f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4623f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4623f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4623fc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4623fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7efe4622c200" loc="98:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7efe4622c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4622c580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4622c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4622c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4622ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4622cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4622cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4622b020"/>
        <function-ref name="get" scoped="" ref="0x7efe4622b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4622b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4622b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4622b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4622b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4622b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4622bc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4622bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7efe4621c200" loc="109:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7efe4621c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4621c580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4621c710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4621c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4621ca30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4621cbc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4621cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4621b020"/>
        <function-ref name="get" scoped="" ref="0x7efe4621b1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4621b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4621b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4621b660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4621b7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4621b980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4621bc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4621bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7efe46201580" loc="154:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7efe46201580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46201900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46201a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46201c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46201db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46200020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46200340"/>
        <function-ref name="get" scoped="" ref="0x7efe462004d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46200660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462007f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46200980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46200b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46200ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461ff020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461ff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efe46280020" loc="49:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efe46280020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46280530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462806c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46280850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462809e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46280b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46280d00"/>
        <function-ref name="get" scoped="" ref="0x7efe4627f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4627f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4627f340"/>
        <function-ref name="set" scoped="" ref="0x7efe4627f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4627f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4627f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4627fa80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4627fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efe46263020" loc="62:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efe46263020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462633a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46263530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462636c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46263850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462639e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46263b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46263d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46262020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462621b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46262340"/>
        <function-ref name="set" scoped="" ref="0x7efe462624d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46262660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462627f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46262a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46262c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7efe4624f020" loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7efe4624f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4624f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4624f530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4624f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4624f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4624f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4624fb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4624fd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4624e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4624e1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4624e340"/>
        <function-ref name="set" scoped="" ref="0x7efe4624e4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4624e660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4624e7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4624ea80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4624ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7efe4623a200" loc="88:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7efe4623a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4623a580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4623a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4623a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4623aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4623abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4623ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46239020"/>
        <function-ref name="get" scoped="" ref="0x7efe462391b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46239340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462394d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46239660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462397f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46239980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46239c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46239da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7efe461fd580" loc="156:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7efe461fd580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461fd900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461fda90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461fdc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461fddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461fc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461fc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461fc340"/>
        <function-ref name="get" scoped="" ref="0x7efe461fc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461fc660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461fc7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461fc980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461fcb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461fcca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461fb020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461fb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7efe461f7570" loc="160:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7efe461f7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461f78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461f7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461f7c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461f7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461f6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461f6340"/>
        <function-ref name="get" scoped="" ref="0x7efe461f64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461f6660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461f67f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461f6980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461f6b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461f6ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461f5020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7efe461eb570" loc="166:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7efe461eb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461eb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461eba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461ebc10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461ebda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461e9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461e9340"/>
        <function-ref name="get" scoped="" ref="0x7efe461e94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461e9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461e97f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461e9980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461e9b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461e9ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461e8020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7efe46236200" loc="93:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7efe46236200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46236580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46236710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462368a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46236a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46236bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46236d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46235020"/>
        <function-ref name="get" scoped="" ref="0x7efe462351b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46235340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462354d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46235660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462357f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46235980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46235c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46235da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7efe461fb580" loc="157:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7efe461fb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461fb900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461fba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461fbc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461fbdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461fa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461fa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461fa340"/>
        <function-ref name="get" scoped="" ref="0x7efe461fa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461fa660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461fa7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461fa980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461fab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461faca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461f9020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efe46271020" loc="52:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efe46271020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46271530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462716c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46271850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462719e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46271b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46271d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46270020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462701b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46270340"/>
        <function-ref name="set" scoped="" ref="0x7efe462704d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46270660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462707f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46270a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46270c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efe4625d020" loc="65:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efe4625d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4625d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4625d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4625d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4625d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4625d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4625db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4625dd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4625c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4625c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4625c340"/>
        <function-ref name="set" scoped="" ref="0x7efe4625c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4625c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4625c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4625ca80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4625cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7efe46248020" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7efe46248020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46248530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462486c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46248850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462489e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46248b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46248d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46247020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462471b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46247340"/>
        <function-ref name="set" scoped="" ref="0x7efe462474d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46247660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462477f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46247a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46247c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7efe46203580" loc="153:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7efe46203580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46203900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46203a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46203c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46203db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46202020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46202340"/>
        <function-ref name="get" scoped="" ref="0x7efe462024d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46202660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462027f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46202980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46202b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46202ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46201020"/>
        <function-ref name="clr" scoped="" ref="0x7efe462011b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7efe461ef570" loc="164:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7efe461ef570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461ef8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461efa80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461efc10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461efda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461ee340"/>
        <function-ref name="get" scoped="" ref="0x7efe461ee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461ee660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461ee7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461ee980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461eeb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461eeca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461ed020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461ed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7efe46244200" loc="83:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7efe46244200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46244580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46244710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462448a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46244a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46244bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46244d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46243020"/>
        <function-ref name="get" scoped="" ref="0x7efe462431b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46243340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462434d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46243660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462437f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46243980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46243c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46243da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7efe46230200" loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7efe46230200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46230580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46230710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462308a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46230a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46230bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46230d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4622f020"/>
        <function-ref name="get" scoped="" ref="0x7efe4622f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4622f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4622f4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4622f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4622f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4622f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4622fc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4622fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7efe46220200" loc="107:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7efe46220200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46220580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46220710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462208a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46220a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46220bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46220d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4621f020"/>
        <function-ref name="get" scoped="" ref="0x7efe4621f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4621f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4621f4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4621f660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4621f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4621f980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4621fc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4621fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efe4626b020" loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efe4626b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4626b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4626b530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4626b6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4626b850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4626b9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4626bb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4626bd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4626a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4626a1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4626a340"/>
        <function-ref name="set" scoped="" ref="0x7efe4626a4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4626a660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4626a7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4626aa80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4626ac10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7efe46224200" loc="105:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7efe46224200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46224580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46224710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462248a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46224a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46224bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46224d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46223020"/>
        <function-ref name="get" scoped="" ref="0x7efe462231b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46223340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462234d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46223660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462237f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46223980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46223c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46223da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efe46267020" loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efe46267020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46267530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462676c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46267850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462679e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46267b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46267d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46266020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462661b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46266340"/>
        <function-ref name="set" scoped="" ref="0x7efe462664d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46266660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462667f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46266a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46266c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7efe46253020" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7efe46253020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46253530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462536c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46253850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462539e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46253b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46253d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46252020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462521b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46252340"/>
        <function-ref name="set" scoped="" ref="0x7efe462524d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46252660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462527f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46252a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46252c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7efe4623e200" loc="86:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7efe4623e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4623e580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4623e710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4623e8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4623ea30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4623ebc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4623ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4623d020"/>
        <function-ref name="get" scoped="" ref="0x7efe4623d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4623d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4623d4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4623d660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4623d7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4623d980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4623dc10"/>
        <function-ref name="clr" scoped="" ref="0x7efe4623dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7efe4622a200" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7efe4622a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4622a580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4622a710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4622a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4622aa30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4622abc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4622ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46229020"/>
        <function-ref name="get" scoped="" ref="0x7efe462291b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46229340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462294d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46229660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462297f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46229980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46229c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46229da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7efe46219200" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7efe46219200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46219580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46219710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462198a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46219a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46219bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46219d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46218020"/>
        <function-ref name="get" scoped="" ref="0x7efe462181b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46218340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462184d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46218660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462187f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46218980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46218c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46218da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efe46275020" loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efe46275020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46275530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462756c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46275850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462759e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46275b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46275d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46274020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462741b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46274340"/>
        <function-ref name="set" scoped="" ref="0x7efe462744d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46274660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462747f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46274a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46274c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efe46261020" loc="63:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efe46261020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe462613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46261530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462616c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46261850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe462619e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46261b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46261d00"/>
        <function-ref name="get" scoped="" ref="0x7efe46260020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe462601b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46260340"/>
        <function-ref name="set" scoped="" ref="0x7efe462604d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46260660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe462607f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46260a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46260c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7efe4624d020" loc="76:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7efe4624d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4624d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4624d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4624d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4624d850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4624d9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4624db70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4624dd00"/>
        <function-ref name="get" scoped="" ref="0x7efe4624c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4624c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4624c340"/>
        <function-ref name="set" scoped="" ref="0x7efe4624c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4624c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4624c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4624ca80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4624cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7efe46238200" loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7efe46238200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46238580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46238710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462388a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46238a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46238bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46238d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46237020"/>
        <function-ref name="get" scoped="" ref="0x7efe462371b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46237340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462374d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46237660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462377f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46237980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46237c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46237da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7efe4620b560" loc="148:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7efe4620b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4620b8e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4620ba70"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4620bc00"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4620bd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4620a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4620a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4620a340"/>
        <function-ref name="get" scoped="" ref="0x7efe4620a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4620a660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4620a7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe4620a980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4620ab10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4620aca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46209020"/>
        <function-ref name="clr" scoped="" ref="0x7efe462091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7efe461f5570" loc="161:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7efe461f5570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461f58f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461f5a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461f5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461f5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461f41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461f4340"/>
        <function-ref name="get" scoped="" ref="0x7efe461f44d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461f4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461f47f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461f4980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461f4b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461f4ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461f3020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7efe4620d580" loc="147:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7efe4620d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4620d900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4620da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4620dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4620ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4620c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4620c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4620c340"/>
        <function-ref name="get" scoped="" ref="0x7efe4620c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4620c660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4620c7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe4620c980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4620cb10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4620cca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4620b020"/>
        <function-ref name="clr" scoped="" ref="0x7efe4620b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7efe46234200" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7efe46234200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46234580"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46234710"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe462348a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46234a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46234bc0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46234d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46233020"/>
        <function-ref name="get" scoped="" ref="0x7efe462331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46233340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462334d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46233660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe462337f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46233980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46233c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46233da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7efe461e8570" loc="168:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7efe461e8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461e88f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461e8a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461e8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461e8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461e7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461e7340"/>
        <function-ref name="get" scoped="" ref="0x7efe461e74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461e7660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461e77f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461e7980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461e7b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461e7ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461e6020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7efe461e2580" loc="172:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7efe461e2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461e2900"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461e2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461e2c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461e2db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461e1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461e1340"/>
        <function-ref name="get" scoped="" ref="0x7efe461e14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461e1660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461e17f0"/>
        <function-ref name="set" scoped="" ref="0x7efe461e1980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461e1b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461e1ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461e0020"/>
        <function-ref name="clr" scoped="" ref="0x7efe461e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7efe462151f0" loc="143:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7efe462151f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46215970"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46215b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46215c90"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46215e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46214020"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe462141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46214340"/>
        <function-ref name="get" scoped="" ref="0x7efe462144d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46214660"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe462147f0"/>
        <function-ref name="set" scoped="" ref="0x7efe46214980"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46214b10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46214ca0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46213020"/>
        <function-ref name="clr" scoped="" ref="0x7efe462131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe461b76d0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe461b76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461b7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461b7be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461b7d70"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461b6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461b64d0"/>
        <function-ref name="get" scoped="" ref="0x7efe461b6660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461b67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461b6980"/>
        <function-ref name="set" scoped="" ref="0x7efe461b6b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461b6ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461b6e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461b5120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe461b2100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe461b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461b2480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461b2610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461b27a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461b2930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461b2ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461b2c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461b2de0"/>
        <function-ref name="get" scoped="" ref="0x7efe461b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461b11b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461b1340"/>
        <function-ref name="set" scoped="" ref="0x7efe461b14d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461b1660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461b17f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461b1a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe461b1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe461aed10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe461aed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461ad0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461ad270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461ad400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461ad590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461ad720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461ad8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461ada40"/>
        <function-ref name="get" scoped="" ref="0x7efe461adbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461add60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461ac020"/>
        <function-ref name="set" scoped="" ref="0x7efe461ac1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461ac340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461ac4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461ac760"/>
        <function-ref name="clr" scoped="" ref="0x7efe461ac8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe461a9740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe461a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461a9ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461a9c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461a9de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461a81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461a84d0"/>
        <function-ref name="get" scoped="" ref="0x7efe461a8660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461a87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461a8980"/>
        <function-ref name="set" scoped="" ref="0x7efe461a8b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461a8ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461a8e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461a7120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe461a4100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe461a4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461a4480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe461a4610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461a47a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe461a4930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461a4ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461a4c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461a4de0"/>
        <function-ref name="get" scoped="" ref="0x7efe461a3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461a31b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461a3340"/>
        <function-ref name="set" scoped="" ref="0x7efe461a34d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461a3660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461a37f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe461a3a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe461a3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe461a0d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe461a0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4619e0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4619e270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4619e400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4619e590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4619e720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4619e8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4619ea40"/>
        <function-ref name="get" scoped="" ref="0x7efe4619ebd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4619ed60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4619d020"/>
        <function-ref name="set" scoped="" ref="0x7efe4619d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4619d340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4619d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4619d760"/>
        <function-ref name="clr" scoped="" ref="0x7efe4619d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4619a740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4619a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4619aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4619ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4619ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46199020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461991b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46199340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461994d0"/>
        <function-ref name="get" scoped="" ref="0x7efe46199660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46199980"/>
        <function-ref name="set" scoped="" ref="0x7efe46199b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46199ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46199e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46198120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46195100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46195100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46195480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46195610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461957a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46195930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46195ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46195c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46195de0"/>
        <function-ref name="get" scoped="" ref="0x7efe46194020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461941b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46194340"/>
        <function-ref name="set" scoped="" ref="0x7efe461944d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46194660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461947f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46194a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46194c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46191d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46191d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461900e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46190270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46190400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46190590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46190720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461908b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46190a40"/>
        <function-ref name="get" scoped="" ref="0x7efe46190bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46190d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4618f020"/>
        <function-ref name="set" scoped="" ref="0x7efe4618f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4618f340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4618f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4618f760"/>
        <function-ref name="clr" scoped="" ref="0x7efe4618f8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4618c740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4618c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4618cac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4618cc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4618cde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4618b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4618b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4618b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4618b4d0"/>
        <function-ref name="get" scoped="" ref="0x7efe4618b660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4618b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4618b980"/>
        <function-ref name="set" scoped="" ref="0x7efe4618bb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4618bca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4618be30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4618a120"/>
        <function-ref name="clr" scoped="" ref="0x7efe4618a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46187100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46187100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46187480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46187610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461877a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46187930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46187ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46187c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46187de0"/>
        <function-ref name="get" scoped="" ref="0x7efe46186020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461861b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46186340"/>
        <function-ref name="set" scoped="" ref="0x7efe461864d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46186660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461867f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46186a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46186c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46183d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46183d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461820e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46182270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46182400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46182590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46182720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461828b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46182a40"/>
        <function-ref name="get" scoped="" ref="0x7efe46182bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46182d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46181020"/>
        <function-ref name="set" scoped="" ref="0x7efe461811b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46181340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461814d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46181760"/>
        <function-ref name="clr" scoped="" ref="0x7efe461818f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4617e860" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4617e860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4617ebe0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4617ed70"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4617d020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4617d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4617d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4617d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4617d660"/>
        <function-ref name="get" scoped="" ref="0x7efe4617d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4617d980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4617db10"/>
        <function-ref name="set" scoped="" ref="0x7efe4617dca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4617de30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4617c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4617c2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4617c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46178270" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46178270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461785f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46178780"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46178910"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46178aa0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46178c30"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46178dc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46177020"/>
        <function-ref name="get" scoped="" ref="0x7efe461771b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46177340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe461774d0"/>
        <function-ref name="set" scoped="" ref="0x7efe46177660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe461777f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46177980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46177c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe46177da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46174d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46174d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461730e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46173270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46173400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46173590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46173720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461738b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46173a40"/>
        <function-ref name="get" scoped="" ref="0x7efe46173bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46173d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46172020"/>
        <function-ref name="set" scoped="" ref="0x7efe461721b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46172340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461724d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46172760"/>
        <function-ref name="clr" scoped="" ref="0x7efe461728f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4616f740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4616f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4616fac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4616fc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4616fde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4616e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4616e1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4616e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4616e4d0"/>
        <function-ref name="get" scoped="" ref="0x7efe4616e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4616e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4616e980"/>
        <function-ref name="set" scoped="" ref="0x7efe4616eb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4616eca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4616ee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4616d120"/>
        <function-ref name="clr" scoped="" ref="0x7efe4616d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4616a100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4616a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4616a480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4616a610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4616a7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4616a930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4616aac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4616ac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4616ade0"/>
        <function-ref name="get" scoped="" ref="0x7efe46169020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461691b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46169340"/>
        <function-ref name="set" scoped="" ref="0x7efe461694d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46169660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461697f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46169a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46169c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46166d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46166d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461650e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46165270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46165400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46165590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46165720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461658b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46165a40"/>
        <function-ref name="get" scoped="" ref="0x7efe46165bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46165d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46164020"/>
        <function-ref name="set" scoped="" ref="0x7efe461641b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46164340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461644d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46164760"/>
        <function-ref name="clr" scoped="" ref="0x7efe461648f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46161740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46161740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46161ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46161c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46161de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46160020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461601b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46160340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461604d0"/>
        <function-ref name="get" scoped="" ref="0x7efe46160660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461607f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46160980"/>
        <function-ref name="set" scoped="" ref="0x7efe46160b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46160ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46160e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4615f120"/>
        <function-ref name="clr" scoped="" ref="0x7efe4615f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4615c100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4615c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4615c480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4615c610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4615c7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4615c930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4615cac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4615cc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4615cde0"/>
        <function-ref name="get" scoped="" ref="0x7efe4615b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4615b1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4615b340"/>
        <function-ref name="set" scoped="" ref="0x7efe4615b4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4615b660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4615b7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4615ba80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4615bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46158d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46158d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461560e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46156270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46156400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46156590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46156720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461568b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46156a40"/>
        <function-ref name="get" scoped="" ref="0x7efe46156bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46156d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46155020"/>
        <function-ref name="set" scoped="" ref="0x7efe461551b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46155340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461554d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46155760"/>
        <function-ref name="clr" scoped="" ref="0x7efe461558f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46152740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46152740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46152ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46152c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46152de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46151020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461511b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46151340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461514d0"/>
        <function-ref name="get" scoped="" ref="0x7efe46151660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461517f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46151980"/>
        <function-ref name="set" scoped="" ref="0x7efe46151b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46151ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46151e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46150120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4614d100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4614d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4614d480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4614d610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4614d7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4614d930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4614dac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4614dc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4614dde0"/>
        <function-ref name="get" scoped="" ref="0x7efe4614c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4614c1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4614c340"/>
        <function-ref name="set" scoped="" ref="0x7efe4614c4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4614c660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4614c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4614ca80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4614cc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46149d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46149d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461480e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46148270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46148400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46148590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46148720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461488b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46148a40"/>
        <function-ref name="get" scoped="" ref="0x7efe46148bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46148d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46147020"/>
        <function-ref name="set" scoped="" ref="0x7efe461471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46147340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46147760"/>
        <function-ref name="clr" scoped="" ref="0x7efe461478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46144a60" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46144a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46144de0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46143020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461431b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46143340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461434d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46143660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461437f0"/>
        <function-ref name="get" scoped="" ref="0x7efe46143980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46143b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46143ca0"/>
        <function-ref name="set" scoped="" ref="0x7efe46143e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46142020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461421b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46142440"/>
        <function-ref name="clr" scoped="" ref="0x7efe461425d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4613f460" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4613f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4613f7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4613f970"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4613fb00"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4613fc90"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4613fe20"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4613e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4613e1b0"/>
        <function-ref name="get" scoped="" ref="0x7efe4613e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4613e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4613e660"/>
        <function-ref name="set" scoped="" ref="0x7efe4613e7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4613e980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4613eb10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4613eda0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4613d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4613be00" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4613be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4613a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4613a350"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4613a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4613a670"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4613a800"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4613a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4613ab20"/>
        <function-ref name="get" scoped="" ref="0x7efe4613acb0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4613ae40"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46139020"/>
        <function-ref name="set" scoped="" ref="0x7efe461391b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46139340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461394d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46139760"/>
        <function-ref name="clr" scoped="" ref="0x7efe461398f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46136740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46136740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46136ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46136c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46136de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46135020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461351b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46135340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461354d0"/>
        <function-ref name="get" scoped="" ref="0x7efe46135660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461357f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46135980"/>
        <function-ref name="set" scoped="" ref="0x7efe46135b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46135ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46135e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46134120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46131100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46131100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46131480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46131610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461317a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46131930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46131ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46131c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46131de0"/>
        <function-ref name="get" scoped="" ref="0x7efe4612f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4612f1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4612f340"/>
        <function-ref name="set" scoped="" ref="0x7efe4612f4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4612f660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4612f7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4612fa80"/>
        <function-ref name="clr" scoped="" ref="0x7efe4612fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4612cd10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4612cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4612b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4612b270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4612b400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4612b590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4612b720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4612b8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4612ba40"/>
        <function-ref name="get" scoped="" ref="0x7efe4612bbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4612bd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4612a020"/>
        <function-ref name="set" scoped="" ref="0x7efe4612a1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4612a340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4612a4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4612a760"/>
        <function-ref name="clr" scoped="" ref="0x7efe4612a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46127740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46127740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46127ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46127c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46127de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46126020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46126340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461264d0"/>
        <function-ref name="get" scoped="" ref="0x7efe46126660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461267f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46126980"/>
        <function-ref name="set" scoped="" ref="0x7efe46126b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46126ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46126e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46125120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46122100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46122100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46122480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46122610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461227a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46122930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46122ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46122c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46122de0"/>
        <function-ref name="get" scoped="" ref="0x7efe46121020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461211b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46121340"/>
        <function-ref name="set" scoped="" ref="0x7efe461214d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46121660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461217f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46121a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46121c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4611ed10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4611ed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4611d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4611d270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4611d400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4611d590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4611d720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4611d8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4611da40"/>
        <function-ref name="get" scoped="" ref="0x7efe4611dbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4611dd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4611c020"/>
        <function-ref name="set" scoped="" ref="0x7efe4611c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4611c340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4611c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4611c760"/>
        <function-ref name="clr" scoped="" ref="0x7efe4611c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46119740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46119740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46119ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46119c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46119de0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46118020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461181b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46118340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461184d0"/>
        <function-ref name="get" scoped="" ref="0x7efe46118660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461187f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46118980"/>
        <function-ref name="set" scoped="" ref="0x7efe46118b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46118ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46118e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46117120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46114100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46114100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46114480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46114610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461147a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46114930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46114ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46114c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46114de0"/>
        <function-ref name="get" scoped="" ref="0x7efe46113020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461131b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46113340"/>
        <function-ref name="set" scoped="" ref="0x7efe461134d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46113660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461137f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46113a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46113c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46110d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46110d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4610f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4610f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4610f400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4610f590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4610f720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4610f8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4610fa40"/>
        <function-ref name="get" scoped="" ref="0x7efe4610fbd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4610fd60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4610e020"/>
        <function-ref name="set" scoped="" ref="0x7efe4610e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4610e340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4610e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4610e760"/>
        <function-ref name="clr" scoped="" ref="0x7efe4610e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe4610a740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe4610a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4610aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4610ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4610ade0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46109020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe461091b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46109340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe461094d0"/>
        <function-ref name="get" scoped="" ref="0x7efe46109660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461097f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46109980"/>
        <function-ref name="set" scoped="" ref="0x7efe46109b10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46109ca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe46109e30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46108120"/>
        <function-ref name="clr" scoped="" ref="0x7efe461082b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46105100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46105100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe46105480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46105610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe461057a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46105930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46105ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe46105c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46105de0"/>
        <function-ref name="get" scoped="" ref="0x7efe46104020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe461041b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe46104340"/>
        <function-ref name="set" scoped="" ref="0x7efe461044d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe46104660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe461047f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe46104a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe46104c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe46101d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe46101d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe461000e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe46100270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe46100400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe46100590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe46100720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe461008b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe46100a40"/>
        <function-ref name="get" scoped="" ref="0x7efe46100bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe46100d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460ff020"/>
        <function-ref name="set" scoped="" ref="0x7efe460ff1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460ff340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460ff4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460ff760"/>
        <function-ref name="clr" scoped="" ref="0x7efe460ff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460fc740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460fc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460fcac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460fcc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460fcde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460fb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460fb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460fb4d0"/>
        <function-ref name="get" scoped="" ref="0x7efe460fb660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460fb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460fb980"/>
        <function-ref name="set" scoped="" ref="0x7efe460fbb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460fbca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460fbe30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460fa120"/>
        <function-ref name="clr" scoped="" ref="0x7efe460fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460f7100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460f7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460f7480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460f7610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460f77a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460f7930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460f7ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460f7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460f7de0"/>
        <function-ref name="get" scoped="" ref="0x7efe460f6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460f61b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460f6340"/>
        <function-ref name="set" scoped="" ref="0x7efe460f64d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460f6660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460f67f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460f6a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe460f6c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460f3d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460f3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460f20e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460f2270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460f2400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460f2590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460f2720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460f28b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460f2a40"/>
        <function-ref name="get" scoped="" ref="0x7efe460f2bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460f2d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460f1020"/>
        <function-ref name="set" scoped="" ref="0x7efe460f11b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460f1340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460f14d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460f1760"/>
        <function-ref name="clr" scoped="" ref="0x7efe460f18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460ee740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460ee740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460eeac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460eec50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460eede0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460ed1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460ed340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460ed4d0"/>
        <function-ref name="get" scoped="" ref="0x7efe460ed660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460ed7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460ed980"/>
        <function-ref name="set" scoped="" ref="0x7efe460edb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460edca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460ede30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460ec120"/>
        <function-ref name="clr" scoped="" ref="0x7efe460ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460e9100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460e9480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460e9610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460e97a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460e9930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460e9ac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460e9c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460e9de0"/>
        <function-ref name="get" scoped="" ref="0x7efe460e7020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460e71b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460e7340"/>
        <function-ref name="set" scoped="" ref="0x7efe460e74d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460e7660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460e77f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460e7a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe460e7c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460e4d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460e4d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460e30e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460e3270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460e3400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460e3590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460e3720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460e38b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460e3a40"/>
        <function-ref name="get" scoped="" ref="0x7efe460e3bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460e3d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460e2020"/>
        <function-ref name="set" scoped="" ref="0x7efe460e21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460e2340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460e24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460e2760"/>
        <function-ref name="clr" scoped="" ref="0x7efe460e28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460df740" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460dfac0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460dfc50"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460dfde0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460de020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460de1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460de340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460de4d0"/>
        <function-ref name="get" scoped="" ref="0x7efe460de660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460de7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460de980"/>
        <function-ref name="set" scoped="" ref="0x7efe460deb10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460deca0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460dee30"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460dd120"/>
        <function-ref name="clr" scoped="" ref="0x7efe460dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460da100" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460da480"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460da610"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460da7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460da930"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460daac0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460dac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460dade0"/>
        <function-ref name="get" scoped="" ref="0x7efe460d9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460d91b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460d9340"/>
        <function-ref name="set" scoped="" ref="0x7efe460d94d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460d9660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460d97f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460d9a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe460d9c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7efe460d6d10" loc="47:../../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7efe460d6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe460d50e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe460d5270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe460d5400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe460d5590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe460d5720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe460d58b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe460d5a40"/>
        <function-ref name="get" scoped="" ref="0x7efe460d5bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe460d5d60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe460d4020"/>
        <function-ref name="set" scoped="" ref="0x7efe460d41b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe460d4340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe460d44d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe460d4760"/>
        <function-ref name="clr" scoped="" ref="0x7efe460d48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe460d3db0" loc="42:../../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe460d3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460d0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7efe460cde10" loc="6:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7efe460cde10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460cc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe460cd020" loc="4:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe460cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460cd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7efe460cd730" loc="5:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efe460cd730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460cdab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7efe460cc520" loc="7:../../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7efe460cc520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460cc8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe460c61a0" loc="2:../../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe460c61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460c6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7efe460ce390" loc="39:../../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7efe460ce390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460ce710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efe460a5850" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efe460a5850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efe460ab7f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efe460a5d60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efe460ab020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efe460ab1b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efe460a5bd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efe460ab340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efe460ab4d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7efe460ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe460ac280" loc="39:../../../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe460ac280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460ac600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7efe460956d0" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efe460956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efe46094660"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efe46095be0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efe46095d70"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efe46094020"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efe46095a50"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efe460941b0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efe46094340"/>
        <function-ref name="initClocks" scoped="" ref="0x7efe460944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7efe460949a0" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe460949a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efe46094d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe46095020" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe46095020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe460953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7efe46051730" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7efe46051730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe46051ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe46051c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe46051dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe46050020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe460501b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe46050340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe460504d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe46050660"/>
        <function-ref name="setControl" scoped="" ref="0x7efe460507f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7efe4603f0c0" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7efe4603f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe4603f440"/>
        <function-ref name="getControl" scoped="" ref="0x7efe4603f5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe4603f760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe4603f8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe4603fa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe4603fc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe4603fda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe4603e020"/>
        <function-ref name="setControl" scoped="" ref="0x7efe4603e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7efe46048890" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7efe46048890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46048c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe46048da0"/>
        <function-ref name="captured" scoped="" ref="0x7efe46047020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe460471b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe46047340"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe460474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7efe4602ca20" loc="68:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7efe4602ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4602cda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe4602b020"/>
        <function-ref name="captured" scoped="" ref="0x7efe4602b1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4602b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4602b4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe4602b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7efe4604fc10" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7efe4604fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4604e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe4604e1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe4604e340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe4604e4d0"/>
        <function-ref name="fired" scoped="" ref="0x7efe4604e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7efe46032020" loc="61:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7efe46032020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe460323a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe46032530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe460326c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe46032850"/>
        <function-ref name="fired" scoped="" ref="0x7efe460329e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7efe46029a20" loc="71:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7efe46029a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46029da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe46028020"/>
        <function-ref name="captured" scoped="" ref="0x7efe460281b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe46028340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe460284d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe46028660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7efe4603a5a0" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7efe4603a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe4603a920"/>
        <function-ref name="getControl" scoped="" ref="0x7efe4603aab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe4603ac40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe4603add0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe46039020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe460391b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe46039340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe460394d0"/>
        <function-ref name="setControl" scoped="" ref="0x7efe46039660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7efe46052d60" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7efe46052d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe46061180"/>
        <function-ref name="getControl" scoped="" ref="0x7efe46061310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe460614a0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe46061630"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe460617c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe46061950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe46061ae0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe46061c70"/>
        <function-ref name="setControl" scoped="" ref="0x7efe46061e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7efe4602ea20" loc="66:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7efe4602ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4602eda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe4602d020"/>
        <function-ref name="captured" scoped="" ref="0x7efe4602d1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4602d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4602d4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe4602d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7efe460343e0" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7efe460343e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46034760"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe460348f0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe46034a80"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe46034c10"/>
        <function-ref name="fired" scoped="" ref="0x7efe46034da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7efe4603e5a0" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7efe4603e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe4603ea20"/>
        <function-ref name="getControl" scoped="" ref="0x7efe4603ebb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe4603ed40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe4603d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe4603d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe4603d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe4603d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe4603d660"/>
        <function-ref name="setControl" scoped="" ref="0x7efe4603d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7efe46047890" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7efe46047890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46047c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe46047da0"/>
        <function-ref name="captured" scoped="" ref="0x7efe46041020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe460411b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe46041340"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe460414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7efe4602ba20" loc="69:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7efe4602ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4602bda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe4602a020"/>
        <function-ref name="captured" scoped="" ref="0x7efe4602a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4602a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4602a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe4602a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7efe4603dbe0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7efe4603dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe4603c020"/>
        <function-ref name="getControl" scoped="" ref="0x7efe4603c1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe4603c340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe4603c4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe4603c660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe4603c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe4603c980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe4603cb10"/>
        <function-ref name="setControl" scoped="" ref="0x7efe4603cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7efe4604ea20" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7efe4604ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4604eda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe46049020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe460491b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe46049340"/>
        <function-ref name="fired" scoped="" ref="0x7efe460494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7efe460591b0" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7efe460591b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe46059530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe460596c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe46059850"/>
        <function-ref name="get" scoped="" ref="0x7efe460599e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe46059b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe46059d00"/>
        <function-ref name="getMode" scoped="" ref="0x7efe46062020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe460621b0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe46062340"/>
        <function-ref name="setMode" scoped="" ref="0x7efe460624d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe46062660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7efe46032da0" loc="62:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7efe46032da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46031180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe46031310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe460314a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe46031630"/>
        <function-ref name="fired" scoped="" ref="0x7efe460317c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7efe46058220" loc="41:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7efe46058220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe460585a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe46058730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe460588c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe46058a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe46058be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe46058d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe46051020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe460511b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efe46051340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7efe46039a50" loc="56:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7efe46039a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe46039dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe46037020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe460371b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe46037340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe460374d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe46037660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe460377f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe46037980"/>
        <function-ref name="setControl" scoped="" ref="0x7efe46037b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7efe460428d0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7efe460428d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46042c50"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe46042de0"/>
        <function-ref name="captured" scoped="" ref="0x7efe46048020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe460481b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe46048340"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe460484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7efe4602da20" loc="67:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7efe4602da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4602dda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe4602c020"/>
        <function-ref name="captured" scoped="" ref="0x7efe4602c1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4602c340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4602c4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe4602c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7efe4604ae60" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7efe4604ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4604f210"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe4604f3a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe4604f530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe4604f6c0"/>
        <function-ref name="fired" scoped="" ref="0x7efe4604f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7efe460331f0" loc="60:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7efe460331f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46033570"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe46033700"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe46033890"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe46033a20"/>
        <function-ref name="fired" scoped="" ref="0x7efe46033bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7efe4602aa20" loc="70:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7efe4602aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4602ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe46029020"/>
        <function-ref name="captured" scoped="" ref="0x7efe460291b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe46029340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe460294d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe46029660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7efe4603b0c0" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7efe4603b0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe4603b440"/>
        <function-ref name="getControl" scoped="" ref="0x7efe4603b5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe4603b760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe4603b8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe4603ba80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe4603bc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe4603bda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe4603a020"/>
        <function-ref name="setControl" scoped="" ref="0x7efe4603a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7efe46041850" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7efe46041850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe46041bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe46041d60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe46040020"/>
        <function-ref name="get" scoped="" ref="0x7efe460401b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe46040340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe460404d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe46040660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe460407f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe46040980"/>
        <function-ref name="setMode" scoped="" ref="0x7efe46040b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe46040ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7efe46031b80" loc="63:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7efe46031b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe46030020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe460301b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe46030340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe460304d0"/>
        <function-ref name="fired" scoped="" ref="0x7efe46030660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7efe4602fa20" loc="65:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7efe4602fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4602fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe4602e020"/>
        <function-ref name="captured" scoped="" ref="0x7efe4602e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4602e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4602e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe4602e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7efe46030a20" loc="64:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7efe46030a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4602f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe4602f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe4602f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe4602f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7efe4602f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7efe46035570" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7efe46035570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe460358f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe46035a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe46035c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe46035da0"/>
        <function-ref name="fired" scoped="" ref="0x7efe46034020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7efe46036020" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7efe46036020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe460363a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe46036530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe460366c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe46036850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe460369e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe46036b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe46036d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe46035020"/>
        <function-ref name="setControl" scoped="" ref="0x7efe460351b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efe45ff02f0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efe45ff02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45ff0670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efe45ff1c20" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efe45ff1c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45ff0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efe45ff0940" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efe45ff0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45ff0cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efe45ff15b0" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45ff15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45ff1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efe45ff3c80" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45ff3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45ff20a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45ff2230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45ff23c0"/>
        <function-ref name="get" scoped="" ref="0x7efe45ff2550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45ff26e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45ff2870"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45ff2a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45ff2b90"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45ff2d20"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45ff1020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45ff11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7efe45fe82f0" loc="53:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7efe45fe82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45fe8670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7efe45fe9c20" loc="52:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7efe45fe9c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45fe8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7efe45fe8940" loc="54:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7efe45fe8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45fe8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7efe45fe95b0" loc="51:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45fe95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45fe9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efe45febc80" loc="50:../../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45febc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45fea0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45fea230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45fea3c0"/>
        <function-ref name="get" scoped="" ref="0x7efe45fea550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45fea6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45fea870"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45feaa00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45feab90"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45fead20"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45fe9020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45fe91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f9ba90" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f9ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f9be10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f9a020"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f9a1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f9a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f9a4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45fe39d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45fe39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45fe3d50"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f9c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f9c1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f9c340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f9c4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f9c660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f9c7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f9c980"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f9cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f98020" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f9cde0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f9cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f9b180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f9b310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f9b4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f9b630"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f9b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f9a930" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f9a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f9acb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f9ae40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f99020"/>
        <function-ref name="get" scoped="" ref="0x7efe45f991b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f99340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f994d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f99660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f997f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f99980"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f99b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f99ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f93160" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f93160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f934e0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f93670"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f93800"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f93990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f93b20"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f93cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f95020" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f953a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f95530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f956c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f95850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f959e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f95b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f95d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f94020"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f941b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f917a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f917a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f91b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f94480" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f94480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f94800"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f94990"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f94b20"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f94cb0"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f94e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f92020" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f923a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f92530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f926c0"/>
        <function-ref name="get" scoped="" ref="0x7efe45f92850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f929e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f92b70"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f92d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f91020"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f911b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f91340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f8b7a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f8b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f8bb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f8bcb0"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f8be40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f8a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f8a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f8d6d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f8d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f8da50"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f8dbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f8dd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f8c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f8c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f8c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f8c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f8c660"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f8c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f89c50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f89c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f8cac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f8cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f8ce40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f8b020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f8b1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f8b340"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f8a610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f8a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f8a990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f8ab20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f8acb0"/>
        <function-ref name="get" scoped="" ref="0x7efe45f8ae40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f89020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f891b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f89340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f894d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f89660"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f897f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f89980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f84cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f84cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f830a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f83230"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f833c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f83550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f836e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f83870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f86b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f86b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f85020"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f851b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f85340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f854d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f85660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f857f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f85980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f85b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f85ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f812f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f81670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f84020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f843a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f84530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f846c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f84850"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f849e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f83b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f83b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f82020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f821b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f82340"/>
        <function-ref name="get" scoped="" ref="0x7efe45f824d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f82660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f827f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f82980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f82b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f82ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f82e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f81020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f7b2f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f7b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f7b670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f7b800"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f7b990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f7bb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f7bcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f7be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f7d220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f7d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f7d5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f7d730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f7d8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f7da50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f7dbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f7dd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f7c020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f7c1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f7c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f797a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f797a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f79b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f7c610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f7c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f7c990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f7cb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f7ccb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f7ce40"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f7a160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f7a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f7a4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f7a670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f7a800"/>
        <function-ref name="get" scoped="" ref="0x7efe45f7a990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f7ab20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f7acb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f7ae40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f79020"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f791b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f79340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f747a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f747a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f74b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f74cb0"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f74e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f73020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f731b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f73340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f766d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f766d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f76a50"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f76be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f76d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f75020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f751b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f75340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f754d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f75660"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f757f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f72c50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f72c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f75ac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f75ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f75e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f74020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f741b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f74340"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f744d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f73610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f73610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f73990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f73b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f73cb0"/>
        <function-ref name="get" scoped="" ref="0x7efe45f73e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f72020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f721b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f72340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f724d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f72660"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f727f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f72980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f6ccb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f6ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f6b0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f6b230"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f6b3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f6b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f6b6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f6b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f6fb30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f6fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f6d020"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f6d1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f6d340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f6d4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f6d660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f6d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f6d980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f6db10"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f6dca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f692f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f69670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f6c020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f6c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f6c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f6c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f6c850"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f6c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f6bb40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f6bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f6a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f6a1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f6a340"/>
        <function-ref name="get" scoped="" ref="0x7efe45f6a4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f6a660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f6a7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f6a980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f6ab10"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f6aca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f6ae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f69020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f642f0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f642f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f64670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f64800"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f64990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f64b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f64cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f64e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f66220" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f66220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f665a0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f66730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f668c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f66a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f66be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f66d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f65020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f651b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f65340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f627a0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f62b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f65610" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f65610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f65990"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f65b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f65cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f65e40"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f63160" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f63160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f634e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f63670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f63800"/>
        <function-ref name="get" scoped="" ref="0x7efe45f63990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f63b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f63cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f63e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f62020"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f621b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f62340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f624d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f5c7a0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f5c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f5cb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f5ccb0"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f5ce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f5b020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f5b1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f5f6d0" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f5f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f5fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f5fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f5fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f5d020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f5d1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f5d340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f5d4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f5d660"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f5ac50" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f5ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f5dac0" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f5dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f5de40"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f5c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f5c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f5c340"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f5b610" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f5b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f5b990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f5bb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f5bcb0"/>
        <function-ref name="get" scoped="" ref="0x7efe45f5be40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f5a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f5a1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f5a340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f5a4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f5a660"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f5a7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f5a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe45f55cb0" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe45f55cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f540a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe45f54230"/>
        <function-ref name="captured" scoped="" ref="0x7efe45f543c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f54550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f546e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe45f54870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7efe45f57b30" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7efe45f57b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe45f56020"/>
        <function-ref name="getControl" scoped="" ref="0x7efe45f561b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f56340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe45f564d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe45f56660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f567f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe45f56980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe45f56b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efe45f56ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7efe45f522f0" loc="48:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7efe45f522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f52670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7efe45f55020" loc="45:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7efe45f55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe45f553a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe45f55530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe45f556c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe45f55850"/>
        <function-ref name="fired" scoped="" ref="0x7efe45f559e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7efe45f54b40" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe45f54b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45f53020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45f531b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45f53340"/>
        <function-ref name="get" scoped="" ref="0x7efe45f534d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45f53660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45f537f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45f53980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45f53b10"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45f53ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45f53e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45f52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7efe45f4b240" loc="7:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7efe45f4b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f4b5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7efe45f50a90" loc="4:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7efe45f50a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f50e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7efe45f4d260" loc="5:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7efe45f4d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f4d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7efe45f4d9f0" loc="6:../../../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7efe45f4d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45f4dd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7efe464874c0" loc="55:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7efe464874c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7efe46487840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7efe4679b3b0" loc="51:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efe4679b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efe4679b730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efe4679b8c0"/>
        <function-ref name="sleep" scoped="" ref="0x7efe4679ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7efe465c3bc0" loc="52:../../../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7efe465c3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7efe466ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7efe460adb40" loc="39:../../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7efe460adb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7efe45f17b10"/>
        <function-ref name="initTimerB" scoped="" ref="0x7efe45f171b0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7efe45f17340"/>
        <function-ref name="initTimerA" scoped="" ref="0x7efe45f174d0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7efe45f17020"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7efe45f17660"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7efe45f177f0"/>
        <function-ref name="initClocks" scoped="" ref="0x7efe45f17980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45e962f0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45e962f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45e96670"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45e96800"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45e96990"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45e96b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45e96cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45e96e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45e95020"/>
        <function-ref name="get" scoped="" ref="0x7efe45e951b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45e95340"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45e954d0"/>
        <function-ref name="set" scoped="" ref="0x7efe45e95660"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45e957f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45e95980"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45e95c10"/>
        <function-ref name="clr" scoped="" ref="0x7efe45e95da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe45ea7020" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe45ea7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45ea73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45ea7530"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45ea76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45ea7850"/>
        <function-ref name="get" scoped="" ref="0x7efe45ea79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45ea7b70"/>
        <function-ref name="set" scoped="" ref="0x7efe45ea7d00"/>
        <function-ref name="clr" scoped="" ref="0x7efe45e96020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45e92de0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45e92de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45e91180"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45e91310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45e914a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45e91630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45e917c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45e91950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45e91ae0"/>
        <function-ref name="get" scoped="" ref="0x7efe45e91c70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45e91e00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45e90020"/>
        <function-ref name="set" scoped="" ref="0x7efe45e901b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45e90340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45e904d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45e90760"/>
        <function-ref name="clr" scoped="" ref="0x7efe45e908f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe45e93b90" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe45e93b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45e92020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45e921b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45e92340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45e924d0"/>
        <function-ref name="get" scoped="" ref="0x7efe45e92660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45e927f0"/>
        <function-ref name="set" scoped="" ref="0x7efe45e92980"/>
        <function-ref name="clr" scoped="" ref="0x7efe45e92b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45e8d930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45e8d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45e8dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45e8de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45e8c020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45e8c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45e8c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45e8c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45e8c660"/>
        <function-ref name="get" scoped="" ref="0x7efe45e8c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45e8c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45e8cb10"/>
        <function-ref name="set" scoped="" ref="0x7efe45e8cca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45e8ce30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45e8b020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45e8b2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45e8b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe45e8e710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe45e8e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45e8ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45e8ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45e8edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45e8d020"/>
        <function-ref name="get" scoped="" ref="0x7efe45e8d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45e8d340"/>
        <function-ref name="set" scoped="" ref="0x7efe45e8d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45e8d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efe45e7e1b0" loc="58:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e7e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45e7e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efe45e81a80" loc="57:../../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efe45e81a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efe45e81e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7efe45e78020" loc="60:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7efe45e78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45e783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7efe45e7d760" loc="57:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7efe45e7d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7efe45e7dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7efe45e79820" loc="59:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7efe45e79820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45e79ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7efe45e7ddd0" loc="58:../../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efe45e7ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45e79180"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efe45e79310"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efe45e794a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efe46873410" loc="48:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efe46873410"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe46873790"/>
        <function-ref name="runTask" scoped="" ref="0x7efe46873920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efe468043a0" loc="47:../../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efe468043a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe46804720"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efe468048b0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efe46804a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7efe463ad040" loc="56:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7efe463ad040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe463ad3c0"/>
        <function-ref name="runTask" scoped="" ref="0x7efe463ad550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7efe463a9490" loc="57:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7efe463a9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7efe463a9810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7efe463a99a0"/>
        <function-ref name="sleep" scoped="" ref="0x7efe463a9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7efe463af140" loc="55:../../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7efe463af140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe463af4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7efe463af650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7efe463af7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe45e80b20" loc="46:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe45e80b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe45e6e020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe45e6e1b0"/>
        <function-ref name="start" scoped="" ref="0x7efe45e6e340"/>
        <function-ref name="stop" scoped="" ref="0x7efe45e6e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe45e6eca0" loc="47:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe45e6eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45e6d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45e6d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45e6d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45e6d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45e6d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe45e6b630" loc="49:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe45e6b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45e6b9b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe45e6bb40"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45e6bcd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45e6be60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe45e6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe45e6b020" loc="48:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe45e6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45e6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45e61e40" loc="53:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45e61e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45e681e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45e68370"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45e68500"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45e68690"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45e68820"/>
        <function-ref name="get" scoped="" ref="0x7efe45e689b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45e68b40"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45e671b0"/>
        <function-ref name="set" scoped="" ref="0x7efe45e68cd0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45e68e60"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45e67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efe45e614c0" loc="51:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45e614c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe45e61840"/>
        <function-ref name="noAck" scoped="" ref="0x7efe45e619d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe45e61b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe45e6a2d0" loc="50:../../../../tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe45e6a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe45e6a650"/>
        <function-ref name="source" scoped="" ref="0x7efe45e6a7e0"/>
        <function-ref name="address" scoped="" ref="0x7efe45e6a970"/>
        <function-ref name="destination" scoped="" ref="0x7efe45e6ab00"/>
        <function-ref name="setSource" scoped="" ref="0x7efe45e6ac90"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe45e6ae20"/>
        <function-ref name="type" scoped="" ref="0x7efe45e69020"/>
        <function-ref name="setType" scoped="" ref="0x7efe45e691b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe45e69340"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe45e694d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe45e69660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe45dffd90" loc="54:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe45dffd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45dfe180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45dfe310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45dfe4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45dfe630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45dfe7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efe45dfea50" loc="55:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efe45dfea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45dfedd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe45e60b40" loc="47:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe45e60b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45e03020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45e031b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45e03340"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45e034d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45e03660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe45e01720" loc="50:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe45e01720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45e01aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe45e01c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45e01dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45dff020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe45dff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe45e039e0" loc="48:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe45e039e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45e03d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efe45dff400" loc="51:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45dff400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe45dff780"/>
        <function-ref name="noAck" scoped="" ref="0x7efe45dff910"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe45dffaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe45e02020" loc="49:../../../../tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe45e02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe45e023a0"/>
        <function-ref name="source" scoped="" ref="0x7efe45e02530"/>
        <function-ref name="address" scoped="" ref="0x7efe45e026c0"/>
        <function-ref name="destination" scoped="" ref="0x7efe45e02850"/>
        <function-ref name="setSource" scoped="" ref="0x7efe45e029e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe45e02b70"/>
        <function-ref name="type" scoped="" ref="0x7efe45e02d00"/>
        <function-ref name="setType" scoped="" ref="0x7efe45e01020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe45e011b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe45e01340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe45e014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe45df94e0" loc="50:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe45df94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe45df9860"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe45df99f0"/>
        <function-ref name="start" scoped="" ref="0x7efe45df9b80"/>
        <function-ref name="stop" scoped="" ref="0x7efe45df9d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe45df7020" loc="52:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe45df7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efe4631a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45df73a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45df7530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45df76c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45df7850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45df79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe45dfce50" loc="49:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe45dfce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45df9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe45df84c0" loc="51:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe45df84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efe4631a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45df8840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45df6940" loc="56:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45df6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45df6cc0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45df6e50"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45df5020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45df51b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45df5340"/>
        <function-ref name="get" scoped="" ref="0x7efe45df54d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45df5660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45df5ca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45df57f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45df5980"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45df5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7efe45df6020" loc="55:../../../../tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7efe45df6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efe4631a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efe45df63a0"/>
        <function-ref name="offset" scoped="" ref="0x7efe45df6530"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efe45df66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe45de92f0" loc="66:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe45de92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe45de9670"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe45de9800"/>
        <function-ref name="start" scoped="" ref="0x7efe45de9990"/>
        <function-ref name="stop" scoped="" ref="0x7efe45de9b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7efe45d816e0" loc="332:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7efe45d816e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45d81a60"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45d81bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7efe45dd48a0" loc="74:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7efe45dd48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe45dd4c20"/>
        <function-ref name="stop" scoped="" ref="0x7efe45dd4db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7efe45db94f0" loc="191:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7efe45db94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45db9870"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45db9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe45deac30" loc="65:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe45deac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45de9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7efe45dd24e0" loc="75:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7efe45dd24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7efe45dd2860"/>
        <function-ref name="flush" scoped="" ref="0x7efe45dd29f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7efe45d85c70" loc="322:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7efe45d85c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45d84020"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45d841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7efe45dd98e0" loc="72:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7efe45dd98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7efe45dd9c60"/>
        <function-ref name="resetSend" scoped="" ref="0x7efe45dd9df0"/>
        <function-ref name="dataReceived" scoped="" ref="0x7efe45de6020"/>
        <function-ref name="resetReceive" scoped="" ref="0x7efe45de61b0"/>
        <function-ref name="putData" scoped="" ref="0x7efe45de6340"/>
        <function-ref name="putDone" scoped="" ref="0x7efe45de64d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7efe45de6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45de68e0" loc="73:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45de68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45de6c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45de6df0"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45ddd020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45ddd1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45ddd340"/>
        <function-ref name="get" scoped="" ref="0x7efe45ddd4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45ddd660"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45dddca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45ddd7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45ddd980"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45dddb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7efe45d7ea00" loc="341:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7efe45d7ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45d7ed80"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45d7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7efe45de2130" loc="67:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7efe45de2130"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7efe45de24b0"/>
        <function-ref name="nextByte" scoped="" ref="0x7efe45de2640"/>
        <function-ref name="startSend" scoped="" ref="0x7efe45de27d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7efe45de2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7efe45ddf5c0" loc="68:../../../../tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efe45ddf5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7efe45ddf940"/>
        <function-ref name="byteReceived" scoped="" ref="0x7efe45ddfad0"/>
        <function-ref name="endPacket" scoped="" ref="0x7efe45ddfc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7efe45cb3020" loc="275:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7efe45cb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45cb33a0"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45cb3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe45cb8de0" loc="51:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe45cb8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efe4631a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45cb71c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45cb7350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45cb74e0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45cb7670"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45cb7800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7efe45cb3800" loc="158:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7efe45cb3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45cb3b80"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45cb3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe45cb86c0" loc="50:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe45cb86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efe4631a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45cb8a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7efe45cb7c20" loc="54:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7efe45cb7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7efe4631a0d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efe45cb6020"/>
        <function-ref name="offset" scoped="" ref="0x7efe45cb61b0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efe45cb6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45cb5920" loc="57:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45cb5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45cb5ca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45cb5e30"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45cb4020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45cb41b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45cb4340"/>
        <function-ref name="get" scoped="" ref="0x7efe45cb44d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45cb4660"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45cb4ca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45cb4980"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45cb47f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45cb4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7efe45cb6e80" loc="56:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7efe45cb6e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7efe45cb5220"/>
        <function-ref name="nextByte" scoped="" ref="0x7efe45cb53b0"/>
        <function-ref name="startSend" scoped="" ref="0x7efe45cb5540"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7efe45cb56d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7efe45cb6590" loc="55:../../../../tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7efe45cb6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7efe45cb6910"/>
        <function-ref name="byteReceived" scoped="" ref="0x7efe45cb6aa0"/>
        <function-ref name="endPacket" scoped="" ref="0x7efe45cb6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7efe45ca1d20" loc="50:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efe45ca1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45cab0e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efe45cab270"/>
        <function-ref name="receive" scoped="" ref="0x7efe45cab400"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efe45cab590"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efe45cab720"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efe45cab8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45caba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7efe45cb1e00" loc="48:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7efe45cb1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7efe45cad1c0"/>
        <function-ref name="resetSend" scoped="" ref="0x7efe45cad350"/>
        <function-ref name="dataReceived" scoped="" ref="0x7efe45cad4e0"/>
        <function-ref name="resetReceive" scoped="" ref="0x7efe45cad670"/>
        <function-ref name="putData" scoped="" ref="0x7efe45cad800"/>
        <function-ref name="putDone" scoped="" ref="0x7efe45cad990"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7efe45cadb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45cabcc0" loc="51:../../../../tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45cabcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45caa0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45caa230"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45caa3c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45caa550"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45caa6e0"/>
        <function-ref name="get" scoped="" ref="0x7efe45caa870"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45caaa00"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45ca01b0"/>
        <function-ref name="set" scoped="" ref="0x7efe45caab90"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45caad20"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45ca0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efe45c84020" loc="6:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efe45c84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45c843a0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efe45c84530"/>
        <function-ref name="receive" scoped="" ref="0x7efe45c846c0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efe45c84850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efe45c86890" loc="5:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efe45c86890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45c86c10"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efe45c86da0"/>
        <function-ref name="receive" scoped="" ref="0x7efe45c85020"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efe45c851b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efe45c85340"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efe45c854d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45c85660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efe45c86080" loc="4:../../../../tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efe45c86080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe45c86400"/>
        <function-ref name="stop" scoped="" ref="0x7efe45c86590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe459dec70" loc="45:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe459dec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe459dc020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe459dc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efe459db440" loc="47:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efe459db440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe459db7c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efe459db950"/>
        <function-ref name="receive" scoped="" ref="0x7efe459dbae0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efe459dbc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efe459da020" loc="49:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe459da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efe459da3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efe459dc440" loc="46:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efe459dc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe459dc7c0"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efe459dc950"/>
        <function-ref name="receive" scoped="" ref="0x7efe459dcae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efe459dcc70"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efe459dce00"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efe459db020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe459db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe459de020" loc="44:../../../../tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe459de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe459de3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe459de530"/>
        <function-ref name="request" scoped="" ref="0x7efe459de6c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe459de850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe459de9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efe45c1add0" loc="42:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45c1add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe45c1c180"/>
        <function-ref name="configure" scoped="" ref="0x7efe45c1c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efe45c19210" loc="44:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efe45c19210"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45c19590"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efe45c19720"/>
        <function-ref name="receive" scoped="" ref="0x7efe45c198b0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efe45c19a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efe45c16600" loc="47:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe45c16600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efe45c16980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efe45c1cb50" loc="43:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efe45c1cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45c1b020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efe45c1b1b0"/>
        <function-ref name="receive" scoped="" ref="0x7efe45c1b340"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efe45c1b4d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efe45c1b660"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efe45c1b7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45c1b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efe45c17370" loc="46:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efe45c17370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45c176f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45c17880"/>
        <function-ref name="request" scoped="" ref="0x7efe45c17a10"/>
        <function-ref name="granted" scoped="" ref="0x7efe45c17ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45c17d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45c1f320" loc="41:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45c1f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45c1f6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45c1f830"/>
        <function-ref name="request" scoped="" ref="0x7efe45c1f9c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45c1fb50"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45c1fce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efe45c12be0" loc="48:../../../../tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe45c12be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45c14020"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45c141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efe45b89e70" loc="44:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45b89e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe45b88240"/>
        <function-ref name="configure" scoped="" ref="0x7efe45b883d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7efe45b87890" loc="46:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7efe45b87890"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45b87c30"/>
        <function-ref name="sendAvail" scoped="" ref="0x7efe45b87dc0"/>
        <function-ref name="receive" scoped="" ref="0x7efe45b86020"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7efe45b861b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7efe45b853e0" loc="49:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe45b853e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efe45b85780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7efe45b85a50" loc="50:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efe45b85a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe45b85dd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe45b84020"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe45b841b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe45b84340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe45b844d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe45b84660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe45b847f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe45b84980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe45b84b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe45b84ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe45b84e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe45b83020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe45b831b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe45b83440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe45b835d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe45b83760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe45b838f0"/>
        <function-ref name="isUart" scoped="" ref="0x7efe45b83a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe45b83c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe45b83da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe45b82020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe45b821b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe45b82340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe45b824d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45b82660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe45b829f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe45b82b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe45b82d10"/>
        <function-ref name="tx" scoped="" ref="0x7efe45b81020"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe45b811b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe45b81340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe45b814d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe45b81660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe45b817f0"/>
        <function-ref name="rx" scoped="" ref="0x7efe45b81980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe45b81b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe45b81ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe45b81e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe45b80020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe45b801b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7efe45b88790" loc="45:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7efe45b88790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45b88b30"/>
        <function-ref name="receivedByte" scoped="" ref="0x7efe45b88cc0"/>
        <function-ref name="receive" scoped="" ref="0x7efe45b88e50"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7efe45b87020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7efe45b871b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7efe45b87340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45b874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efe45b7e020" loc="52:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe45b7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45b7ee30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45b7d800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45b7d340"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45b7dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efe45b865b0" loc="48:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efe45b865b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45b86950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45b86ae0"/>
        <function-ref name="request" scoped="" ref="0x7efe45b86c70"/>
        <function-ref name="granted" scoped="" ref="0x7efe45b86e00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45b85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45b890d0" loc="43:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45b890d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45b89470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45b89600"/>
        <function-ref name="request" scoped="" ref="0x7efe45b89790"/>
        <function-ref name="granted" scoped="" ref="0x7efe45b89920"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45b89ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efe45b805b0" loc="51:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe45b805b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45b80950"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45b80ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45b7c120" loc="53:../../../../tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45b7c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45b7c4a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45b7c630"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45b7c7c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45b7c950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45b7cae0"/>
        <function-ref name="get" scoped="" ref="0x7efe45b7cc70"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45b7ce00"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45b7b4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe45b7b1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45b7b020"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45b7b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efe45b6d860" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe45b6d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45b6dbe0"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45b6dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efe45b70500" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45b70500"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe45b70880"/>
        <function-ref name="stop" scoped="" ref="0x7efe45b70a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efe45b70d30" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe45b70d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe45b730e0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe45b73270"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe45b73400"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe45b73590"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe45b73720"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe45b738b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe45b73a40"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe45b73bd0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe45b73d60"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe45b72020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe45b721b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe45b72340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe45b724d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe45b72760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe45b728f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe45b72a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe45b72c10"/>
        <function-ref name="isUart" scoped="" ref="0x7efe45b72da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe45b6f020"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe45b6f1b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe45b6f340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe45b6f4d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe45b6f660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe45b6f7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45b6f980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe45b6fd10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe45b6e020"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe45b6e1b0"/>
        <function-ref name="tx" scoped="" ref="0x7efe45b6e340"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe45b6e4d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe45b6e660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe45b6e7f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe45b6e980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe45b6eb10"/>
        <function-ref name="rx" scoped="" ref="0x7efe45b6eca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe45b6ee30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe45b6d020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe45b6d1b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe45b6d340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe45b6d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efe45b5f990" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efe45b5f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45b5fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45b5e020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45b5e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45b5e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45b5e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45b5e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45b5e7f0"/>
        <function-ref name="get" scoped="" ref="0x7efe45b5e980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45b5eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45b5eca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45b5ee30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45b5d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45b5d1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45b5d440"/>
        <function-ref name="clr" scoped="" ref="0x7efe45b5d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efe45b63130" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efe45b63130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45b634b0"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45b63640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7efe45b5d990" loc="81:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7efe45b5d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45b5dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45b5c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45b5c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45b5c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45b5c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45b5c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45b5c7f0"/>
        <function-ref name="get" scoped="" ref="0x7efe45b5c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45b5cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45b5cca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45b5ce30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45b5b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45b5b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45b5b440"/>
        <function-ref name="clr" scoped="" ref="0x7efe45b5b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7efe45b5b990" loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7efe45b5b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45b5bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45b5a020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45b5a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45b5a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45b5a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45b5a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45b5a7f0"/>
        <function-ref name="get" scoped="" ref="0x7efe45b5a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45b5ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45b5aca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45b5ae30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45b59020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45b591b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45b59440"/>
        <function-ref name="clr" scoped="" ref="0x7efe45b595d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7efe45b68550" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efe45b68550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe45b688d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe45b68a60"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe45b68bf0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe45b68d80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe45b67020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe45b671b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe45b67340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe45b674d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe45b67660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe45b677f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe45b67980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe45b67b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe45b67ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe45b66020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe45b661b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe45b66340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe45b664d0"/>
        <function-ref name="isUart" scoped="" ref="0x7efe45b66660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe45b667f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe45b66980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe45b66b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe45b66ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe45b66e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe45b65020"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45b651b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe45b65540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe45b656d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe45b65860"/>
        <function-ref name="tx" scoped="" ref="0x7efe45b659f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe45b65b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe45b65d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe45b64020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe45b641b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe45b64340"/>
        <function-ref name="rx" scoped="" ref="0x7efe45b644d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe45b64660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe45b647f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe45b64980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe45b64b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe45b64ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7efe45b6bbc0" loc="74:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45b6bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe45b68020"/>
        <function-ref name="stop" scoped="" ref="0x7efe45b681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7efe45b61990" loc="79:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7efe45b61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45b61d10"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45b60020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45b601b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45b60340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45b604d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45b60660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45b607f0"/>
        <function-ref name="get" scoped="" ref="0x7efe45b60980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45b60b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45b60ca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45b60e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45b5f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45b5f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45b5f440"/>
        <function-ref name="clr" scoped="" ref="0x7efe45b5f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efe45b63a00" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efe45b63a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45b63d80"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45b62020"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45b621b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45b62340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45b624d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45b62660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45b627f0"/>
        <function-ref name="get" scoped="" ref="0x7efe45b62980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45b62b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45b62ca0"/>
        <function-ref name="set" scoped="" ref="0x7efe45b62e30"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45b61020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45b611b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45b61440"/>
        <function-ref name="clr" scoped="" ref="0x7efe45b615d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efe45adc110" loc="43:../../../../tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe45adc110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45adb020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45adb9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45adb4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45adbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7efe45ad6210" loc="43:../../../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7efe45ad6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45ad3090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45ad3a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45ad3550"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45ad2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efe45ac1450" loc="45:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efe45ac1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe45ac17d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45ac1960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe45ac1af0"/>
        <function-ref name="get" scoped="" ref="0x7efe45ac1c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe45ac1e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45ac0020"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45ac01b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45ac0340"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45ac04d0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45ac0660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe45ac07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efe45ad02a0" loc="44:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe45ad02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45ac20d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45ac2a50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45ac2590"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45ac1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe4468e020" loc="43:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4468e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe4468e3a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe4468e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe44687440" loc="48:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44687440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe446877c0"/>
        <function-ref name="configure" scoped="" ref="0x7efe44687950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efe44688c10" loc="46:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe44688c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe44687020"/>
        <function-ref name="txDone" scoped="" ref="0x7efe446871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe4468f340" loc="42:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe4468f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4468f6c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4468f850"/>
        <function-ref name="request" scoped="" ref="0x7efe4468f9e0"/>
        <function-ref name="granted" scoped="" ref="0x7efe4468fb70"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4468fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efe4468d020" loc="45:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe4468d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe4468d3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe4468d530"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe4468d6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe4468d850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe4468d9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe4468db70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe4468dd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe4468b020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe4468b1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe4468b340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe4468b4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe4468b660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe4468b7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe4468ba80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe4468bc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe4468bda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe4468a020"/>
        <function-ref name="isUart" scoped="" ref="0x7efe4468a1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe4468a340"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe4468a4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe4468a660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe4468a7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe4468a980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe4468ab10"/>
        <function-ref name="getMode" scoped="" ref="0x7efe4468aca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe44689220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe446893b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe44689540"/>
        <function-ref name="tx" scoped="" ref="0x7efe446896d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe44689860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe446899f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe44689b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe44689d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe44688020"/>
        <function-ref name="rx" scoped="" ref="0x7efe446881b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe44688340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe446884d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe44688660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe446887f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe44688980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe4468e7c0" loc="44:../../../../tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4468e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe4468eb40"/>
        <function-ref name="userId" scoped="" ref="0x7efe4468ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe45aa4d50" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe45aa4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe45aa3100"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe45aa3290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe45aa2370" loc="45:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45aa2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe45aa26f0"/>
        <function-ref name="configure" scoped="" ref="0x7efe45aa2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efe45aa9cd0" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efe45aa9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45aa50a0"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45aa5230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45aa5a60" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45aa5a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45aa5de0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45aa4020"/>
        <function-ref name="request" scoped="" ref="0x7efe45aa41b0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45aa4340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45aa44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe45aa3590" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45aa3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe45aa3910"/>
        <function-ref name="userId" scoped="" ref="0x7efe45aa3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efe45a8c020" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45a8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe45a8c3a0"/>
        <function-ref name="userId" scoped="" ref="0x7efe45a8c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efe45a9e0d0" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efe45a9e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45a9e470"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45a9e600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7efe45a8d880" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efe45a8d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45a8dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efe45a9ea00" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe45a9ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45a9eda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7efe45a8d0a0" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7efe45a8d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45a8d420"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45a8d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe45a126c0" loc="92:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe45a126c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe45a12a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe45a12bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe45a103e0" loc="96:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45a103e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe45a10780"/>
        <function-ref name="configure" scoped="" ref="0x7efe45a10910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efe45a12e40" loc="93:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe45a12e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45a111e0"/>
        <function-ref name="requested" scoped="" ref="0x7efe45a11370"/>
        <function-ref name="granted" scoped="" ref="0x7efe45a11500"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45a11690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe45a11820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45a147e0" loc="91:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45a147e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45a14b80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45a14d10"/>
        <function-ref name="request" scoped="" ref="0x7efe45a12020"/>
        <function-ref name="granted" scoped="" ref="0x7efe45a121b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45a12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe45a11a70" loc="94:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45a11a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe45a11df0"/>
        <function-ref name="userId" scoped="" ref="0x7efe45a10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe4460b3b0" loc="44:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe4460b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe4460b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efe4460b9c0" loc="45:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efe4460b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efe4460bd40"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efe4460a020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efe4460a1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efe4460a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe44607a60" loc="55:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe44607a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe44607e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe44606020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe44605790" loc="60:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44605790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe44605b30"/>
        <function-ref name="configure" scoped="" ref="0x7efe44605cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efe44604020" loc="61:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efe44604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efe446043a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efe44604530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efe446046c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efe44604850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efe44606270" loc="56:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe44606270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe446065f0"/>
        <function-ref name="requested" scoped="" ref="0x7efe44606780"/>
        <function-ref name="granted" scoped="" ref="0x7efe44606910"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe44606aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe44606c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe44604aa0" loc="62:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe44604aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe44604e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe44603020"/>
        <function-ref name="led1On" scoped="" ref="0x7efe446031b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe44603340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe446034d0"/>
        <function-ref name="get" scoped="" ref="0x7efe44603660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe446037f0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe44603e30"/>
        <function-ref name="set" scoped="" ref="0x7efe44603b10"/>
        <function-ref name="led2On" scoped="" ref="0x7efe44603980"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe44603ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe44608c80" loc="54:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe44608c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe446070a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe44607230"/>
        <function-ref name="request" scoped="" ref="0x7efe446073c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe44607550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe446076e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe44606e80" loc="57:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe44606e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe44605220"/>
        <function-ref name="userId" scoped="" ref="0x7efe446053b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efe44602160" loc="75:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efe44602160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe446024e0"/>
        <function-ref name="runTask" scoped="" ref="0x7efe44602670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efe45a0c780" loc="72:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efe45a0c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efe45a0cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efe45a0cd50" loc="73:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe45a0cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe459f5100"/>
        <function-ref name="requested" scoped="" ref="0x7efe459f5290"/>
        <function-ref name="granted" scoped="" ref="0x7efe459f5420"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe459f55b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe459f5740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efe45a0c020" loc="70:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe45a0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe45a0c3a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe45a0c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efe459f5990" loc="74:../../../../tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe459f5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe459f5d10"/>
        <function-ref name="userId" scoped="" ref="0x7efe459f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7efe445d10e0" loc="62:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7efe445d10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7efe445d1460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7efe445d16b0" loc="63:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe445d16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe445d1a30"/>
        <function-ref name="requested" scoped="" ref="0x7efe445d1bc0"/>
        <function-ref name="granted" scoped="" ref="0x7efe445d1d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe445d0020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe445d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7efe445d2900" loc="60:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7efe445d2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe445d2c80"/>
        <function-ref name="stop" scoped="" ref="0x7efe445d2e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efe445d0400" loc="64:../../../../tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe445d0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe445d0780"/>
        <function-ref name="userId" scoped="" ref="0x7efe445d0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7efe459d6920" loc="3:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7efe459d6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efe459d6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efe459d5020" loc="4:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe459d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe459d53a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe459d5530"/>
        <function-ref name="request" scoped="" ref="0x7efe459d56c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe459d5850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe459d59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efe459d60c0" loc="2:../../../../tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efe459d60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe459d6440"/>
        <function-ref name="stop" scoped="" ref="0x7efe459d65d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7efe459c48c0" loc="47:../../../../tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7efe459c48c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7efe459c4c40"/>
        <function-ref name="offset" scoped="" ref="0x7efe459c4dd0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7efe459c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe459b3c70" loc="61:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe459b3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe459b0020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe459b01b0"/>
        <function-ref name="start" scoped="" ref="0x7efe459b0340"/>
        <function-ref name="stop" scoped="" ref="0x7efe459b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe459b0ca0" loc="63:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe459b0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe459af0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe459af230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe459af3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe459af550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe459af6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7efe459aec00" loc="65:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7efe459aec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe459ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe459ad2b0" loc="67:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe459ad2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe459ad630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe459ad7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe459ad950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe459adae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe459adc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efe459a09e0" loc="70:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe459a09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe459a2020"/>
        <function-ref name="clear" scoped="" ref="0x7efe459a2750"/>
        <function-ref name="isValid" scoped="" ref="0x7efe459a9890"/>
        <function-ref name="set" scoped="" ref="0x7efe459a2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efe459925b0" loc="72:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efe459925b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efe45992930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efe45992ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efe45992c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efe45992de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe459ae020" loc="64:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe459ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe459ae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efe459ab800" loc="69:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe459ab800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe459abb80"/>
        <function-ref name="noAck" scoped="" ref="0x7efe459abd10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe459aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe459ac020" loc="68:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe459ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe459ac3a0"/>
        <function-ref name="source" scoped="" ref="0x7efe459ac530"/>
        <function-ref name="address" scoped="" ref="0x7efe459ac6c0"/>
        <function-ref name="destination" scoped="" ref="0x7efe459ac850"/>
        <function-ref name="setSource" scoped="" ref="0x7efe459ac9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe459acb70"/>
        <function-ref name="type" scoped="" ref="0x7efe459acd00"/>
        <function-ref name="setType" scoped="" ref="0x7efe459ab020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe459ab1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe459ab340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe459ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efe4599faf0" loc="71:../../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efe4599faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe4599c0d0"/>
        <function-ref name="clear" scoped="" ref="0x7efe4599c800"/>
        <function-ref name="isValid" scoped="" ref="0x7efe4599e970"/>
        <function-ref name="set" scoped="" ref="0x7efe4599b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe459872f0" loc="55:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe459872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe45987670"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe45987800"/>
        <function-ref name="start" scoped="" ref="0x7efe45987990"/>
        <function-ref name="stop" scoped="" ref="0x7efe45987b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efe4597f2c0" loc="64:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4597f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe4597f640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe4597f7d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe4597f960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe4597faf0"/>
        <function-ref name="setCca" scoped="" ref="0x7efe4597fc80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe4597fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7efe4596a1d0" loc="67:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7efe4596a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7efe4596a650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe45981020" loc="60:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe45981020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe459813a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe45981530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe459816c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45981850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe459819e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe45986320" loc="56:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe45986320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe459866a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45986830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe459869c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45986b50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45986ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7efe459831d0" loc="58:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7efe459831d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45983550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efe459770f0" loc="61:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe459770f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe45977470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe45977600"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe45977790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe45977920"/>
        <function-ref name="getPower" scoped="" ref="0x7efe45977ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe45977c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efe45974170" loc="65:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efe45974170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efe459744f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efe45974680"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efe45974810"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efe459749a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe45984510" loc="57:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe45984510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45984890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efe45980020" loc="62:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe459803a0"/>
        <function-ref name="noAck" scoped="" ref="0x7efe45980530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe459806c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efe45961430" loc="66:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efe45961430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efe459617b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7efe45961940"/>
        <function-ref name="getRetries" scoped="" ref="0x7efe45961ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efe45961c60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efe45961df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe45983800" loc="59:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe45983800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe45983b80"/>
        <function-ref name="source" scoped="" ref="0x7efe45983d10"/>
        <function-ref name="address" scoped="" ref="0x7efe45982020"/>
        <function-ref name="destination" scoped="" ref="0x7efe459821b0"/>
        <function-ref name="setSource" scoped="" ref="0x7efe45982340"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe459824d0"/>
        <function-ref name="type" scoped="" ref="0x7efe45982660"/>
        <function-ref name="setType" scoped="" ref="0x7efe459827f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe45982980"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe45982b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe45982ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efe45973170" loc="63:../../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe45973170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efe459734f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe4595c020" loc="43:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe4595c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe4595c3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe4595c530"/>
        <function-ref name="start" scoped="" ref="0x7efe4595c6c0"/>
        <function-ref name="stop" scoped="" ref="0x7efe4595c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efe45955080" loc="55:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe45955080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efe45955400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efe459542e0" loc="57:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efe459542e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efe45954660"/>
        <function-ref name="setRetries" scoped="" ref="0x7efe459547f0"/>
        <function-ref name="getRetries" scoped="" ref="0x7efe45954980"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efe45954b10"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efe45954ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efe45957670" loc="53:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe45957670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe459579f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe45957b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe45957d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe45956020"/>
        <function-ref name="getPower" scoped="" ref="0x7efe459561b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe45956340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efe45958170" loc="50:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efe45958170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe459584f0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45958680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45958810"/>
        <function-ref name="cancel" scoped="" ref="0x7efe459589a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45958b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efe45955700" loc="56:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efe45955700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efe45955a80"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efe45955c10"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efe45955da0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efe45954020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7efe4595ad30" loc="47:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7efe4595ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe459590e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7efe45956670" loc="54:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe45956670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe459569f0"/>
        <function-ref name="noAck" scoped="" ref="0x7efe45956b80"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe45956d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe4595b1d0" loc="45:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe4595b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4595b550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4595b6e0"/>
        <function-ref name="request" scoped="" ref="0x7efe4595b870"/>
        <function-ref name="granted" scoped="" ref="0x7efe4595ba00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4595bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7efe4595a020" loc="46:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7efe4595a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe4595a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe4595a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe4595a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe4595a850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4595a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efe45959420" loc="48:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efe45959420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe459597a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe45959930"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45959ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45959c50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe45959de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efe45957020" loc="51:../../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efe45957020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe459573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe459539f0" loc="44:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe459539f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe45953d70"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe45950020"/>
        <function-ref name="start" scoped="" ref="0x7efe459501b0"/>
        <function-ref name="stop" scoped="" ref="0x7efe45950340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efe4594f990" loc="47:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4594f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe4594fd10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe4594e020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe4594e1b0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe4594e340"/>
        <function-ref name="setCca" scoped="" ref="0x7efe4594e4d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe4594e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe45950600" loc="45:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe45950600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45950980"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe45950b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45950ca0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45950e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4594f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe4594f300" loc="46:../../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe4594f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe4594f680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe4594b690" loc="39:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe4594b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe4594ba10"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe4594bba0"/>
        <function-ref name="start" scoped="" ref="0x7efe4594bd30"/>
        <function-ref name="stop" scoped="" ref="0x7efe45949020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efe45948020" loc="41:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efe45948020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe459483a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe45948530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe459486c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe45948850"/>
        <function-ref name="setCca" scoped="" ref="0x7efe459489e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe45948b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7efe4593e060" loc="47:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7efe4593e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe4593e3e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe4593e570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe4593e700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe4593e890"/>
        <function-ref name="setCca" scoped="" ref="0x7efe4593ea20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe4593ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efe45935330" loc="50:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe45935330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe459356b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe45935840"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe459359d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe45935b60"/>
        <function-ref name="getPower" scoped="" ref="0x7efe45935cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe45935e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7efe459372a0" loc="46:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7efe459372a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45937620"/>
        <function-ref name="cancel" scoped="" ref="0x7efe459377b0"/>
        <function-ref name="modify" scoped="" ref="0x7efe45937940"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45937ad0"/>
        <function-ref name="resend" scoped="" ref="0x7efe45937c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe459492e0" loc="40:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe459492e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45949660"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe459497f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe45949980"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45949b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45949ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efe45934420" loc="48:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efe45934420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efe459347a0"/>
        <function-ref name="rand32" scoped="" ref="0x7efe45934930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7efe459466f0" loc="45:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7efe459466f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe45946a70"/>
        <function-ref name="stop" scoped="" ref="0x7efe45946c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efe4592d920" loc="51:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe4592d920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe4592dca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe4592de30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe45931020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7efe4593f3f0" loc="44:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efe4593f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efe4593f770"/>
        <function-ref name="rfOff" scoped="" ref="0x7efe4593f900"/>
        <function-ref name="rxOn" scoped="" ref="0x7efe4593fa90"/>
        <function-ref name="startVReg" scoped="" ref="0x7efe4593fc20"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efe4593fdb0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efe45946020"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efe459461b0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efe45946340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45934bf0" loc="49:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45934bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45936020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe459361b0"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45936340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe459364d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45936660"/>
        <function-ref name="get" scoped="" ref="0x7efe459367f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45936980"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45935020"/>
        <function-ref name="set" scoped="" ref="0x7efe45936b10"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45936ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45936e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7efe45948e60" loc="43:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45948e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45947210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe459473a0"/>
        <function-ref name="request" scoped="" ref="0x7efe45947530"/>
        <function-ref name="granted" scoped="" ref="0x7efe459476c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45947850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7efe45930110" loc="52:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7efe45930110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe45930590"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe45930720"/>
        <function-ref name="isState" scoped="" ref="0x7efe459308b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe45930a40"/>
        <function-ref name="requestState" scoped="" ref="0x7efe45930bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7efe45930d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7efe45923b70" loc="76:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7efe45923b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45921020"/>
        <function-ref name="runTask" scoped="" ref="0x7efe459211b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7efe45924ba0" loc="75:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7efe45924ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45923020"/>
        <function-ref name="runTask" scoped="" ref="0x7efe459231b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7efe45925c20" loc="74:../../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7efe45925c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45924020"/>
        <function-ref name="runTask" scoped="" ref="0x7efe459241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7efe458cbdc0" loc="45:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efe458cbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efe458d7180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efe458d7310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efe458d74a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7efe458d7630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efe458d77c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efe458d7950"/>
        <function-ref name="setChannel" scoped="" ref="0x7efe458d7ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efe458d7c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efe458d7e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efe458d6020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efe458d61b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efe458d6340"/>
        <function-ref name="sync" scoped="" ref="0x7efe458d64d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7efe458d6760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efe458d68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7efe458c80c0" loc="47:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7efe458c80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe458c8cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7efe458c7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7efe458d6bf0" loc="46:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efe458d6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efe458ca020"/>
        <function-ref name="rfOff" scoped="" ref="0x7efe458ca1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7efe458ca340"/>
        <function-ref name="startVReg" scoped="" ref="0x7efe458ca4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efe458ca660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efe458ca7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efe458ca980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efe458cab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe458db950" loc="44:../../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe458db950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe458dbcd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe458dbe60"/>
        <function-ref name="request" scoped="" ref="0x7efe458d8020"/>
        <function-ref name="granted" scoped="" ref="0x7efe458d81b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe458d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7efe458c1970" loc="46:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efe458c1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efe458c1cf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efe458c1e80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efe458c0030"/>
        <function-ref name="syncDone" scoped="" ref="0x7efe458c01c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efe458c0350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efe458c04e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efe458c0670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efe458c0800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efe458c0990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efe458c0b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efe458c0cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efe458c0e40"/>
        <function-ref name="sync" scoped="" ref="0x7efe458bf020"/>
        <function-ref name="getChannel" scoped="" ref="0x7efe458bf2b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efe458bf440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7efe458988e0" loc="66:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efe458988e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45898c60"/>
        <function-ref name="write" scoped="" ref="0x7efe45898df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7efe458ba020" loc="50:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efe458ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efe458ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7efe458b2d90" loc="52:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7efe458b2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe458b0670"/>
        <function-ref name="fired" scoped="" ref="0x7efe458b85d0"/>
        <function-ref name="startAt" scoped="" ref="0x7efe458b0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe458b8a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe458b0b30"/>
        <function-ref name="start" scoped="" ref="0x7efe458b9bc0"/>
        <function-ref name="stop" scoped="" ref="0x7efe458b8110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7efe4589c5f0" loc="64:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe4589c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4589c970"/>
        <function-ref name="write" scoped="" ref="0x7efe4589cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7efe458ae380" loc="54:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7efe458ae380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe458ae700"/>
        <function-ref name="isInput" scoped="" ref="0x7efe458ae890"/>
        <function-ref name="toggle" scoped="" ref="0x7efe458aea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe458aebb0"/>
        <function-ref name="get" scoped="" ref="0x7efe458aed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe458ad020"/>
        <function-ref name="set" scoped="" ref="0x7efe458ad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe458ad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7efe458beb40" loc="48:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7efe458beb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe458bd750"/>
        <function-ref name="readDone" scoped="" ref="0x7efe458bdbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7efe45886820" loc="126:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7efe45886820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45886ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45886d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7efe458971c0" loc="67:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efe458971c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45897540"/>
        <function-ref name="write" scoped="" ref="0x7efe458976d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7efe45897a70" loc="68:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efe45897a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45897df0"/>
        <function-ref name="write" scoped="" ref="0x7efe45896020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7efe458a13d0" loc="62:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efe458a13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe458a1750"/>
        <function-ref name="write" scoped="" ref="0x7efe458a18e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7efe458a3810" loc="57:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efe458a3810"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efe458a3b90"/>
        <function-ref name="changed" scoped="" ref="0x7efe458a3d20"/>
        <function-ref name="amGroup" scoped="" ref="0x7efe458aa020"/>
        <function-ref name="setAddress" scoped="" ref="0x7efe458aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efe458af060" loc="53:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efe458af060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe458af3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe458af570"/>
        <function-ref name="toggle" scoped="" ref="0x7efe458af700"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe458af890"/>
        <function-ref name="get" scoped="" ref="0x7efe458afa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe458afbb0"/>
        <function-ref name="set" scoped="" ref="0x7efe458afd40"/>
        <function-ref name="clr" scoped="" ref="0x7efe458ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7efe45895120" loc="71:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe45895120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe458956a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7efe458ad6a0" loc="55:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7efe458ad6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe458ada20"/>
        <function-ref name="isInput" scoped="" ref="0x7efe458adbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe458add40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe458ac020"/>
        <function-ref name="get" scoped="" ref="0x7efe458ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe458ac340"/>
        <function-ref name="set" scoped="" ref="0x7efe458ac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe458ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe458c2510" loc="44:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe458c2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe458c2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7efe45898020" loc="65:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe458983a0"/>
        <function-ref name="write" scoped="" ref="0x7efe45898530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7efe45895a40" loc="72:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efe45895a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45895dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efe458941d0" loc="74:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efe458941d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45894550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe458946e0"/>
        <function-ref name="request" scoped="" ref="0x7efe45894870"/>
        <function-ref name="granted" scoped="" ref="0x7efe45894a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45894b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7efe45892d90" loc="76:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7efe45892d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45891180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45891310"/>
        <function-ref name="request" scoped="" ref="0x7efe458914a0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45891630"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe458917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7efe458bf740" loc="47:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7efe458bf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7efe458bfac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7efe458bfc50"/>
        <function-ref name="rxOn" scoped="" ref="0x7efe458bfde0"/>
        <function-ref name="startVReg" scoped="" ref="0x7efe458be020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7efe458be1b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7efe458be340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7efe458be4d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7efe458be660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7efe458a1c80" loc="63:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efe458a1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4589c0a0"/>
        <function-ref name="write" scoped="" ref="0x7efe4589c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7efe4589ab00" loc="61:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efe4589ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4589ae80"/>
        <function-ref name="write" scoped="" ref="0x7efe458a1030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7efe458932b0" loc="69:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efe458932b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45893630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45891a80" loc="78:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45891a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45891e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45890020"/>
        <function-ref name="led1On" scoped="" ref="0x7efe458901b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45890340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe458904d0"/>
        <function-ref name="get" scoped="" ref="0x7efe45890660"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe458907f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45890e30"/>
        <function-ref name="set" scoped="" ref="0x7efe45890980"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45890b10"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45890ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7efe45887940" loc="125:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7efe45887940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45887cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45887e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe458c2b80" loc="45:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe458c2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe458c1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe458c11b0"/>
        <function-ref name="request" scoped="" ref="0x7efe458c1340"/>
        <function-ref name="granted" scoped="" ref="0x7efe458c14d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe458c1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7efe458a6520" loc="60:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efe458a6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe458a68a0"/>
        <function-ref name="write" scoped="" ref="0x7efe458a6a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7efe4589da90" loc="59:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efe4589da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe458a6020"/>
        <function-ref name="write" scoped="" ref="0x7efe458a61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7efe458ab0e0" loc="56:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7efe458ab0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe458ab460"/>
        <function-ref name="disable" scoped="" ref="0x7efe458ab5f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efe458ab780"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efe458ab910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7efe45892020" loc="75:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7efe45892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe458923a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45892530"/>
        <function-ref name="request" scoped="" ref="0x7efe458926c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45892850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe458929e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7efe458939c0" loc="70:../../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efe458939c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45893d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe458107e0" loc="45:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe458107e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45810b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7efe4580d220" loc="46:../../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7efe4580d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe4580bb30"/>
        <function-ref name="fired" scoped="" ref="0x7efe4580ca60"/>
        <function-ref name="startAt" scoped="" ref="0x7efe4580b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe4580b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe45809020"/>
        <function-ref name="start" scoped="" ref="0x7efe4580c090"/>
        <function-ref name="stop" scoped="" ref="0x7efe4580c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe45808a20" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe45808a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45808da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7efe458072e0" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7efe458072e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe4572bb30"/>
        <function-ref name="fired" scoped="" ref="0x7efe4572cae0"/>
        <function-ref name="startAt" scoped="" ref="0x7efe4572b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe4572b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe45729020"/>
        <function-ref name="start" scoped="" ref="0x7efe4572c110"/>
        <function-ref name="stop" scoped="" ref="0x7efe4572c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe445a8690" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe445a8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe445a5020"/>
        <function-ref name="fired" scoped="" ref="0x7efe445a6020"/>
        <function-ref name="startAt" scoped="" ref="0x7efe445a69a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe445a64e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe445a54e0"/>
        <function-ref name="start" scoped="" ref="0x7efe445a75b0"/>
        <function-ref name="stop" scoped="" ref="0x7efe445a7ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe445aadf0" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe445aadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe445a81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe445a1870" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe445a1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe4459d090"/>
        <function-ref name="fired" scoped="" ref="0x7efe4459e090"/>
        <function-ref name="startAt" scoped="" ref="0x7efe4459ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe4459e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe4459d550"/>
        <function-ref name="start" scoped="" ref="0x7efe445a06a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe445a0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe445a1020" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe445a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe445a13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efe44587020" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efe44587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe445873a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe44587530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe445876c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe44587850"/>
        <function-ref name="fired" scoped="" ref="0x7efe445879e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efe4458a570" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efe4458a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe4458a8f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe4458aa80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe4458ac10"/>
        <function-ref name="get" scoped="" ref="0x7efe4458ada0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe44589020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe445891b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe44589340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe445894d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe44589660"/>
        <function-ref name="setMode" scoped="" ref="0x7efe445897f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe44589980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efe44589c10" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe44589c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe44588020"/>
        <function-ref name="getControl" scoped="" ref="0x7efe445881b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe44588340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe445884d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe44588660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe445887f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe44588980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe44588b10"/>
        <function-ref name="setControl" scoped="" ref="0x7efe44588ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efe457e5ba0" loc="52:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efe457e5ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe457e4020"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe457e41b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe457e4340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe457e44d0"/>
        <function-ref name="fired" scoped="" ref="0x7efe457e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efe457e94d0" loc="50:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efe457e94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe457e9850"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe457e99e0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe457e9b70"/>
        <function-ref name="get" scoped="" ref="0x7efe457e9d00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe457e8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe457e81b0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe457e8340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe457e84d0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe457e8660"/>
        <function-ref name="setMode" scoped="" ref="0x7efe457e87f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe457e8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efe457e6280" loc="51:../../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe457e6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe457e6600"/>
        <function-ref name="getControl" scoped="" ref="0x7efe457e6790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe457e6920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe457e6ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe457e6c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe457e6dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe457e5020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe457e51b0"/>
        <function-ref name="setControl" scoped="" ref="0x7efe457e5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efe4457eda0" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efe4457eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe4457d180"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe4457d310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe4457d4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe4457d630"/>
        <function-ref name="fired" scoped="" ref="0x7efe4457d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efe445814c0" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efe445814c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44581840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe445819d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe44581b60"/>
        <function-ref name="get" scoped="" ref="0x7efe44581cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe44581e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4457f030"/>
        <function-ref name="getMode" scoped="" ref="0x7efe4457f1c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4457f350"/>
        <function-ref name="overflow" scoped="" ref="0x7efe4457f4e0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe4457f670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe4457f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe44584340" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe44584340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44582ba0"/>
        <function-ref name="fired" scoped="" ref="0x7efe44583b80"/>
        <function-ref name="startAt" scoped="" ref="0x7efe44582550"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44582090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe44581090"/>
        <function-ref name="start" scoped="" ref="0x7efe445831b0"/>
        <function-ref name="stop" scoped="" ref="0x7efe445836c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44585a30" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44585a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44585db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efe4457fa90" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe4457fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe4457fe10"/>
        <function-ref name="getControl" scoped="" ref="0x7efe4457e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe4457e1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe4457e340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe4457e4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe4457e660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe4457e7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe4457e980"/>
        <function-ref name="setControl" scoped="" ref="0x7efe4457eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efe45794020" loc="43:../../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe45794020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45794e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45793800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45793340"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45793cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efe45771950" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7efe45771950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45770780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4576f150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45770c40"/>
        <function-ref name="overflow" scoped="" ref="0x7efe4576f610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efe4578e5f0" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe4578e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45773430"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45773db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe457738f0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe457712a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe4459ba90" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe4459ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe445972e0"/>
        <function-ref name="fired" scoped="" ref="0x7efe445992e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efe44599c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe445997a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe445977a0"/>
        <function-ref name="start" scoped="" ref="0x7efe4459a8d0"/>
        <function-ref name="stop" scoped="" ref="0x7efe4459ade0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efe44594210" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efe44594210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44592b30"/>
        <function-ref name="fired" scoped="" ref="0x7efe44593a60"/>
        <function-ref name="startAt" scoped="" ref="0x7efe445924e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44592020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe44590020"/>
        <function-ref name="start" scoped="" ref="0x7efe44593090"/>
        <function-ref name="stop" scoped="" ref="0x7efe445935a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efe44597e10" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe44597e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44596ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe44595670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe445951b0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe44595b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7efe457246a0" loc="44:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7efe457246a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45724a20"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45724bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45724d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45723020"/>
        <function-ref name="get" scoped="" ref="0x7efe457231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45723340"/>
        <function-ref name="set" scoped="" ref="0x7efe457234d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45723660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7efe457239d0" loc="45:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7efe457239d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45723d50"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45722020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe457221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45722340"/>
        <function-ref name="get" scoped="" ref="0x7efe457224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45722660"/>
        <function-ref name="set" scoped="" ref="0x7efe457227f0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45722980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7efe45722ce0" loc="46:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7efe45722ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe457210a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45721230"/>
        <function-ref name="toggle" scoped="" ref="0x7efe457213c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45721550"/>
        <function-ref name="get" scoped="" ref="0x7efe457216e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45721870"/>
        <function-ref name="set" scoped="" ref="0x7efe45721a00"/>
        <function-ref name="clr" scoped="" ref="0x7efe45721b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7efe45725370" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efe45725370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe457256f0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45725880"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45725a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45725ba0"/>
        <function-ref name="get" scoped="" ref="0x7efe45725d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45724020"/>
        <function-ref name="set" scoped="" ref="0x7efe457241b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45724340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7efe4571f380" loc="48:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7efe4571f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4571f700"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4571f890"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4571fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4571fbb0"/>
        <function-ref name="get" scoped="" ref="0x7efe4571fd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4571e020"/>
        <function-ref name="set" scoped="" ref="0x7efe4571e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4571e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7efe457260e0" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7efe457260e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45726460"/>
        <function-ref name="isInput" scoped="" ref="0x7efe457265f0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45726780"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45726910"/>
        <function-ref name="get" scoped="" ref="0x7efe45726aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45726c30"/>
        <function-ref name="set" scoped="" ref="0x7efe45726dc0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45725020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7efe45720020" loc="47:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7efe45720020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe457203a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45720530"/>
        <function-ref name="toggle" scoped="" ref="0x7efe457206c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45720850"/>
        <function-ref name="get" scoped="" ref="0x7efe457209e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45720b70"/>
        <function-ref name="set" scoped="" ref="0x7efe45720d00"/>
        <function-ref name="clr" scoped="" ref="0x7efe4571f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe4571c930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe4571c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4571ccb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4571ce40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4571b020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4571b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4571b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4571b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4571b660"/>
        <function-ref name="get" scoped="" ref="0x7efe4571b7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4571b980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4571bb10"/>
        <function-ref name="set" scoped="" ref="0x7efe4571bca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4571be30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4571a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4571a2b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4571a440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe4571d710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe4571d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4571da90"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4571dc20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4571ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4571c020"/>
        <function-ref name="get" scoped="" ref="0x7efe4571c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4571c340"/>
        <function-ref name="set" scoped="" ref="0x7efe4571c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4571c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45717480" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45717480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45717800"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45717990"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45717b20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45717cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45717e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45715020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe457151b0"/>
        <function-ref name="get" scoped="" ref="0x7efe45715340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe457154d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45715660"/>
        <function-ref name="set" scoped="" ref="0x7efe457157f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45715980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45715b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45715da0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45714020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe457181b0" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe457181b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45718530"/>
        <function-ref name="isInput" scoped="" ref="0x7efe457186c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45718850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe457189e0"/>
        <function-ref name="get" scoped="" ref="0x7efe45718b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45718d00"/>
        <function-ref name="set" scoped="" ref="0x7efe45717020"/>
        <function-ref name="clr" scoped="" ref="0x7efe457171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45711020" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45711020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe457113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45711530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe457116c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45711850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe457119e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45711b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45711d00"/>
        <function-ref name="get" scoped="" ref="0x7efe45710020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe457101b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45710340"/>
        <function-ref name="set" scoped="" ref="0x7efe457104d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45710660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe457107f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45710a80"/>
        <function-ref name="clr" scoped="" ref="0x7efe45710c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe45713d70" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe45713d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45712180"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45712310"/>
        <function-ref name="toggle" scoped="" ref="0x7efe457124a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45712630"/>
        <function-ref name="get" scoped="" ref="0x7efe457127c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45712950"/>
        <function-ref name="set" scoped="" ref="0x7efe45712ae0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45712c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe4570dde0" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe4570dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4570c180"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4570c310"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4570c4a0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4570c630"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4570c7c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4570c950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4570cae0"/>
        <function-ref name="get" scoped="" ref="0x7efe4570cc70"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4570ce00"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4570b020"/>
        <function-ref name="set" scoped="" ref="0x7efe4570b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4570b340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4570b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4570b760"/>
        <function-ref name="clr" scoped="" ref="0x7efe4570b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe4570eb70" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe4570eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4570d020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4570d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4570d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4570d4d0"/>
        <function-ref name="get" scoped="" ref="0x7efe4570d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4570d7f0"/>
        <function-ref name="set" scoped="" ref="0x7efe4570d980"/>
        <function-ref name="clr" scoped="" ref="0x7efe4570db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45708930" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45708930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45708cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45708e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45707020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe457071b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45707340"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe457074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45707660"/>
        <function-ref name="get" scoped="" ref="0x7efe457077f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45707980"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45707b10"/>
        <function-ref name="set" scoped="" ref="0x7efe45707ca0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45707e30"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45706020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe457062b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45706440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe45709710" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe45709710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45709a90"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45709c20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45709db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45708020"/>
        <function-ref name="get" scoped="" ref="0x7efe457081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45708340"/>
        <function-ref name="set" scoped="" ref="0x7efe457084d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45708660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45703480" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45703480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45703800"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45703990"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45703b20"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45703cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45703e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45702020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe457021b0"/>
        <function-ref name="get" scoped="" ref="0x7efe45702340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe457024d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45702660"/>
        <function-ref name="set" scoped="" ref="0x7efe457027f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45702980"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45702b10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45702da0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45701020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe457041b0" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe457041b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45704530"/>
        <function-ref name="isInput" scoped="" ref="0x7efe457046c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45704850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe457049e0"/>
        <function-ref name="get" scoped="" ref="0x7efe45704b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45704d00"/>
        <function-ref name="set" scoped="" ref="0x7efe45703020"/>
        <function-ref name="clr" scoped="" ref="0x7efe457031b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe456fd020" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe456fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe456fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe456fd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe456fd6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe456fd850"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe456fd9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe456fdb70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe456fdd00"/>
        <function-ref name="get" scoped="" ref="0x7efe456fc020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe456fc1b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe456fc340"/>
        <function-ref name="set" scoped="" ref="0x7efe456fc4d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe456fc660"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe456fc7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe456fca80"/>
        <function-ref name="clr" scoped="" ref="0x7efe456fcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe45700d70" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe45700d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe456fe180"/>
        <function-ref name="isInput" scoped="" ref="0x7efe456fe310"/>
        <function-ref name="toggle" scoped="" ref="0x7efe456fe4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe456fe630"/>
        <function-ref name="get" scoped="" ref="0x7efe456fe7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe456fe950"/>
        <function-ref name="set" scoped="" ref="0x7efe456feae0"/>
        <function-ref name="clr" scoped="" ref="0x7efe456fec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7efe456e55a0" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7efe456e55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efe456e5920"/>
        <function-ref name="disable" scoped="" ref="0x7efe456e5ab0"/>
        <function-ref name="captured" scoped="" ref="0x7efe456e5c40"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efe456e5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7efe456e9210" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7efe456e9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe456e9590"/>
        <function-ref name="disable" scoped="" ref="0x7efe456e9720"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efe456e98b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efe456e9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7efe456e9e30" loc="44:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efe456e9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe456e81e0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456e8370"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efe456e8500"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efe456e8690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7efe456cdda0" loc="42:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7efe456cdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe456cc180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7efe456cc310"/>
        <function-ref name="captured" scoped="" ref="0x7efe456cc4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe456cc630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe456cc7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7efe456cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7efe456ce020" loc="40:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7efe456ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efe456ce3a0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456ce530"/>
        <function-ref name="captured" scoped="" ref="0x7efe456ce6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efe456ce850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efe456ceae0" loc="41:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe456ceae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe456cee60"/>
        <function-ref name="getControl" scoped="" ref="0x7efe456cd020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe456cd1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe456cd340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe456cd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe456cd660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe456cd7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe456cd980"/>
        <function-ref name="setControl" scoped="" ref="0x7efe456cdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7efe456ccc20" loc="43:../../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe456ccc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe456cb020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe456cb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe456cb340"/>
        <function-ref name="toggle" scoped="" ref="0x7efe456cb4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe456cb660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe456cb7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe456cb980"/>
        <function-ref name="get" scoped="" ref="0x7efe456cbb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe456cbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe456cbe30"/>
        <function-ref name="set" scoped="" ref="0x7efe456ca020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe456ca1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe456ca340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe456ca5d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe456ca760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efe456bdc40" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efe456bdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456bc020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456bc1b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456bc340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456bc4d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456bc660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456bc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efe456b3bc0" loc="58:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efe456b3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b1020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b11b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b1340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b14d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b1660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efe456babc0" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efe456babc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b9020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b91b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b9340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b94d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b9660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efe456b8bc0" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efe456b8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b7020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b71b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b7340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b74d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b7660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efe456c3d20" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efe456c3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456be0e0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456be270"/>
        <function-ref name="disable" scoped="" ref="0x7efe456be400"/>
        <function-ref name="edge" scoped="" ref="0x7efe456be590"/>
        <function-ref name="enable" scoped="" ref="0x7efe456be720"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456be8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efe456b5bc0" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efe456b5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b40a0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b4230"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b43c0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b4550"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b46e0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efe456bcbc0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efe456bcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456bb020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456bb1b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456bb340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456bb4d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456bb660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efe456b1bc0" loc="59:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efe456b1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b0020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b01b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b0340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b04d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b0660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efe456bfe70" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efe456bfe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456c4220"/>
        <function-ref name="fired" scoped="" ref="0x7efe456c43b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456c4540"/>
        <function-ref name="edge" scoped="" ref="0x7efe456c46d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456c4860"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456c49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efe456b7bc0" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efe456b7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b6020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b61b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b6340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b64d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b6660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efe456bec80" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efe456bec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456bd0a0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456bd230"/>
        <function-ref name="disable" scoped="" ref="0x7efe456bd3c0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456bd550"/>
        <function-ref name="enable" scoped="" ref="0x7efe456bd6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456bd870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efe456b4c40" loc="57:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efe456b4c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b3020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b31b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b3340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b34d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b3660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efe456bbbc0" loc="48:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efe456bbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456ba020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456ba1b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456ba340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456ba4d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456ba660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efe456b9bc0" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efe456b9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b8020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b81b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b8340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b84d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b8660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efe456c4dc0" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efe456c4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456c3180"/>
        <function-ref name="fired" scoped="" ref="0x7efe456c3310"/>
        <function-ref name="disable" scoped="" ref="0x7efe456c34a0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456c3630"/>
        <function-ref name="enable" scoped="" ref="0x7efe456c37c0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456c3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efe456b6bc0" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efe456b6bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456b5020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456b51b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456b5340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456b54d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456b5660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7efe456a9a30" loc="43:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7efe456a9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a9db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a8020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a81b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a8340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7efe4569fbc0" loc="55:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7efe4569fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe4569e020"/>
        <function-ref name="fired" scoped="" ref="0x7efe4569e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe4569e340"/>
        <function-ref name="edge" scoped="" ref="0x7efe4569e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe4569e660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe4569e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7efe456a6a30" loc="46:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7efe456a6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a6db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a5020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a51b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a5340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a54d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7efe456a4a30" loc="50:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7efe456a4a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a4db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a3020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a31b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a3340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7efe456aba30" loc="41:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7efe456aba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456abdb0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456aa020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456aa1b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456aa340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456aa4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7efe456a1a30" loc="53:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7efe456a1a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a0020"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a01b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a0340"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a04d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a0660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7efe456a8a30" loc="44:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7efe456a8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a8db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a7020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a71b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a7340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7efe4569ebc0" loc="56:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7efe4569ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe4569d020"/>
        <function-ref name="fired" scoped="" ref="0x7efe4569d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe4569d340"/>
        <function-ref name="edge" scoped="" ref="0x7efe4569d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe4569d660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe4569d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7efe456af9c0" loc="39:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7efe456af9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456afd40"/>
        <function-ref name="fired" scoped="" ref="0x7efe456ac020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456ac1b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456ac340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456ac4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7efe456a3a30" loc="51:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7efe456a3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a3db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a2020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a21b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a2340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7efe456aaa30" loc="42:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7efe456aaa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456aadb0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a9020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a91b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a9340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a94d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7efe456a0bc0" loc="54:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7efe456a0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe4569f020"/>
        <function-ref name="fired" scoped="" ref="0x7efe4569f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7efe4569f340"/>
        <function-ref name="edge" scoped="" ref="0x7efe4569f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7efe4569f660"/>
        <function-ref name="getValue" scoped="" ref="0x7efe4569f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7efe456a7a30" loc="45:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7efe456a7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a7db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a6020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a61b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a6340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7efe456a5a30" loc="49:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7efe456a5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a5db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a4020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a41b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a4340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7efe456aca30" loc="40:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7efe456aca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456acdb0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456ab020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456ab1b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456ab340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456ab4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7efe456a2a30" loc="52:../../../../tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7efe456a2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe456a2db0"/>
        <function-ref name="fired" scoped="" ref="0x7efe456a1020"/>
        <function-ref name="disable" scoped="" ref="0x7efe456a11b0"/>
        <function-ref name="edge" scoped="" ref="0x7efe456a1340"/>
        <function-ref name="enable" scoped="" ref="0x7efe456a14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7efe456a1660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efe455ca610" loc="46:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efe455ca610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe455ca990"/>
        <function-ref name="fired" scoped="" ref="0x7efe455cab20"/>
        <function-ref name="disable" scoped="" ref="0x7efe455cacb0"/>
        <function-ref name="edge" scoped="" ref="0x7efe455cae40"/>
        <function-ref name="enable" scoped="" ref="0x7efe455bd020"/>
        <function-ref name="getValue" scoped="" ref="0x7efe455bd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efe455cba30" loc="45:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efe455cba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe455cbdb0"/>
        <function-ref name="disable" scoped="" ref="0x7efe455ca020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efe455ca1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efe455ca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7efe455bb610" loc="46:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7efe455bb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe455bb990"/>
        <function-ref name="fired" scoped="" ref="0x7efe455bbb20"/>
        <function-ref name="disable" scoped="" ref="0x7efe455bbcb0"/>
        <function-ref name="edge" scoped="" ref="0x7efe455bbe40"/>
        <function-ref name="enable" scoped="" ref="0x7efe455ba020"/>
        <function-ref name="getValue" scoped="" ref="0x7efe455ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7efe455bca70" loc="45:../../../../tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7efe455bca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe455bcdf0"/>
        <function-ref name="disable" scoped="" ref="0x7efe455bb020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efe455bb1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efe455bb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efe45265e50" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45265e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45264410"/>
        <function-ref name="write" scoped="" ref="0x7efe452645a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efe4526f160" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efe4526f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efe45269e50" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe45269e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45268210"/>
        <function-ref name="write" scoped="" ref="0x7efe452683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efe45263880" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45263880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45263c00"/>
        <function-ref name="write" scoped="" ref="0x7efe45263d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efe4525b0a0" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efe4525b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525b420"/>
        <function-ref name="write" scoped="" ref="0x7efe4525b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efe452620a0" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efe452620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45262420"/>
        <function-ref name="write" scoped="" ref="0x7efe452625b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efe4524d500" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efe4524d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4524d880"/>
        <function-ref name="write" scoped="" ref="0x7efe4524da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efe45250500" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efe45250500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45250880"/>
        <function-ref name="write" scoped="" ref="0x7efe45250a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efe4526e490" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efe4526e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efe45255880" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efe45255880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45255c00"/>
        <function-ref name="write" scoped="" ref="0x7efe45255d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efe45251500" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe45251500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45251880"/>
        <function-ref name="write" scoped="" ref="0x7efe45251a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efe45268e50" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efe45268e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45267210"/>
        <function-ref name="write" scoped="" ref="0x7efe452673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efe45267e50" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efe45267e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45265210"/>
        <function-ref name="write" scoped="" ref="0x7efe452653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efe4525d880" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efe4525d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525dc00"/>
        <function-ref name="write" scoped="" ref="0x7efe4525dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efe4525f0a0" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efe4525f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525f420"/>
        <function-ref name="write" scoped="" ref="0x7efe4525f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efe45262880" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efe45262880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45262c00"/>
        <function-ref name="write" scoped="" ref="0x7efe45262d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efe45271a90" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45271a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe45271e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe45270020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe452701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efe4526de00" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe4526de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efe4526b490" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efe4526b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efe45254c80" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe45254c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452530a0"/>
        <function-ref name="write" scoped="" ref="0x7efe45253230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efe4526bbe0" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efe4526bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efe45251ce0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe45251ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452500a0"/>
        <function-ref name="write" scoped="" ref="0x7efe45250230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efe4526d160" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe4526d160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efe452550a0" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efe452550a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45255420"/>
        <function-ref name="write" scoped="" ref="0x7efe452555b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efe45267670" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45267670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452679f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45267b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efe45268670" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45268670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452689f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45268b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efe45270ad0" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efe45270ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45270e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efe452570a0" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efe452570a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45257420"/>
        <function-ref name="write" scoped="" ref="0x7efe452575b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efe4525b880" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efe4525b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525bc00"/>
        <function-ref name="write" scoped="" ref="0x7efe4525bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efe45257880" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efe45257880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45257c00"/>
        <function-ref name="write" scoped="" ref="0x7efe45257d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efe4524ece0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efe4524ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4524d0a0"/>
        <function-ref name="write" scoped="" ref="0x7efe4524d230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efe45250ce0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efe45250ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4524e0a0"/>
        <function-ref name="write" scoped="" ref="0x7efe4524e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efe4525f880" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efe4525f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525fc00"/>
        <function-ref name="write" scoped="" ref="0x7efe4525fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efe4525a0a0" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efe4525a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525a420"/>
        <function-ref name="write" scoped="" ref="0x7efe4525a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efe45252ce0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efe45252ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452510a0"/>
        <function-ref name="write" scoped="" ref="0x7efe45251230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efe45261880" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efe45261880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45261c00"/>
        <function-ref name="write" scoped="" ref="0x7efe45261d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efe4524dce0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efe4524dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe4524c0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe4524c230"/>
        <function-ref name="write" scoped="" ref="0x7efe4524c3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe4524c550"/>
        <function-ref name="readDone" scoped="" ref="0x7efe4524c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efe45270480" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efe45270480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45270800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efe45269670" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efe45269670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452699f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45269b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efe45265670" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45265670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452659f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45265b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efe4525c0a0" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efe4525c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525c420"/>
        <function-ref name="write" scoped="" ref="0x7efe4525c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efe452610a0" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efe452610a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45261420"/>
        <function-ref name="write" scoped="" ref="0x7efe452615b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efe4525c880" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efe4525c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525cc00"/>
        <function-ref name="write" scoped="" ref="0x7efe4525cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efe45264870" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efe45264870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45264bf0"/>
        <function-ref name="write" scoped="" ref="0x7efe45264d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efe4526f7b0" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efe4526f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526fb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efe452630a0" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efe452630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45263420"/>
        <function-ref name="write" scoped="" ref="0x7efe452635b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45272e20" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45272e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe452711c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45271350"/>
        <function-ref name="request" scoped="" ref="0x7efe452714e0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45271670"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45271800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efe4526a2f0" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efe4526a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efe45269020" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efe45269020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe452693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efe45252500" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efe45252500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45252880"/>
        <function-ref name="write" scoped="" ref="0x7efe45252a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efe45253ce0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efe45253ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452520a0"/>
        <function-ref name="write" scoped="" ref="0x7efe45252230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efe4526d7b0" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4526d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526db30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efe45253500" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe45253500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45253880"/>
        <function-ref name="write" scoped="" ref="0x7efe45253a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efe4524e500" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efe4524e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4524e880"/>
        <function-ref name="write" scoped="" ref="0x7efe4524ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efe4525d0a0" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efe4525d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525d420"/>
        <function-ref name="write" scoped="" ref="0x7efe4525d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efe4525a880" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efe4525a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4525ac00"/>
        <function-ref name="write" scoped="" ref="0x7efe4525ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efe4526fe00" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efe4526fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efe4526eae0" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efe4526eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efe452600a0" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efe452600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45260420"/>
        <function-ref name="write" scoped="" ref="0x7efe452605b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efe4526a940" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efe4526a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4526acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efe45260880" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efe45260880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45260c00"/>
        <function-ref name="write" scoped="" ref="0x7efe45260d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efe452540a0" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efe452540a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45254820"/>
        <function-ref name="write" scoped="" ref="0x7efe452549b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efe4524c9b0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efe4524c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe4524cd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe4524b020"/>
        <function-ref name="write" scoped="" ref="0x7efe4524b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe4524b340"/>
        <function-ref name="readDone" scoped="" ref="0x7efe4524b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7efe45579630" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7efe45579630"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe455799b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe45579b40"/>
        <function-ref name="write" scoped="" ref="0x7efe45579cd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe45579e60"/>
        <function-ref name="readDone" scoped="" ref="0x7efe45578020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efe4557b680" loc="40:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4557b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe4557ba00"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe4557bb90"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe4557bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7efe455788c0" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7efe455788c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45578c40"/>
        <function-ref name="write" scoped="" ref="0x7efe45578dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7efe455776f0" loc="43:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7efe455776f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45577a70"/>
        <function-ref name="write" scoped="" ref="0x7efe45577c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe4557f960" loc="39:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe4557f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4557fce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4557fe70"/>
        <function-ref name="request" scoped="" ref="0x7efe4557b030"/>
        <function-ref name="granted" scoped="" ref="0x7efe4557b1c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4557b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7efe45576510" loc="44:../../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7efe45576510"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45576890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7efe45560680" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efe45560680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45560a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe45560b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7efe45570bb0" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7efe45570bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe4556f020"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe4556f1b0"/>
        <function-ref name="write" scoped="" ref="0x7efe4556f340"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe4556f4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7efe4556f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efe45574920" loc="44:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45574920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe45574ca0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe45574e30"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe45571020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7efe45569080" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efe45569080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efe45569400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7efe45568020" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7efe45568020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe455683a0"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe45568530"/>
        <function-ref name="isState" scoped="" ref="0x7efe455686c0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe45568850"/>
        <function-ref name="requestState" scoped="" ref="0x7efe455689e0"/>
        <function-ref name="forceState" scoped="" ref="0x7efe45568b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efe4556b400" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efe4556b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4556b780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4556b910"/>
        <function-ref name="request" scoped="" ref="0x7efe4556baa0"/>
        <function-ref name="granted" scoped="" ref="0x7efe4556bc30"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4556bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7efe4556e020" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7efe4556e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4556e3a0"/>
        <function-ref name="write" scoped="" ref="0x7efe4556e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7efe4556edb0" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7efe4556edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4556d180"/>
        <function-ref name="write" scoped="" ref="0x7efe4556d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45568df0" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45568df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe455611c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe45561350"/>
        <function-ref name="led1On" scoped="" ref="0x7efe455614e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe45561670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45561800"/>
        <function-ref name="get" scoped="" ref="0x7efe45561990"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45561b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe4555f1b0"/>
        <function-ref name="set" scoped="" ref="0x7efe45561cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45561e40"/>
        <function-ref name="led2On" scoped="" ref="0x7efe4555f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45571810" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45571810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45571b90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45571d20"/>
        <function-ref name="request" scoped="" ref="0x7efe45570020"/>
        <function-ref name="granted" scoped="" ref="0x7efe455701b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe45570340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7efe4555b120" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7efe4555b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe4555b4a0"/>
        <function-ref name="runTask" scoped="" ref="0x7efe4555b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7efe4556dba0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7efe4556dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4556b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efe45500770" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efe45500770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe45500af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe45500c80"/>
        <function-ref name="isState" scoped="" ref="0x7efe45500e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe454fd020"/>
        <function-ref name="requestState" scoped="" ref="0x7efe454fd1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7efe454fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efe454fc280" loc="66:../../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efe454fc280"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe454fc600"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe454fc790"/>
        <function-ref name="isState" scoped="" ref="0x7efe454fc920"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe454fcab0"/>
        <function-ref name="requestState" scoped="" ref="0x7efe454fcc40"/>
        <function-ref name="forceState" scoped="" ref="0x7efe454fcdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe454f8020" loc="66:../../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe454f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe454f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efe454f8b70" loc="67:../../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efe454f8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe454f7020"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe454f71b0"/>
        <function-ref name="isState" scoped="" ref="0x7efe454f7340"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe454f74d0"/>
        <function-ref name="requestState" scoped="" ref="0x7efe454f7660"/>
        <function-ref name="forceState" scoped="" ref="0x7efe454f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efe4529a020" loc="44:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efe4529a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe4529a3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4529a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efe454de8f0" loc="43:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efe454de8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efe454dec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe454dfc40" loc="42:../../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe454dfc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe454de020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe454de1b0"/>
        <function-ref name="request" scoped="" ref="0x7efe454de340"/>
        <function-ref name="granted" scoped="" ref="0x7efe454de4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe454de660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe444a1af0" loc="82:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe444a1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe444a1e70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe444a0030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efe4449e440" loc="87:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efe4449e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe4449e7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4449e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efe4449ebe0" loc="89:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efe4449ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efe4449d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efe444a02c0" loc="83:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efe444a02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efe444a0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe444a3e70" loc="81:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe444a3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe444a1220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe444a13b0"/>
        <function-ref name="request" scoped="" ref="0x7efe444a1540"/>
        <function-ref name="granted" scoped="" ref="0x7efe444a16d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe444a1860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efe444a08d0" loc="85:../../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efe444a08d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efe444a0c50"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efe444a0de0"/>
        <function-ref name="splitRead" scoped="" ref="0x7efe4449e020"/>
        <function-ref name="write" scoped="" ref="0x7efe4449e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efe454cb6b0" loc="74:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe454cb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe454cba30"/>
        <function-ref name="configure" scoped="" ref="0x7efe454cbbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efe454c9850" loc="77:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efe454c9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe454c9bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe454c9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efe454c7a40" loc="80:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efe454c7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efe454c7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efe454ca020" loc="75:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efe454ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efe454ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efe454c8690" loc="79:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efe454c8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe454c8a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe454c8ba0"/>
        <function-ref name="request" scoped="" ref="0x7efe454c8d30"/>
        <function-ref name="granted" scoped="" ref="0x7efe454c7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe454c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe454cd430" loc="73:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe454cd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe454cd7b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe454cd940"/>
        <function-ref name="request" scoped="" ref="0x7efe454cdad0"/>
        <function-ref name="granted" scoped="" ref="0x7efe454cdc60"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe454cddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efe454ca6a0" loc="76:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efe454ca6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efe454caa20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efe454cabb0"/>
        <function-ref name="splitRead" scoped="" ref="0x7efe454cad40"/>
        <function-ref name="write" scoped="" ref="0x7efe454c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efe454c52a0" loc="81:../../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe454c52a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe454c5620"/>
        <function-ref name="txDone" scoped="" ref="0x7efe454c57b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7efe4546d250" loc="76:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe4546d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe4546d5f0"/>
        <function-ref name="configure" scoped="" ref="0x7efe4546d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7efe4546cc50" loc="79:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7efe4546cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe4546b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4546b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7efe4546a3e0" loc="82:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7efe4546a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7efe4546a780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7efe4546da10" loc="77:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7efe4546da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7efe4546dd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7efe4546aa50" loc="83:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efe4546aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe4546add0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe45469020"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe454691b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe45469340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe454694d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe45469660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe454697f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe45469980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe45469b10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe45469ca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe45469e30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe45468020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe454681b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe45468440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe454685d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe45468760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe454688f0"/>
        <function-ref name="isUart" scoped="" ref="0x7efe45468a80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe45468c10"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe45468da0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe45467020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe454671b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe45467340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe454674d0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45467660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe454679f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe45467b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe45467d10"/>
        <function-ref name="tx" scoped="" ref="0x7efe45466020"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe454661b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe45466340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe454664d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe45466660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe454667f0"/>
        <function-ref name="rx" scoped="" ref="0x7efe45466980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe45466b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe45466ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe45466e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe45465020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe454651b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe45465c20" loc="85:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe45465c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe45464020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe454641b0"/>
        <function-ref name="led1On" scoped="" ref="0x7efe45464340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe454644d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe45464660"/>
        <function-ref name="get" scoped="" ref="0x7efe454647f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe45464980"/>
        <function-ref name="led2On" scoped="" ref="0x7efe45463020"/>
        <function-ref name="set" scoped="" ref="0x7efe45464ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe45464b10"/>
        <function-ref name="led0On" scoped="" ref="0x7efe45464e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7efe4546b5b0" loc="81:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7efe4546b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4546b950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4546bae0"/>
        <function-ref name="request" scoped="" ref="0x7efe4546bc70"/>
        <function-ref name="granted" scoped="" ref="0x7efe4546be00"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4546a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe4546f470" loc="75:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe4546f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4546f810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4546f9a0"/>
        <function-ref name="request" scoped="" ref="0x7efe4546fb30"/>
        <function-ref name="granted" scoped="" ref="0x7efe4546fcc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4546fe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7efe4546c060" loc="78:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7efe4546c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7efe4546c3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7efe4546c570"/>
        <function-ref name="splitRead" scoped="" ref="0x7efe4546c700"/>
        <function-ref name="write" scoped="" ref="0x7efe4546c890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7efe45465480" loc="84:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7efe45465480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45465800"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45465990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7efe454632f0" loc="102:../../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7efe454632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45463670"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45463800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7efe454565e0" loc="78:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efe454565e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45456960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efe45457d10" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe45457d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe454560e0"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45456270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efe4545b020" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe4545b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe4545b3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe4545b530"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe4545b6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe4545b850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe4545b9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe4545bb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe4545bd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe4545a020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe4545a1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe4545a340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe4545a4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe4545a660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe4545a7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe4545aa80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe4545ac10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe4545ada0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe45459020"/>
        <function-ref name="isUart" scoped="" ref="0x7efe454591b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe45459340"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe454594d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe45459660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe454597f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe45459980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe45459b10"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45459ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe45458220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe454583b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe45458540"/>
        <function-ref name="tx" scoped="" ref="0x7efe454586d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe45458860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe454589f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe45458b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe45458d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe45457020"/>
        <function-ref name="rx" scoped="" ref="0x7efe454571b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe45457340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe454574d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe45457660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe454577f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe45457980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efe4541bb20" loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efe4541bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4541a020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4541a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4541a340"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4541a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4541a660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4541a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4541a980"/>
        <function-ref name="get" scoped="" ref="0x7efe4541ab10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4541aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4541ae30"/>
        <function-ref name="set" scoped="" ref="0x7efe45419020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe454191b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45419340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe454195d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45419760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efe4544d780" loc="76:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efe4544d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe4544db00"/>
        <function-ref name="txDone" scoped="" ref="0x7efe4544dc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7efe45419b20" loc="83:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7efe45419b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45418020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe454181b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45418340"/>
        <function-ref name="toggle" scoped="" ref="0x7efe454184d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45418660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe454187f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45418980"/>
        <function-ref name="get" scoped="" ref="0x7efe45418b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45418ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45418e30"/>
        <function-ref name="set" scoped="" ref="0x7efe45417020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe454171b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45417340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe454175d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45417760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7efe45417b20" loc="84:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7efe45417b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45416020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe454161b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45416340"/>
        <function-ref name="toggle" scoped="" ref="0x7efe454164d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45416660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe454167f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45416980"/>
        <function-ref name="get" scoped="" ref="0x7efe45416b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45416ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45416e30"/>
        <function-ref name="set" scoped="" ref="0x7efe45415020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe454151b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45415340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe454155d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45415760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7efe45454c70" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7efe45454c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe45451020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe454511b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe45451340"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe454514d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe45451660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe454517f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe45451980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe45451b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe45451ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe45451e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe45450020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe454501b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe45450340"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe454505d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe45450760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe454508f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe45450a80"/>
        <function-ref name="isUart" scoped="" ref="0x7efe45450c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe45450da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe4544f020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe4544f1b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe4544f340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe4544f4d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe4544f660"/>
        <function-ref name="getMode" scoped="" ref="0x7efe4544f7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe4544fb80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe4544fd10"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe4544e020"/>
        <function-ref name="tx" scoped="" ref="0x7efe4544e1b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe4544e340"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe4544e4d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe4544e660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe4544e7f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe4544e980"/>
        <function-ref name="rx" scoped="" ref="0x7efe4544eb10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe4544eca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe4544ee30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe4544d020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe4544d1b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe4544d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7efe45424d10" loc="79:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7efe45424d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efe4544b0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efe4544b270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efe4544b400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efe4544b590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efe4544b720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efe4544b8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efe4544ba40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efe4544bbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe4544bd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efe4544a020"/>
        <function-ref name="getData" scoped="" ref="0x7efe4544a1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efe4544a340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efe4544a4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efe4544a760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efe4544a8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7efe4544aa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efe4544ac10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efe4544ada0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efe45423020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efe454231b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efe45423340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efe454234d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7efe45423660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efe454237f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efe45423980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efe45423d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efe45422020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efe454221b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efe45422340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efe454224d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efe45422660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efe454227f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efe45422980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efe45422b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efe45422ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efe45422e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efe45421020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efe454211b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efe45421340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efe454214d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efe45421660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efe454217f0"/>
        <function-ref name="setData" scoped="" ref="0x7efe45421980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efe45421b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efe45421ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efe45421e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efe45420020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efe454201b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efe45420340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efe454208d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efe45420a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efe45420bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efe45420d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efe4541f020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efe4541f1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efe4541f340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efe4541f4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efe4541f660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efe4541f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7efe4541db20" loc="81:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7efe4541db20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4541c020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4541c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4541c340"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4541c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4541c660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4541c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4541c980"/>
        <function-ref name="get" scoped="" ref="0x7efe4541cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4541cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4541ce30"/>
        <function-ref name="set" scoped="" ref="0x7efe4541b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4541b1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4541b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4541b5d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4541b760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efe4544c150" loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe4544c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe4544c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efe4541fbb0" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efe4541fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4541e020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4541e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4541e340"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4541e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4541e660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4541e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4541e980"/>
        <function-ref name="get" scoped="" ref="0x7efe4541eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4541eca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe4541ee30"/>
        <function-ref name="set" scoped="" ref="0x7efe4541d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe4541d1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe4541d340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe4541d5d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4541d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe444965d0" loc="42:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe444965d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe44496950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe44496ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7efe444907c0" loc="46:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7efe444907c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe44490b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe44489a80" loc="51:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe44489a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe44489e00"/>
        <function-ref name="configure" scoped="" ref="0x7efe44487020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7efe44490dd0" loc="48:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efe44490dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efe4448f180"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efe4448f310"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efe4448f4a0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efe4448f630"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efe4448f7c0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efe4448f950"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efe4448fae0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efe4448fc70"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe4448fe00"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efe4448e020"/>
        <function-ref name="getData" scoped="" ref="0x7efe4448e1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efe4448e340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efe4448e4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efe4448e760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efe4448e8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7efe4448ea80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efe4448ec10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efe4448eda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efe4448d020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efe4448d1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efe4448d340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efe4448d4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7efe4448d660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efe4448d7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efe4448d980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efe4448dd10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efe4448c020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efe4448c1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efe4448c340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efe4448c4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efe4448c660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efe4448c7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efe4448c980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efe4448cb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efe4448cca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efe4448ce30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efe4448b020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efe4448b1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efe4448b340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efe4448b4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efe4448b660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efe4448b7f0"/>
        <function-ref name="setData" scoped="" ref="0x7efe4448b980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efe4448bb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efe4448bca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efe4448be30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efe4448a020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efe4448a1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efe4448a340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efe4448a8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efe4448aa60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efe4448abf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efe4448ad80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efe44489020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efe444891b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efe44489340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efe444894d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efe44489660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efe444897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7efe44490020" loc="45:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7efe44490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe444903a0"/>
        <function-ref name="txDone" scoped="" ref="0x7efe44490530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe44497860" loc="41:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe44497860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe44497be0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe44497d70"/>
        <function-ref name="request" scoped="" ref="0x7efe44496020"/>
        <function-ref name="granted" scoped="" ref="0x7efe444961b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe44496340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7efe444955a0" loc="44:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7efe444955a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe44495920"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe44495ab0"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe44495c40"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe44495dd0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe44494020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe444941b0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe44494340"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe444944d0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe44494660"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe444947f0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe44494980"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe44494b10"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe44494ca0"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe44493020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe444931b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe44493340"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe444934d0"/>
        <function-ref name="isUart" scoped="" ref="0x7efe44493660"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe444937f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe44493980"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe44493b10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe44493ca0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe44493e30"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe44492020"/>
        <function-ref name="getMode" scoped="" ref="0x7efe444921b0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe44492540"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe444926d0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe44492860"/>
        <function-ref name="tx" scoped="" ref="0x7efe444929f0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe44492b80"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe44492d10"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe44491020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe444911b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe44491340"/>
        <function-ref name="rx" scoped="" ref="0x7efe444914d0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe44491660"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe444917f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe44491980"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe44491b10"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe44491ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe44496d70" loc="43:../../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe44496d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe44495180"/>
        <function-ref name="userId" scoped="" ref="0x7efe44495310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe453752c0" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe453752c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe45375640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe453757d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe453748a0" loc="45:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe453748a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe45374c20"/>
        <function-ref name="configure" scoped="" ref="0x7efe45374db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efe453784d0" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efe453784d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45378850"/>
        <function-ref name="txDone" scoped="" ref="0x7efe453789e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45376020" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45376020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe453763a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45376530"/>
        <function-ref name="request" scoped="" ref="0x7efe453766c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45376850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe453769e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efe453773f0" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe453773f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45377770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe45375ad0" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45375ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe45375e50"/>
        <function-ref name="userId" scoped="" ref="0x7efe45374020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7efe45370e50" loc="43:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe45370e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe4536f210"/>
        <function-ref name="userId" scoped="" ref="0x7efe4536f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7efe45371060" loc="39:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7efe45371060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe45371400"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45371590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7efe45370840" loc="42:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7efe45370840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45370bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7efe45371990" loc="40:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7efe45371990"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe45371d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7efe45370060" loc="41:../../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7efe45370060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7efe453703e0"/>
        <function-ref name="txDone" scoped="" ref="0x7efe45370570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe4536c850" loc="92:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4536c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe4536cbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe4536cd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe45369570" loc="96:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe45369570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe45369910"/>
        <function-ref name="configure" scoped="" ref="0x7efe45369aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efe4536b020" loc="93:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe4536b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4536b3a0"/>
        <function-ref name="requested" scoped="" ref="0x7efe4536b530"/>
        <function-ref name="granted" scoped="" ref="0x7efe4536b6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4536b850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe4536b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe4536da80" loc="91:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe4536da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4536de20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4536c020"/>
        <function-ref name="request" scoped="" ref="0x7efe4536c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7efe4536c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4536c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe4536bc30" loc="94:../../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4536bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe45369020"/>
        <function-ref name="userId" scoped="" ref="0x7efe453691b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44423a40" loc="44:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44423a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44423dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efe444220a0" loc="45:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efe444220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efe44422420"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efe444225b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efe44422740"/>
        <function-ref name="dequeue" scoped="" ref="0x7efe444228d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7efe4441f020" loc="55:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7efe4441f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7efe4441f3c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe4441f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7efe4441dcf0" loc="60:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7efe4441dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7efe4441c0e0"/>
        <function-ref name="configure" scoped="" ref="0x7efe4441c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efe4441c500" loc="61:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efe4441c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efe4441c880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efe4441ca10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efe4441cba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efe4441cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7efe4441f7a0" loc="56:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7efe4441f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4441fb20"/>
        <function-ref name="requested" scoped="" ref="0x7efe4441fcb0"/>
        <function-ref name="granted" scoped="" ref="0x7efe4441fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4441d020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7efe4441d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe4441b020" loc="62:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe4441b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe4441b3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe4441b530"/>
        <function-ref name="led1On" scoped="" ref="0x7efe4441b6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe4441b850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe4441b9e0"/>
        <function-ref name="get" scoped="" ref="0x7efe4441bb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe4441bd00"/>
        <function-ref name="led0On" scoped="" ref="0x7efe4441a4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4441a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efe4441a020"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe4441a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe44420270" loc="54:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe44420270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe44420610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe444207a0"/>
        <function-ref name="request" scoped="" ref="0x7efe44420930"/>
        <function-ref name="granted" scoped="" ref="0x7efe44420ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe44420c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7efe4441d400" loc="57:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7efe4441d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7efe4441d780"/>
        <function-ref name="userId" scoped="" ref="0x7efe4441d910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7efe4441a7a0" loc="75:../../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7efe4441a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe4441ab20"/>
        <function-ref name="runTask" scoped="" ref="0x7efe4441acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7efe45362540" loc="4:../../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7efe45362540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efe453628c0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efe45362a50"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efe45362be0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efe45362d70"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efe4535f020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efe4535f1b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efe4535f340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efe4535f4d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe4535f660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efe4535f7f0"/>
        <function-ref name="getData" scoped="" ref="0x7efe4535f980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efe4535fb10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efe4535fca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efe4535e020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efe4535e1b0"/>
        <function-ref name="getIV" scoped="" ref="0x7efe4535e340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efe4535e4d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efe4535e660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efe4535e7f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efe4535e980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efe4535eb10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efe4535eca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7efe4535ee30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efe4535d020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efe4535d1b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efe4535d540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efe4535d6d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efe4535d860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efe4535d9f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efe4535db80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efe4535dd10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efe4535c020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efe4535c1b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efe4535c340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efe4535c4d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efe4535c660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efe4535c7f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efe4535c980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efe4535cb10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efe4535cca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efe4535ce30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efe4535b020"/>
        <function-ref name="setData" scoped="" ref="0x7efe4535b1b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efe4535b340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efe4535b4d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efe4535b660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efe4535b7f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efe4535b980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efe4535bb10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efe4535a420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efe4535a5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efe4535a740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efe4535a8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efe4535aa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efe4535abf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efe4535ad80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efe45359020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efe453591b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efe45359340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7efe4534f250" loc="41:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7efe4534f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7efe4534f5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7efe4534f760"/>
        <function-ref name="setUctl" scoped="" ref="0x7efe4534f8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7efe4534fa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7efe4534fc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7efe4534fda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7efe4534e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7efe4534e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7efe4534e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7efe4534e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7efe4534e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7efe4534e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7efe4534e980"/>
        <function-ref name="getUbr" scoped="" ref="0x7efe4534ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7efe4534eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7efe4534d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7efe4534d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7efe4534d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7efe4534d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7efe4534d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7efe4534d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7efe4534d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7efe4534db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7efe4534dca0"/>
        <function-ref name="getMode" scoped="" ref="0x7efe4534de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7efe4534c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7efe4534c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7efe4534c540"/>
        <function-ref name="tx" scoped="" ref="0x7efe4534c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7efe4534c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7efe4534c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7efe4534cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7efe4534cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7efe4534b020"/>
        <function-ref name="rx" scoped="" ref="0x7efe4534b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7efe4534b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7efe4534b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7efe4534b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7efe4534b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7efe4534b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7efe45349cb0" loc="43:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7efe45349cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe453480a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45348230"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe453483c0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45348550"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe453486e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe45348870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45348a00"/>
        <function-ref name="get" scoped="" ref="0x7efe45348b90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45348d20"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45347020"/>
        <function-ref name="set" scoped="" ref="0x7efe453471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45347340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe453474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45347760"/>
        <function-ref name="clr" scoped="" ref="0x7efe453478f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7efe45356430" loc="39:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7efe45356430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7efe453567b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7efe45356940"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7efe45356ad0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7efe45356c60"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7efe45356df0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7efe45355020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7efe453551b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7efe45355340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe453554d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7efe45355660"/>
        <function-ref name="getData" scoped="" ref="0x7efe453557f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7efe45355980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7efe45355b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7efe45355da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7efe45354020"/>
        <function-ref name="getIV" scoped="" ref="0x7efe453541b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7efe45354340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7efe453544d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7efe45354660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7efe453547f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7efe45354980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7efe45354b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7efe45354ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7efe45354e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7efe45353020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7efe453533b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7efe45353540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7efe453536d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7efe45353860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7efe453539f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7efe45353b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7efe45353d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7efe45352020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7efe453521b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7efe45352340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7efe453524d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7efe45352660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7efe453527f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7efe45352980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7efe45352b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7efe45352ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7efe45352e30"/>
        <function-ref name="setData" scoped="" ref="0x7efe45351020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7efe453511b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7efe45351340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7efe453514d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7efe45351660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7efe453517f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7efe45351980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7efe45350020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7efe453501b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7efe45350340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7efe453504d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7efe45350660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7efe453507f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7efe45350980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7efe45350b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7efe45350ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7efe45350e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7efe4534bd40" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7efe4534bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4534a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4534a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe4534a400"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4534a590"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4534a720"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe4534a8b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4534aa40"/>
        <function-ref name="get" scoped="" ref="0x7efe4534abd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe4534ad60"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45349020"/>
        <function-ref name="set" scoped="" ref="0x7efe453491b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe45349340"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe453494d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe45349760"/>
        <function-ref name="clr" scoped="" ref="0x7efe453498f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efe45233c60" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45233c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45232210"/>
        <function-ref name="write" scoped="" ref="0x7efe452323a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efe4523eda0" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efe4523eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efe45236b50" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe45236b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45235020"/>
        <function-ref name="write" scoped="" ref="0x7efe452351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efe45231670" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45231670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452319f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45231b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efe4522ae50" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efe4522ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45228210"/>
        <function-ref name="write" scoped="" ref="0x7efe452283a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efe45231e50" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efe45231e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522f210"/>
        <function-ref name="write" scoped="" ref="0x7efe4522f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efe4521d2f0" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efe4521d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4521d670"/>
        <function-ref name="write" scoped="" ref="0x7efe4521d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efe4521f2f0" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efe4521f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4521f670"/>
        <function-ref name="write" scoped="" ref="0x7efe4521f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efe4523b120" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efe4523b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efe45225670" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efe45225670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452259f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45225b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efe452202f0" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe452202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45220670"/>
        <function-ref name="write" scoped="" ref="0x7efe45220800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efe45235c60" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efe45235c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45234020"/>
        <function-ref name="write" scoped="" ref="0x7efe452341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efe45234c60" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efe45234c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45233020"/>
        <function-ref name="write" scoped="" ref="0x7efe452331b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efe4522b670" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efe4522b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522b9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4522bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efe4522de50" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efe4522de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522c210"/>
        <function-ref name="write" scoped="" ref="0x7efe4522c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efe4522f670" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efe4522f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522f9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4522fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efe4523f760" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4523f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe4523fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe4523fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe4523fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efe4523aaa0" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe4523aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efe45239120" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efe45239120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe452395a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efe45224a70" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe45224a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45224df0"/>
        <function-ref name="write" scoped="" ref="0x7efe45223020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efe45239870" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efe45239870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45239bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efe45220ad0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe45220ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45220e50"/>
        <function-ref name="write" scoped="" ref="0x7efe4521f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efe4523bdc0" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe4523bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efe45226e50" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efe45226e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45225210"/>
        <function-ref name="write" scoped="" ref="0x7efe452253a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efe45234480" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45234480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45234800"/>
        <function-ref name="write" scoped="" ref="0x7efe45234990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efe45235480" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45235480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45235800"/>
        <function-ref name="write" scoped="" ref="0x7efe45235990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efe4523e750" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efe4523e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efe45227e50" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efe45227e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45226210"/>
        <function-ref name="write" scoped="" ref="0x7efe452263a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efe45228670" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efe45228670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452289f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45228b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efe45226670" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efe45226670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452269f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45226b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efe4521ead0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efe4521ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4521ee50"/>
        <function-ref name="write" scoped="" ref="0x7efe4521d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efe4521fad0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efe4521fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4521fe50"/>
        <function-ref name="write" scoped="" ref="0x7efe4521e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efe4522c670" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efe4522c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522c9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4522cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efe45228e50" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efe45228e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45227210"/>
        <function-ref name="write" scoped="" ref="0x7efe452273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efe45221ad0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efe45221ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45221e50"/>
        <function-ref name="write" scoped="" ref="0x7efe45220020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efe4522e670" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efe4522e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522e9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4522eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efe4521dad0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efe4521dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe4521de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe4521c020"/>
        <function-ref name="write" scoped="" ref="0x7efe4521c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe4521c340"/>
        <function-ref name="readDone" scoped="" ref="0x7efe4521c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efe4523e100" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efe4523e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efe45236370" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efe45236370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452366f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45236880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efe45233480" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45233480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45233800"/>
        <function-ref name="write" scoped="" ref="0x7efe45233990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efe4522be50" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efe4522be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522a210"/>
        <function-ref name="write" scoped="" ref="0x7efe4522a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efe4522fe50" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efe4522fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522e210"/>
        <function-ref name="write" scoped="" ref="0x7efe4522e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efe4522a670" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efe4522a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522a9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4522ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efe45232670" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efe45232670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452329f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45232b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efe4523d450" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efe4523d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efe45232e50" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efe45232e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45231210"/>
        <function-ref name="write" scoped="" ref="0x7efe452313a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe45240a80" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe45240a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45240e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4523f020"/>
        <function-ref name="request" scoped="" ref="0x7efe4523f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7efe4523f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4523f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efe45238020" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efe45238020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe452383a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efe45238cc0" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efe45238cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe452360a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efe452212f0" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efe452212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45221670"/>
        <function-ref name="write" scoped="" ref="0x7efe45221800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efe45223ad0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efe45223ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45223e50"/>
        <function-ref name="write" scoped="" ref="0x7efe45221020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efe4523a450" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4523a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efe452232f0" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe452232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45223670"/>
        <function-ref name="write" scoped="" ref="0x7efe45223800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efe4521e2f0" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efe4521e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4521e670"/>
        <function-ref name="write" scoped="" ref="0x7efe4521e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efe4522ce50" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efe4522ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522b210"/>
        <function-ref name="write" scoped="" ref="0x7efe4522b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efe45227670" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efe45227670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452279f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45227b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efe4523daa0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efe4523daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efe4523b770" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efe4523b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4523baf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efe4522ee50" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efe4522ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522d210"/>
        <function-ref name="write" scoped="" ref="0x7efe4522d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efe45238670" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efe45238670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe452389f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efe4522d670" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efe4522d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4522d9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4522db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efe45225e50" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efe45225e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45224610"/>
        <function-ref name="write" scoped="" ref="0x7efe452247a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efe4521c7a0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efe4521c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe4521cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe4521ccb0"/>
        <function-ref name="write" scoped="" ref="0x7efe4521ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe4521a020"/>
        <function-ref name="readDone" scoped="" ref="0x7efe4521a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efe45206c60" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45206c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45205210"/>
        <function-ref name="write" scoped="" ref="0x7efe452053a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efe45211da0" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efe45211da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45210180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efe4520ab50" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe4520ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45209020"/>
        <function-ref name="write" scoped="" ref="0x7efe452091b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efe45204670" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45204670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452049f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45204b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efe451fde50" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efe451fde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fc210"/>
        <function-ref name="write" scoped="" ref="0x7efe451fc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efe45204e50" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efe45204e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45203210"/>
        <function-ref name="write" scoped="" ref="0x7efe452033a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efe451f02f0" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efe451f02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f0670"/>
        <function-ref name="write" scoped="" ref="0x7efe451f0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efe451f32f0" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efe451f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f3670"/>
        <function-ref name="write" scoped="" ref="0x7efe451f3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efe4520f120" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efe4520f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efe451f8670" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efe451f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f89f0"/>
        <function-ref name="write" scoped="" ref="0x7efe451f8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efe451f42f0" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe451f42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f4670"/>
        <function-ref name="write" scoped="" ref="0x7efe451f4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efe45209c60" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efe45209c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45208020"/>
        <function-ref name="write" scoped="" ref="0x7efe452081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efe45208c60" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efe45208c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45206020"/>
        <function-ref name="write" scoped="" ref="0x7efe452061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efe451fe670" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efe451fe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fe9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe451feb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efe45201e50" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efe45201e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451ff210"/>
        <function-ref name="write" scoped="" ref="0x7efe451ff3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efe45203670" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efe45203670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452039f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45203b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efe45212760" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45212760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe45212ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe45212c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe45212e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efe4520eaa0" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe4520eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efe4520c120" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efe4520c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520c5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efe451f7a70" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe451f7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f7df0"/>
        <function-ref name="write" scoped="" ref="0x7efe451f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efe4520c870" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efe4520c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efe451f4ad0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe451f4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f4e50"/>
        <function-ref name="write" scoped="" ref="0x7efe451f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efe4520fdc0" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe4520fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efe451fae50" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efe451fae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f8210"/>
        <function-ref name="write" scoped="" ref="0x7efe451f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efe45208480" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45208480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45208800"/>
        <function-ref name="write" scoped="" ref="0x7efe45208990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efe45209480" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45209480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45209800"/>
        <function-ref name="write" scoped="" ref="0x7efe45209990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efe45211750" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efe45211750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45211ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efe451fbe50" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efe451fbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fa210"/>
        <function-ref name="write" scoped="" ref="0x7efe451fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efe451fc670" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efe451fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fc9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe451fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efe451fa670" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efe451fa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fa9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe451fab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efe451f1ad0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efe451f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f1e50"/>
        <function-ref name="write" scoped="" ref="0x7efe451f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efe451f3ad0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efe451f3ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f3e50"/>
        <function-ref name="write" scoped="" ref="0x7efe451f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efe451ff670" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efe451ff670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451ff9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe451ffb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efe451fce50" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efe451fce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fb210"/>
        <function-ref name="write" scoped="" ref="0x7efe451fb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efe451f5ad0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efe451f5ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f5e50"/>
        <function-ref name="write" scoped="" ref="0x7efe451f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efe45202670" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efe45202670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452029f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45202b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efe451f0ad0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efe451f0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe451f0e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe451ef020"/>
        <function-ref name="write" scoped="" ref="0x7efe451ef1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe451ef340"/>
        <function-ref name="readDone" scoped="" ref="0x7efe451ef4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efe45211100" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efe45211100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45211480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efe4520a370" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efe4520a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4520a6f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4520a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efe45206480" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45206480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45206800"/>
        <function-ref name="write" scoped="" ref="0x7efe45206990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efe451fee50" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efe451fee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fd210"/>
        <function-ref name="write" scoped="" ref="0x7efe451fd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efe45203e50" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efe45203e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45202210"/>
        <function-ref name="write" scoped="" ref="0x7efe452023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efe451fd670" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efe451fd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fd9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe451fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efe45205670" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efe45205670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452059f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45205b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efe45210450" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efe45210450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe452107d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efe45205e50" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efe45205e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45204210"/>
        <function-ref name="write" scoped="" ref="0x7efe452043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe452139e0" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe452139e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe45213d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45212020"/>
        <function-ref name="request" scoped="" ref="0x7efe452121b0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45212340"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe452124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efe4520b020" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efe4520b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efe4520bcc0" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efe4520bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efe451f52f0" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efe451f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f5670"/>
        <function-ref name="write" scoped="" ref="0x7efe451f5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efe451f6ad0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efe451f6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f6e50"/>
        <function-ref name="write" scoped="" ref="0x7efe451f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efe4520e450" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4520e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efe451f62f0" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe451f62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f6670"/>
        <function-ref name="write" scoped="" ref="0x7efe451f6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efe451f12f0" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efe451f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f1670"/>
        <function-ref name="write" scoped="" ref="0x7efe451f1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efe451ffe50" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efe451ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fe210"/>
        <function-ref name="write" scoped="" ref="0x7efe451fe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efe451fb670" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efe451fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451fb9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe451fbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efe45210aa0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efe45210aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45210e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efe4520f770" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efe4520f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efe45202e50" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efe45202e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45201210"/>
        <function-ref name="write" scoped="" ref="0x7efe452013a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efe4520b670" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efe4520b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4520b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efe45201670" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efe45201670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe452019f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45201b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efe451f8e50" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efe451f8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451f7610"/>
        <function-ref name="write" scoped="" ref="0x7efe451f77a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efe451ef7a0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efe451ef7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe451efb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe451efcb0"/>
        <function-ref name="write" scoped="" ref="0x7efe451efe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe451ee020"/>
        <function-ref name="readDone" scoped="" ref="0x7efe451ee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7efe451e7b20" loc="54:../../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efe451e7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efe451e4020"/>
        <function-ref name="changed" scoped="" ref="0x7efe451e41b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7efe451e4340"/>
        <function-ref name="setAddress" scoped="" ref="0x7efe451e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7efe451e6d20" loc="13:../../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efe451e6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efe451d00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7efe451cb310" loc="5:../../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7efe451cb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7efe451cb690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7efe451c7880" loc="8:../../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7efe451c7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451c7c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7efe451bd020" loc="8:../../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7efe451bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7efe451b3bd0" loc="14:../../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7efe451b3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451b6020"/>
        <function-ref name="write" scoped="" ref="0x7efe451b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7efe451b6530" loc="15:../../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7efe451b6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe451b68b0"/>
        <function-ref name="stop" scoped="" ref="0x7efe451b6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7efe451b7140" loc="11:../../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7efe451b7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451b74c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7efe451bcc50" loc="8:../../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7efe451bcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451a2020"/>
        <function-ref name="write" scoped="" ref="0x7efe451a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7efe451a2540" loc="11:../../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7efe451a2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe451a28c0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe451a2a50"/>
        <function-ref name="toggle" scoped="" ref="0x7efe451a2be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe451a2d70"/>
        <function-ref name="get" scoped="" ref="0x7efe451a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe451a11b0"/>
        <function-ref name="set" scoped="" ref="0x7efe451a1340"/>
        <function-ref name="clr" scoped="" ref="0x7efe451a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7efe45199950" loc="15:../../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7efe45199950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7efe4519c780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7efe4519e150" loc="11:../../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7efe4519e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4519e4d0"/>
        <function-ref name="write" scoped="" ref="0x7efe4519e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7efe4519e9f0" loc="14:../../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7efe4519e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4519ed70"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4519d020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4519d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4519d340"/>
        <function-ref name="get" scoped="" ref="0x7efe4519d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4519d660"/>
        <function-ref name="set" scoped="" ref="0x7efe4519d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4519d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7efe451a0ca0" loc="41:../../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7efe451a0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7efe45179ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7efe45176a90" loc="54:../../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7efe45176a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7efe451758d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efe45166020" loc="55:../../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe45166020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45166e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45165800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45165340"/>
        <function-ref name="overflow" scoped="" ref="0x7efe45165cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7efe45161530" loc="46:../../../../tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7efe45161530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe4515f3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4515fd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4515f890"/>
        <function-ref name="overflow" scoped="" ref="0x7efe4515e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efe45159020" loc="45:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efe45159020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe451593a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe45159530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe451596c0"/>
        <function-ref name="get" scoped="" ref="0x7efe45159850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe451599e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe45159b70"/>
        <function-ref name="getMode" scoped="" ref="0x7efe45159d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe45158020"/>
        <function-ref name="overflow" scoped="" ref="0x7efe451581b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe45158340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe451584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efe4515de50" loc="44:../../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe4515de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe4636f020"/>
            <typename><typedef-ref name="TMicro" ref="0x7efe4636f390"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe4515cca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe4515b670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe4515b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe4515bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7efe451a3590" loc="3:../../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7efe451a3590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe451a3910"/>
        <function-ref name="isInput" scoped="" ref="0x7efe451a3aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe451a3c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe451a3dc0"/>
        <function-ref name="get" scoped="" ref="0x7efe45154020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe451541b0"/>
        <function-ref name="set" scoped="" ref="0x7efe45154340"/>
        <function-ref name="clr" scoped="" ref="0x7efe451544d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7efe45152c50" loc="44:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7efe45152c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45151020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe451511b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7efe45151340"/>
        <function-ref name="toggle" scoped="" ref="0x7efe451514d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45151660"/>
        <function-ref name="getResistor" scoped="" ref="0x7efe451517f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45151980"/>
        <function-ref name="get" scoped="" ref="0x7efe45151b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7efe45151ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7efe45151e30"/>
        <function-ref name="set" scoped="" ref="0x7efe45150020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7efe451501b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7efe45150340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7efe451505d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45150760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7efe451539e0" loc="43:../../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7efe451539e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45153d60"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45152020"/>
        <function-ref name="toggle" scoped="" ref="0x7efe451521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45152340"/>
        <function-ref name="get" scoped="" ref="0x7efe451524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45152660"/>
        <function-ref name="set" scoped="" ref="0x7efe451527f0"/>
        <function-ref name="clr" scoped="" ref="0x7efe45152980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efe45155a20" loc="14:../../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efe45155a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe45155da0"/>
        <function-ref name="stop" scoped="" ref="0x7efe4514b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efe4513ccb0" loc="46:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efe4513ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe4513b0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe4513b230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe4513b3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe4513b550"/>
        <function-ref name="setCca" scoped="" ref="0x7efe4513b6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe4513b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7efe45138990" loc="47:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7efe45138990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efe45138d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7efe4513c020" loc="45:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7efe4513c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe4513c3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe4513c530"/>
        <function-ref name="modify" scoped="" ref="0x7efe4513c6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4513c850"/>
        <function-ref name="resend" scoped="" ref="0x7efe4513c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efe4513f6c0" loc="44:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efe4513f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe4513fa40"/>
        <function-ref name="stop" scoped="" ref="0x7efe4513fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7efe4513a150" loc="48:../../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7efe4513a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efe4513a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efe45132650" loc="51:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efe45132650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe451329d0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe45132b60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe45132cf0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe45132e80"/>
        <function-ref name="setCca" scoped="" ref="0x7efe45131030"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe451311c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7efe451287c0" loc="58:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efe451287c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe45126d50"/>
        <function-ref name="clear" scoped="" ref="0x7efe451254c0"/>
        <function-ref name="isValid" scoped="" ref="0x7efe45126620"/>
        <function-ref name="set" scoped="" ref="0x7efe45125bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7efe45110020" loc="78:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45110020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451103a0"/>
        <function-ref name="write" scoped="" ref="0x7efe45110530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7efe45110890" loc="79:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efe45110890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45110c10"/>
        <function-ref name="write" scoped="" ref="0x7efe45110da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7efe451315e0" loc="52:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7efe451315e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efe45131960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7efe45114530" loc="72:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efe45114530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe451148b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7efe45123880" loc="60:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7efe45123880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7efe45123c00"/>
        <function-ref name="disable" scoped="" ref="0x7efe45123d90"/>
        <function-ref name="captured" scoped="" ref="0x7efe45122020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7efe451221b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7efe451307f0" loc="55:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7efe451307f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe4512c090"/>
        <function-ref name="fired" scoped="" ref="0x7efe4512d090"/>
        <function-ref name="startAt" scoped="" ref="0x7efe4512da10"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe4512d550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe4512c550"/>
        <function-ref name="start" scoped="" ref="0x7efe4512f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe4512fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efe4512ca00" loc="56:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe4512ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe4512cd80"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe4512b020"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe4512b1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe4512b340"/>
        <function-ref name="getPower" scoped="" ref="0x7efe4512b4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe4512b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7efe45116550" loc="68:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe45116550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451168d0"/>
        <function-ref name="write" scoped="" ref="0x7efe45116a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7efe45116e00" loc="69:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efe45116e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe451151c0"/>
        <function-ref name="write" scoped="" ref="0x7efe45115350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7efe4510ad40" loc="83:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efe4510ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe4510d0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efe4510d270"/>
        <function-ref name="sfd" scoped="" ref="0x7efe4510d400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe451338c0" loc="50:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe451338c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe45133c40"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45133dd0"/>
        <function-ref name="modify" scoped="" ref="0x7efe45132020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe451321b0"/>
        <function-ref name="resend" scoped="" ref="0x7efe45132340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7efe45118d10" loc="66:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe45118d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe451170e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe45117270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe45117400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7efe45114c60" loc="73:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe45114c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45112020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efe4511b820" loc="62:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efe4511b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4511bba0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4511bd30"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4511a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4511a1b0"/>
        <function-ref name="get" scoped="" ref="0x7efe4511a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4511a4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4511a660"/>
        <function-ref name="clr" scoped="" ref="0x7efe4511a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe45134820" loc="48:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe45134820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe45134ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efe4512b9a0" loc="57:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe4512b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe4512bd20"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe45128020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe451281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7efe4511db30" loc="59:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efe4511db30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe45123020"/>
        <function-ref name="isSet" scoped="" ref="0x7efe451231b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe45123340"/>
        <function-ref name="set" scoped="" ref="0x7efe451234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7efe451123e0" loc="74:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe451123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45112960"/>
        <function-ref name="write" scoped="" ref="0x7efe45112af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efe45118020" loc="65:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efe45118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe451183a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe45118530"/>
        <function-ref name="request" scoped="" ref="0x7efe451186c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe45118850"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe451189e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7efe45122500" loc="61:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7efe45122500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45122980"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45122b10"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45122ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45122e30"/>
        <function-ref name="get" scoped="" ref="0x7efe4511b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4511b1b0"/>
        <function-ref name="set" scoped="" ref="0x7efe4511b340"/>
        <function-ref name="clr" scoped="" ref="0x7efe4511b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7efe4510f130" loc="80:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efe4510f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4510f4b0"/>
        <function-ref name="write" scoped="" ref="0x7efe4510f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7efe4510f9c0" loc="81:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efe4510f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4510fd40"/>
        <function-ref name="write" scoped="" ref="0x7efe4510e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7efe451156d0" loc="70:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efe451156d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45115a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7efe4511ab40" loc="63:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7efe4511ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45119020"/>
        <function-ref name="isInput" scoped="" ref="0x7efe451191b0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45119340"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe451194d0"/>
        <function-ref name="get" scoped="" ref="0x7efe45119660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe451197f0"/>
        <function-ref name="set" scoped="" ref="0x7efe45119980"/>
        <function-ref name="clr" scoped="" ref="0x7efe45119b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe4510d6c0" loc="84:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe4510d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe4510da40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe4510dbd0"/>
        <function-ref name="led1On" scoped="" ref="0x7efe4510dd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe4510c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe4510c1b0"/>
        <function-ref name="get" scoped="" ref="0x7efe4510c340"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe4510c4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe4510cb10"/>
        <function-ref name="set" scoped="" ref="0x7efe4510c660"/>
        <function-ref name="led0On" scoped="" ref="0x7efe4510c7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7efe4510c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7efe451115e0" loc="77:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efe451115e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45111960"/>
        <function-ref name="write" scoped="" ref="0x7efe45111af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efe45133020" loc="49:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efe45133020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe451333a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe45133530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7efe45117780" loc="67:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efe45117780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe45117b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe45117c90"/>
        <function-ref name="write" scoped="" ref="0x7efe45117e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe45116020"/>
        <function-ref name="readDone" scoped="" ref="0x7efe451161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7efe45115de0" loc="71:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efe45115de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45114180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7efe45112e80" loc="76:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efe45112e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45111220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7efe45131d70" loc="53:../../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7efe45131d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efe45130180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efe45070c60" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efe45070c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506e210"/>
        <function-ref name="write" scoped="" ref="0x7efe4506e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efe45079020" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efe45079020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efe45073c70" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe45073c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45072020"/>
        <function-ref name="write" scoped="" ref="0x7efe450721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efe4506d670" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efe4506d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506d9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4506db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efe45066e50" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efe45066e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45065210"/>
        <function-ref name="write" scoped="" ref="0x7efe450653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efe4506de50" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efe4506de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506c210"/>
        <function-ref name="write" scoped="" ref="0x7efe4506c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efe450592f0" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efe450592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45059670"/>
        <function-ref name="write" scoped="" ref="0x7efe45059800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efe4505c2f0" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efe4505c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505c670"/>
        <function-ref name="write" scoped="" ref="0x7efe4505c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efe45078370" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efe45078370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450786f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efe45061670" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efe45061670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450619f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45061b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efe4505d2f0" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe4505d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505d670"/>
        <function-ref name="write" scoped="" ref="0x7efe4505d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efe45072c60" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efe45072c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45071020"/>
        <function-ref name="write" scoped="" ref="0x7efe450711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efe45071c60" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efe45071c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45070020"/>
        <function-ref name="write" scoped="" ref="0x7efe450701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efe45067670" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efe45067670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450679f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45067b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efe4506ae50" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efe4506ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45068210"/>
        <function-ref name="write" scoped="" ref="0x7efe450683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efe4506c670" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efe4506c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506c9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4506cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efe4507b8f0" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe4507b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe4507bc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe4507be00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe4507a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efe45077d00" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe45077d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450750a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efe45075370" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efe45075370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efe45060a70" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe45060a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45060df0"/>
        <function-ref name="write" scoped="" ref="0x7efe4505f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efe45075ac0" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efe45075ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45075e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efe4505dad0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe4505dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505de50"/>
        <function-ref name="write" scoped="" ref="0x7efe4505c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efe45077060" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe45077060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450773e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efe45063e50" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efe45063e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45061210"/>
        <function-ref name="write" scoped="" ref="0x7efe450613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efe45071480" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efe45071480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45071800"/>
        <function-ref name="write" scoped="" ref="0x7efe45071990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efe45072480" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe45072480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45072800"/>
        <function-ref name="write" scoped="" ref="0x7efe45072990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efe4507a940" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efe4507a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4507acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efe45064e50" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efe45064e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45063210"/>
        <function-ref name="write" scoped="" ref="0x7efe450633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efe45065670" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efe45065670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450659f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45065b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efe45063670" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efe45063670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450639f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45063b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efe4505aad0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efe4505aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505ae50"/>
        <function-ref name="write" scoped="" ref="0x7efe45059020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efe4505cad0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efe4505cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505ce50"/>
        <function-ref name="write" scoped="" ref="0x7efe4505a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efe45068670" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efe45068670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450689f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45068b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efe45065e50" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efe45065e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45064210"/>
        <function-ref name="write" scoped="" ref="0x7efe450643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efe4505ead0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efe4505ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505ee50"/>
        <function-ref name="write" scoped="" ref="0x7efe4505d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efe4506b670" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efe4506b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506b9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4506bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efe45059ad0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efe45059ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe45059e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe45058020"/>
        <function-ref name="write" scoped="" ref="0x7efe450581b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe45058340"/>
        <function-ref name="readDone" scoped="" ref="0x7efe450584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efe4507a2f0" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efe4507a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4507a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efe45073490" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efe45073490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45073810"/>
        <function-ref name="write" scoped="" ref="0x7efe450739a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efe45070480" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efe45070480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45070800"/>
        <function-ref name="write" scoped="" ref="0x7efe45070990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efe45067e50" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efe45067e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45066210"/>
        <function-ref name="write" scoped="" ref="0x7efe450663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efe4506ce50" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efe4506ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506b210"/>
        <function-ref name="write" scoped="" ref="0x7efe4506b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efe45066670" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efe45066670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450669f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45066b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efe4506e670" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efe4506e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506e9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4506eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efe45079670" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efe45079670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450799f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efe4506ee50" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efe4506ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506d210"/>
        <function-ref name="write" scoped="" ref="0x7efe4506d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe4507dc30" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe4507dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4507b020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4507b1b0"/>
        <function-ref name="request" scoped="" ref="0x7efe4507b340"/>
        <function-ref name="granted" scoped="" ref="0x7efe4507b4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4507b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efe45074160" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efe45074160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450744e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efe45074e00" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efe45074e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450731c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efe4505e2f0" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efe4505e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505e670"/>
        <function-ref name="write" scoped="" ref="0x7efe4505e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efe4505fad0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efe4505fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505fe50"/>
        <function-ref name="write" scoped="" ref="0x7efe4505e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efe450776b0" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe450776b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45077a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efe4505f2f0" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe4505f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505f670"/>
        <function-ref name="write" scoped="" ref="0x7efe4505f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efe4505a2f0" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efe4505a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4505a670"/>
        <function-ref name="write" scoped="" ref="0x7efe4505a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efe45068e50" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efe45068e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45067210"/>
        <function-ref name="write" scoped="" ref="0x7efe450673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efe45064670" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efe45064670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450649f0"/>
        <function-ref name="write" scoped="" ref="0x7efe45064b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efe45079cc0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efe45079cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe450780a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efe450789c0" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efe450789c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45078d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efe4506be50" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efe4506be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506a210"/>
        <function-ref name="write" scoped="" ref="0x7efe4506a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efe450747b0" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efe450747b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45074b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efe4506a670" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efe4506a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4506a9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe4506ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efe45061e50" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efe45061e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45060610"/>
        <function-ref name="write" scoped="" ref="0x7efe450607a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efe450587a0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efe450587a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe45058b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe45058cb0"/>
        <function-ref name="write" scoped="" ref="0x7efe45058e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe45057020"/>
        <function-ref name="readDone" scoped="" ref="0x7efe450571b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7efe4504cdf0" loc="42:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efe4504cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe450491c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efe45049350"/>
        <function-ref name="sfd" scoped="" ref="0x7efe450494e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe450497c0" loc="43:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe450497c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe45049b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7efe45048020" loc="44:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7efe45048020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efe450483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efe4504c5c0" loc="41:../../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efe4504c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe4504c940"/>
        <function-ref name="stop" scoped="" ref="0x7efe4504cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7efe45040380" loc="54:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7efe45040380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe45040700"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45040890"/>
        <function-ref name="toggle" scoped="" ref="0x7efe45040a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45040bb0"/>
        <function-ref name="get" scoped="" ref="0x7efe45040d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4503e020"/>
        <function-ref name="set" scoped="" ref="0x7efe4503e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4503e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7efe45038b90" loc="64:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efe45038b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efe45037020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efe450371b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efe45037340"/>
        <function-ref name="syncDone" scoped="" ref="0x7efe450374d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efe45037660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efe450377f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efe45037980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efe45037b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efe45037ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efe45037e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efe45036020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efe450361b0"/>
        <function-ref name="sync" scoped="" ref="0x7efe45036340"/>
        <function-ref name="getChannel" scoped="" ref="0x7efe450365d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efe45036760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7efe450219d0" loc="148:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7efe450219d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe45021d50"/>
        <function-ref name="runTask" scoped="" ref="0x7efe45020020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7efe45036d70" loc="65:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7efe45036d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe45034330"/>
        <function-ref name="clear" scoped="" ref="0x7efe45034a60"/>
        <function-ref name="isValid" scoped="" ref="0x7efe45035ba0"/>
        <function-ref name="set" scoped="" ref="0x7efe45032210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7efe4503e6b0" loc="55:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7efe4503e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe4503ea30"/>
        <function-ref name="isInput" scoped="" ref="0x7efe4503ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x7efe4503ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe4503d020"/>
        <function-ref name="get" scoped="" ref="0x7efe4503d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe4503d340"/>
        <function-ref name="set" scoped="" ref="0x7efe4503d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7efe4503d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7efe45031cb0" loc="69:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efe45031cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe450300a0"/>
        <function-ref name="write" scoped="" ref="0x7efe45030230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7efe45030590" loc="70:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efe45030590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45030910"/>
        <function-ref name="write" scoped="" ref="0x7efe45030aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7efe4502f6d0" loc="72:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efe4502f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4502fa50"/>
        <function-ref name="write" scoped="" ref="0x7efe4502fbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efe45039330" loc="62:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe45039330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe450396b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe45039840"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe450399d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe45039b60"/>
        <function-ref name="getPower" scoped="" ref="0x7efe45039cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe45039e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7efe45043550" loc="49:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7efe45043550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe450438d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7efe45043a60"/>
        <function-ref name="sfd" scoped="" ref="0x7efe45043bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7efe4503a3a0" loc="60:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efe4503a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4503a720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7efe45041020" loc="53:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7efe45041020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7efe450413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7efe45041530"/>
        <function-ref name="toggle" scoped="" ref="0x7efe450416c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7efe45041850"/>
        <function-ref name="get" scoped="" ref="0x7efe450419e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7efe45041b70"/>
        <function-ref name="set" scoped="" ref="0x7efe45041d00"/>
        <function-ref name="clr" scoped="" ref="0x7efe45040020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7efe4502e020" loc="73:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe4502e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4502e3a0"/>
        <function-ref name="write" scoped="" ref="0x7efe4502e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe45044620" loc="47:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe45044620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe450449a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efe450381e0" loc="63:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe450381e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe45038560"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe450386f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe45038880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe45042020" loc="50:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe45042020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe450423a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7efe4503c6e0" loc="58:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7efe4503c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe4503ca60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe4503cbf0"/>
        <function-ref name="request" scoped="" ref="0x7efe4503cd80"/>
        <function-ref name="granted" scoped="" ref="0x7efe4503b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe4503b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7efe45030e00" loc="71:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efe45030e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe4502f1c0"/>
        <function-ref name="write" scoped="" ref="0x7efe4502f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7efe4503b530" loc="59:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efe4503b530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe4503b8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe4503ba40"/>
        <function-ref name="write" scoped="" ref="0x7efe4503bbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe4503bd60"/>
        <function-ref name="readDone" scoped="" ref="0x7efe4503a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7efe4502e8b0" loc="74:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efe4502e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe4502ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7efe450427c0" loc="51:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7efe450427c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7efe45042b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe4502d150" loc="76:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe4502d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe4502d4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe4502d660"/>
        <function-ref name="led1On" scoped="" ref="0x7efe4502d7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe4502d980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe4502db10"/>
        <function-ref name="get" scoped="" ref="0x7efe4502dca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe4502de30"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe4502c4d0"/>
        <function-ref name="set" scoped="" ref="0x7efe4502c020"/>
        <function-ref name="led0On" scoped="" ref="0x7efe4502c1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7efe4502c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7efe450313e0" loc="68:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efe450313e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe45031760"/>
        <function-ref name="write" scoped="" ref="0x7efe450318f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7efe45032b10" loc="67:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efe45032b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45031020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7efe4503da50" loc="56:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7efe4503da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7efe4503ddd0"/>
        <function-ref name="disable" scoped="" ref="0x7efe4503c020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7efe4503c1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7efe4503c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7efe4503aad0" loc="61:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe4503aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe45039020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7efe45044ca0" loc="48:../../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7efe45044ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7efe450430a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe45043230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efe44fc0a70" loc="44:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe44fc0a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efe44fc0df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efe44fc4670" loc="41:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe44fc49f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe44fc4b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe44fc4d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe44fc1020"/>
        <function-ref name="getPower" scoped="" ref="0x7efe44fc11b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe44fc1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efe44fbf550" loc="46:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe44fbf550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe44fbeb00"/>
        <function-ref name="clear" scoped="" ref="0x7efe44fbd2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7efe44fbe3d0"/>
        <function-ref name="set" scoped="" ref="0x7efe44fbd9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7efe44fc00c0" loc="43:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fc00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe44fc0440"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe44fc05d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe44fc0760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7efe44fb7480" loc="48:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efe44fb7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44fb7800"/>
        <function-ref name="isSet" scoped="" ref="0x7efe44fb7990"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44fb7b20"/>
        <function-ref name="set" scoped="" ref="0x7efe44fb7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efe44fbb660" loc="47:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efe44fbb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe44fbace0"/>
        <function-ref name="clear" scoped="" ref="0x7efe44fb9460"/>
        <function-ref name="isValid" scoped="" ref="0x7efe44fba5b0"/>
        <function-ref name="set" scoped="" ref="0x7efe44fb9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efe44fc16e0" loc="42:../../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efe44fc16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe44fc1a60"/>
        <function-ref name="noAck" scoped="" ref="0x7efe44fc1bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe44fc1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7efe44fb1020" loc="49:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7efe44fb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7efe44fb13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7efe44fb6d20" loc="46:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44fb6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe44fb30e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe44fb3270"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe44fb3400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe44fb3590"/>
        <function-ref name="getPower" scoped="" ref="0x7efe44fb3720"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe44fb38b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efe44fa84a0" loc="56:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe44fa84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44fa8820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe44fa89b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44fa8b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44fa8cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe44fa8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7efe44fb1a80" loc="51:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7efe44fb1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe44faf020"/>
        <function-ref name="clear" scoped="" ref="0x7efe44faf750"/>
        <function-ref name="isValid" scoped="" ref="0x7efe44fb08d0"/>
        <function-ref name="set" scoped="" ref="0x7efe44fafe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7efe44fb2640" loc="48:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44fb2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe44fb29c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe44fb2b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe44fb2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7efe44fa98b0" loc="53:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7efe44fa98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44fa9c30"/>
        <function-ref name="isSet" scoped="" ref="0x7efe44fa9dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44fa8020"/>
        <function-ref name="set" scoped="" ref="0x7efe44fa81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7efe44fa4820" loc="57:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7efe44fa4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44fa64c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7efe44fa6b80" loc="58:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7efe44fa6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44fa37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7efe44fadaf0" loc="52:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7efe44fadaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7efe44fab0d0"/>
        <function-ref name="clear" scoped="" ref="0x7efe44fab800"/>
        <function-ref name="isValid" scoped="" ref="0x7efe44fac970"/>
        <function-ref name="set" scoped="" ref="0x7efe44fa9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efe44fb3c50" loc="47:../../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efe44fb3c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe44fb2020"/>
        <function-ref name="noAck" scoped="" ref="0x7efe44fb21b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe44fb2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efe44f534e0" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efe44f534e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44f4a150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efe44f4a7c0" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe44f4a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44f49620"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe44f47020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe44f49ae0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe44f474e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efe44f42020" loc="46:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efe44f42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44f3e630"/>
        <function-ref name="fired" scoped="" ref="0x7efe44f41a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe44f40920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe44f404a0"/>
        <function-ref name="getdt" scoped="" ref="0x7efe44f3d020"/>
        <function-ref name="gett0" scoped="" ref="0x7efe44f3eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44f40020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe44f42c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe44f3e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe44f41110"/>
        <function-ref name="stop" scoped="" ref="0x7efe44f415e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efe44f3d610" loc="47:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efe44f3d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44f3c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44f43130" loc="45:../../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44f43130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44f434b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe44f0e870" loc="44:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe44f0e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44f0b090"/>
        <function-ref name="fired" scoped="" ref="0x7efe44f0c090"/>
        <function-ref name="startAt" scoped="" ref="0x7efe44f0ca10"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44f0c550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe44f0b550"/>
        <function-ref name="start" scoped="" ref="0x7efe44f0d6a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe44f0dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44f0e020" loc="43:../../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44f0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44f0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe442f2260" loc="44:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe442f2260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe442f0b30"/>
        <function-ref name="fired" scoped="" ref="0x7efe442f1a60"/>
        <function-ref name="startAt" scoped="" ref="0x7efe442f04e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe442f0020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe442ef020"/>
        <function-ref name="start" scoped="" ref="0x7efe442f1090"/>
        <function-ref name="stop" scoped="" ref="0x7efe442f15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe442f39d0" loc="43:../../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe442f39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe442f3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7efe442daa80" loc="41:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efe442daa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe442dae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe442d9020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe442d91b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe442d9340"/>
        <function-ref name="fired" scoped="" ref="0x7efe442d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7efe442dc020" loc="39:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efe442dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe442dc3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe442dc530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe442dc6c0"/>
        <function-ref name="get" scoped="" ref="0x7efe442dc850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe442dc9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe442dcb70"/>
        <function-ref name="getMode" scoped="" ref="0x7efe442dcd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe442db020"/>
        <function-ref name="overflow" scoped="" ref="0x7efe442db1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7efe442db340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe442db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7efe442db760" loc="40:../../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe442db760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe442dbae0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe442dbc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe442dbe00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe442da020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe442da1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe442da340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe442da4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe442da660"/>
        <function-ref name="setControl" scoped="" ref="0x7efe442da7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7efe442d0760" loc="49:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7efe442d0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7efe442d0ae0"/>
        <function-ref name="setEvent" scoped="" ref="0x7efe442d0c70"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7efe442d0e00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7efe442cf020"/>
        <function-ref name="fired" scoped="" ref="0x7efe442cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7efe442d3dd0" loc="47:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7efe442d3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe442d2180"/>
        <function-ref name="setClockSource" scoped="" ref="0x7efe442d2310"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe442d24a0"/>
        <function-ref name="get" scoped="" ref="0x7efe442d2630"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe442d27c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe442d2950"/>
        <function-ref name="getMode" scoped="" ref="0x7efe442d2ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe442d2c70"/>
        <function-ref name="overflow" scoped="" ref="0x7efe442d2e00"/>
        <function-ref name="setMode" scoped="" ref="0x7efe442d1020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7efe442d11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe442d7bf0" loc="46:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe442d7bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe442d34e0"/>
        <function-ref name="fired" scoped="" ref="0x7efe442d44e0"/>
        <function-ref name="startAt" scoped="" ref="0x7efe442d4e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe442d49a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe442d39a0"/>
        <function-ref name="start" scoped="" ref="0x7efe442d6a80"/>
        <function-ref name="stop" scoped="" ref="0x7efe442d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe442d7360" loc="45:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe442d7360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe442d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7efe442d1440" loc="48:../../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7efe442d1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7efe442d17c0"/>
        <function-ref name="getControl" scoped="" ref="0x7efe442d1950"/>
        <function-ref name="enableEvents" scoped="" ref="0x7efe442d1ae0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7efe442d1c70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7efe442d1e00"/>
        <function-ref name="disableEvents" scoped="" ref="0x7efe442d0020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7efe442d01b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7efe442d0340"/>
        <function-ref name="setControl" scoped="" ref="0x7efe442d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efe44f2db70" loc="43:../../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe44f2db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44f2a9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe44f29360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe44f2ae70"/>
        <function-ref name="overflow" scoped="" ref="0x7efe44f29820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7efe44f23b90" loc="63:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7efe44f23b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44f219d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe44f204e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe44f20020"/>
        <function-ref name="overflow" scoped="" ref="0x7efe44f209a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7efe44f25610" loc="62:../../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe44f25610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44f245b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe44f23020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe44f24a70"/>
        <function-ref name="overflow" scoped="" ref="0x7efe44f234e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7efe442ec5f0" loc="61:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe442ec5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe442eae50"/>
        <function-ref name="fired" scoped="" ref="0x7efe442ebe00"/>
        <function-ref name="startAt" scoped="" ref="0x7efe442ea800"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe442ea340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe442e9340"/>
        <function-ref name="start" scoped="" ref="0x7efe442eb430"/>
        <function-ref name="stop" scoped="" ref="0x7efe442eb940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7efe442e7d20" loc="73:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7efe442e7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe463717d0"/>
            <typename><typedef-ref name="T32khz" ref="0x7efe46371b40"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe442e3670"/>
        <function-ref name="fired" scoped="" ref="0x7efe442e4550"/>
        <function-ref name="startAt" scoped="" ref="0x7efe442e3020"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe442e4a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe442e3b30"/>
        <function-ref name="start" scoped="" ref="0x7efe442e5b60"/>
        <function-ref name="stop" scoped="" ref="0x7efe442e4090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efe442e99b0" loc="68:../../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe442e99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe442e87e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe442e71b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe442e8ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7efe442e7670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7efe44ed79c0" loc="74:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7efe44ed79c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe44ed7d40"/>
        <function-ref name="runTask" scoped="" ref="0x7efe44ed6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7efe44edd850" loc="49:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7efe44edd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44ed7090"/>
        <function-ref name="fired" scoped="" ref="0x7efe44eda090"/>
        <function-ref name="startAt" scoped="" ref="0x7efe44edaa10"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44eda550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7efe44ed7550"/>
        <function-ref name="start" scoped="" ref="0x7efe44edc6a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe44edcbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efe44ee22f0" loc="48:../../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe44ee22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44ede870"/>
        <function-ref name="fired" scoped="" ref="0x7efe44ee1e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe44edfc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe44edf780"/>
        <function-ref name="getdt" scoped="" ref="0x7efe44edd1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7efe44edecf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44edf300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe44ee1020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe44ede260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe44ee14f0"/>
        <function-ref name="stop" scoped="" ref="0x7efe44ee19c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7efe44e86a00" loc="71:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7efe44e86a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe44e86d80"/>
        <function-ref name="runTask" scoped="" ref="0x7efe44e85020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7efe44e8b640" loc="49:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7efe44e8b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44e87c40"/>
        <function-ref name="fired" scoped="" ref="0x7efe44e881e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe44e87020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe44e88ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efe44e86590"/>
        <function-ref name="gett0" scoped="" ref="0x7efe44e86110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44e88660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe44e8a390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe44e87630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe44e8a860"/>
        <function-ref name="stop" scoped="" ref="0x7efe44e8ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efe44e91150" loc="48:../../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe44e91150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44e8d700"/>
        <function-ref name="fired" scoped="" ref="0x7efe44e90c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe44e8ea50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe44e8e5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7efe44e8b090"/>
        <function-ref name="gett0" scoped="" ref="0x7efe44e8dba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44e8e110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe44e91d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe44e8d0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe44e902a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe44e90790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7efe44e822b0" loc="48:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7efe44e822b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44e81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7efe44e81690" loc="49:../../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7efe44e81690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7efe44e805b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7efe44e7f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7efe44e80a70"/>
        <function-ref name="overflow" scoped="" ref="0x7efe44e7f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efe44e788c0" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe44e788c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44e65cf0"/>
        <function-ref name="fired" scoped="" ref="0x7efe44e66320"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe44e650d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe44e66c20"/>
        <function-ref name="getdt" scoped="" ref="0x7efe44e63660"/>
        <function-ref name="gett0" scoped="" ref="0x7efe44e631e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44e667a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe44e674e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe44e656e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe44e679b0"/>
        <function-ref name="stop" scoped="" ref="0x7efe44e67e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7efe44e6f2c0" loc="49:../../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7efe44e6f2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44e6c870"/>
        <function-ref name="fired" scoped="" ref="0x7efe44e6ee40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe44e6dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe44e6d780"/>
        <function-ref name="getdt" scoped="" ref="0x7efe44e6a1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7efe44e6ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44e6d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe44e6e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe44e6c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe44e6e4f0"/>
        <function-ref name="stop" scoped="" ref="0x7efe44e6e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7efe44e53c60" loc="69:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7efe44e53c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e52210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e523a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7efe44e5d020" loc="47:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7efe44e5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7efe44e57c70" loc="63:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7efe44e57c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e55020"/>
        <function-ref name="write" scoped="" ref="0x7efe44e551b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7efe44e51670" loc="72:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7efe44e51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e519f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e51b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7efe44e4ae50" loc="86:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7efe44e4ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e48210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e483a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7efe44e51e50" loc="73:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7efe44e51e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4f210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7efe44e3d2f0" loc="108:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7efe44e3d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e3d670"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7efe44e3f2f0" loc="104:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7efe44e3f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e3f670"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7efe44e5b370" loc="50:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7efe44e5b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7efe44e45670" loc="93:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7efe44e45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e459f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e45b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7efe44e402f0" loc="102:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7efe44e402f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e40670"/>
        <function-ref name="write" scoped="" ref="0x7efe44e40800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7efe44e55c60" loc="65:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7efe44e55c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e54020"/>
        <function-ref name="write" scoped="" ref="0x7efe44e541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7efe44e54c60" loc="67:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7efe44e54c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e53020"/>
        <function-ref name="write" scoped="" ref="0x7efe44e531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7efe44e4b670" loc="83:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7efe44e4b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4b9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7efe44e4de50" loc="79:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7efe44e4de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4c210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7efe44e4f670" loc="74:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7efe44e4f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4f9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7efe44e5f970" loc="42:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7efe44e5f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7efe44e5fcf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7efe44e5fe80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7efe44e5e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7efe44e5ad00" loc="54:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7efe44e5ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e590a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7efe44e59370" loc="55:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7efe44e59370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7efe44e44a70" loc="95:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7efe44e44a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e44df0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7efe44e59ac0" loc="56:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7efe44e59ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e59e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7efe44e40ad0" loc="103:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7efe44e40ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e40e50"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7efe44e5a060" loc="52:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7efe44e5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7efe44e46e50" loc="92:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7efe44e46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e45210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e453a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7efe44e54480" loc="66:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7efe44e54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e54800"/>
        <function-ref name="write" scoped="" ref="0x7efe44e54990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7efe44e55480" loc="64:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7efe44e55480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e55800"/>
        <function-ref name="write" scoped="" ref="0x7efe44e55990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7efe44e5e950" loc="46:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7efe44e5e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7efe44e47e50" loc="90:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7efe44e47e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e46210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7efe44e48670" loc="87:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7efe44e48670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e489f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e48b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7efe44e46670" loc="91:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7efe44e46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e469f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e46b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7efe44e3ead0" loc="107:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7efe44e3ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e3ee50"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7efe44e3fad0" loc="105:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7efe44e3fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e3fe50"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7efe44e4c670" loc="80:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7efe44e4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4c9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7efe44e48e50" loc="88:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7efe44e48e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e47210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e473a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7efe44e41ad0" loc="101:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7efe44e41ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e41e50"/>
        <function-ref name="write" scoped="" ref="0x7efe44e40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7efe44e4e670" loc="76:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7efe44e4e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4e9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7efe44e3dad0" loc="111:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7efe44e3dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe44e3de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe44e3c020"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe44e3c340"/>
        <function-ref name="readDone" scoped="" ref="0x7efe44e3c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7efe44e5e300" loc="45:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7efe44e5e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7efe44e57490" loc="62:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7efe44e57490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e57810"/>
        <function-ref name="write" scoped="" ref="0x7efe44e579a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7efe44e53480" loc="68:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7efe44e53480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e53800"/>
        <function-ref name="write" scoped="" ref="0x7efe44e53990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7efe44e4be50" loc="84:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7efe44e4be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4a210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7efe44e4fe50" loc="75:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7efe44e4fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4e210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7efe44e4a670" loc="85:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7efe44e4a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4a9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7efe44e52670" loc="70:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7efe44e52670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e529f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e52b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7efe44e5d670" loc="48:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7efe44e5d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7efe44e52e50" loc="71:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7efe44e52e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e51210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe44e60d00" loc="41:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe44e60d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe44e5f0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe44e5f230"/>
        <function-ref name="request" scoped="" ref="0x7efe44e5f3c0"/>
        <function-ref name="granted" scoped="" ref="0x7efe44e5f550"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe44e5f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7efe44e58160" loc="57:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7efe44e58160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e584e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7efe44e58e00" loc="59:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7efe44e58e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e571c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7efe44e412f0" loc="100:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7efe44e412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e41670"/>
        <function-ref name="write" scoped="" ref="0x7efe44e41800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7efe44e43ad0" loc="99:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7efe44e43ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e43e50"/>
        <function-ref name="write" scoped="" ref="0x7efe44e41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7efe44e5a6b0" loc="53:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7efe44e5a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5aa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7efe44e432f0" loc="96:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7efe44e432f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e43670"/>
        <function-ref name="write" scoped="" ref="0x7efe44e43800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7efe44e3e2f0" loc="106:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7efe44e3e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e3e670"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7efe44e4ce50" loc="81:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7efe44e4ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4b210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7efe44e47670" loc="89:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7efe44e47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e479f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e47b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7efe44e5dcc0" loc="49:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7efe44e5dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7efe44e5b9c0" loc="51:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7efe44e5b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e5bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7efe44e4ee50" loc="77:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7efe44e4ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4d210"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7efe44e587b0" loc="58:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7efe44e587b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7efe44e58b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7efe44e4d670" loc="78:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7efe44e4d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e4d9f0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e4db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7efe44e45e50" loc="94:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7efe44e45e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7efe44e44610"/>
        <function-ref name="write" scoped="" ref="0x7efe44e447a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7efe44e3c7a0" loc="112:../../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7efe44e3c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7efe44e3cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7efe44e3ccb0"/>
        <function-ref name="write" scoped="" ref="0x7efe44e3ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7efe44e3b020"/>
        <function-ref name="readDone" scoped="" ref="0x7efe44e3b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7efe44e12a20" loc="46:../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efe44e12a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efe44e12da0"/>
        <function-ref name="rand32" scoped="" ref="0x7efe44e11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7efe44e10920" loc="45:../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7efe44e10920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44e12560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44e169a0" loc="44:../../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44e169a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44e16d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7efe44e0ba20" loc="48:../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efe44e0ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efe44e0bda0"/>
        <function-ref name="rand32" scoped="" ref="0x7efe44e0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7efe44e0c940" loc="47:../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7efe44e0c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44e0b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44e0c080" loc="46:../../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44e0c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44e0c400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efe44e14aa0" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efe44e14aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe44e14e20"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe44e0d020"/>
        <function-ref name="isState" scoped="" ref="0x7efe44e0d1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe44e0d340"/>
        <function-ref name="requestState" scoped="" ref="0x7efe44e0d4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7efe44e0d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe44df4020" loc="44:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe44df4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44df43a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44df4530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44df46c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44df4850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44df49e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe44df5220" loc="40:../../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe44df5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44df55a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44df5730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44df58c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44df5a50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44df5be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe44dece60" loc="45:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe44dece60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44deb210"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44deb3a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44deb530"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44deb6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44deb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe44defa20" loc="40:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe44defa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44defda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44dec020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44dec1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44dec340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44dec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7efe44dea8f0" loc="47:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7efe44dea8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7efe44deac70"/>
        <function-ref name="rand32" scoped="" ref="0x7efe44deae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44dec750" loc="41:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44dec750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44decad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efe44de8170" loc="48:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44de8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe44de84f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe44de8680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe44de8810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7efe44debae0" loc="46:../../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efe44debae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe44debe60"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe44dea020"/>
        <function-ref name="isState" scoped="" ref="0x7efe44dea1b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe44dea340"/>
        <function-ref name="requestState" scoped="" ref="0x7efe44dea4d0"/>
        <function-ref name="forceState" scoped="" ref="0x7efe44dea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efe44dd8690" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efe44dd8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe44dd8a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe44dd8ba0"/>
        <function-ref name="isState" scoped="" ref="0x7efe44dd8d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe44dd7020"/>
        <function-ref name="requestState" scoped="" ref="0x7efe44dd71b0"/>
        <function-ref name="forceState" scoped="" ref="0x7efe44dd7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efe44dd1950" loc="47:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efe44dd1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44dd1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe44dd4aa0" loc="42:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe44dd4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44dd4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7efe44dd1200" loc="43:../../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7efe44dd1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44dd1580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efe44dcc3f0" loc="49:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efe44dcc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44dcc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44dcdb70" loc="45:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44dcdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44dcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe44dd0e30" loc="43:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe44dd0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44dcd1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efe44dcca70" loc="50:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44dcca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe44dccdf0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe44dcb020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe44dcb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7efe44dcd570" loc="44:../../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7efe44dcd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44dcd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efe44d9d020" loc="75:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efe44d9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe44d9d6b0" loc="76:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe44d9d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d9da30"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d9dbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d9dd50"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d9c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d9c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe44da28e0" loc="65:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe44da28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44da2c60"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44da2df0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44da1020"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44da11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44da1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efe44da1c90" loc="68:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efe44da1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44da00a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44da0230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44da03c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44da0550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44da06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe44da15e0" loc="66:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe44da15e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44da1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe44da3be0" loc="64:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe44da3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe44da2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe44da21b0"/>
        <function-ref name="request" scoped="" ref="0x7efe44da2340"/>
        <function-ref name="granted" scoped="" ref="0x7efe44da24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe44da2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efe44da0a50" loc="69:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efe44da0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44da0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efe44d9e170" loc="71:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efe44d9e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44d9e4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe44d9e680"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d9e810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d9e9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe44d9eb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe44d93d70" loc="58:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe44d93d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d92180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d92310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d924a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d92630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d927c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efe44d92b10" loc="59:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efe44d92b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d91020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7efe44d63db0" loc="184:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7efe44d63db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe44d62180"/>
        <function-ref name="runTask" scoped="" ref="0x7efe44d62310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efe44d912f0" loc="60:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44d912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe44d91670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe44d91800"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe44d91990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe44d91b20"/>
        <function-ref name="getPower" scoped="" ref="0x7efe44d91cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe44d91e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7efe44d95a20" loc="51:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7efe44d95a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d95da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d94020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d941b0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d94340"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d944d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7efe44d8fb70" loc="62:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7efe44d8fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efe44d8e020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efe44d8e1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efe44d8e340"/>
        <function-ref name="dequeue" scoped="" ref="0x7efe44d8e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efe44d8f170" loc="61:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44d8f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d8f4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe44d8f680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe44d8f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7efe44d95370" loc="49:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7efe44d95370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d956f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7efe44d977b0" loc="46:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7efe44d977b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe44d97b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe44d97cc0"/>
        <function-ref name="request" scoped="" ref="0x7efe44d97e50"/>
        <function-ref name="granted" scoped="" ref="0x7efe44d96020"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe44d961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7efe44d964d0" loc="48:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7efe44d964d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d96850"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d969e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d96b70"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d96d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7efe44d94840" loc="52:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7efe44d94840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d94bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7efe44d93020" loc="54:../../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7efe44d93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44d933a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe44d93530"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d936c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d93850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe44d939e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7efe44d43dd0" loc="44:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7efe44d43dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7efe44d42180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7efe44d42410" loc="45:../../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7efe44d42410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7efe44d42790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7efe44d42920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7efe44d42ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7efe44d42c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7efe44d37b80" loc="46:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7efe44d37b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe44d36020"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe44d361b0"/>
        <function-ref name="start" scoped="" ref="0x7efe44d36340"/>
        <function-ref name="stop" scoped="" ref="0x7efe44d364d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe44d35860" loc="51:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe44d35860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d35be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d35d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d34020"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d341b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d34340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efe44d34690" loc="52:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efe44d34690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d34a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe44d3bce0" loc="43:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe44d3bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d380a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d38230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d383c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d38550"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d386e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efe44d37080" loc="45:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efe44d37080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efe44d37400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efe44d37590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efe44d37720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efe44d378b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7efe44d36800" loc="47:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7efe44d36800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe44d36b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe44d36d10"/>
        <function-ref name="isState" scoped="" ref="0x7efe44d35020"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe44d351b0"/>
        <function-ref name="requestState" scoped="" ref="0x7efe44d35340"/>
        <function-ref name="forceState" scoped="" ref="0x7efe44d354d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7efe44d34d90" loc="53:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7efe44d34d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7efe44d32180"/>
        <function-ref name="stopDone" scoped="" ref="0x7efe44d32310"/>
        <function-ref name="start" scoped="" ref="0x7efe44d324a0"/>
        <function-ref name="stop" scoped="" ref="0x7efe44d32630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe44d38980" loc="44:../../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe44d38980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d38d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7efe44d2f2d0" loc="41:../../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7efe44d2f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7efe44d2f650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7efe44d2f7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7efe44d2f970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7efe44d2fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7efe44d31580" loc="67:../../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7efe44d31580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7efe44d31900"/>
        <function-ref name="toIdle" scoped="" ref="0x7efe44d31a90"/>
        <function-ref name="isState" scoped="" ref="0x7efe44d31c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7efe44d31db0"/>
        <function-ref name="requestState" scoped="" ref="0x7efe44d30020"/>
        <function-ref name="forceState" scoped="" ref="0x7efe44d301b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe44d22d70" loc="45:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe44d22d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d21180"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d21310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d214a0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d21630"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d217c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe44d25350" loc="40:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe44d25350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d256d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d25860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d259f0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d25b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d25d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efe44d22020" loc="41:../../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efe44d22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efe44d223a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7efe44d22530"/>
        <function-ref name="getRetries" scoped="" ref="0x7efe44d226c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efe44d22850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efe44d229e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7efe44d1d1c0" loc="44:../../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7efe44d1d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe44d1d540"/>
        <function-ref name="noAck" scoped="" ref="0x7efe44d1d6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe44d1d860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7efe44d20410" loc="40:../../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7efe44d20410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7efe44d20790"/>
        <function-ref name="setRetries" scoped="" ref="0x7efe44d20920"/>
        <function-ref name="getRetries" scoped="" ref="0x7efe44d20ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7efe44d20c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7efe44d20dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7efe44cfd690" loc="59:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7efe44cfd690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44cfda10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7efe44cff860" loc="58:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7efe44cff860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44cffbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44cffd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44cfd020"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44cfd1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44cfd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7efe44cfb610" loc="62:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7efe44cfb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7efe44cfb990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7efe44cfbb20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7efe44cfbcb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7efe44cfbe40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7efe44cfa020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7efe44cfa1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7efe44cfa340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7efe44cfa4d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7efe44cfa660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7efe44cfa7f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7efe44cfa980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7efe44cfab10"/>
        <function-ref name="sync" scoped="" ref="0x7efe44cfaca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7efe44cf9020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7efe44cf91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7efe44d008b0" loc="54:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7efe44d008b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe44d00c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe44d00dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe44cff020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe44cff1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7efe44cff340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe44cff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7efe44d01ce0" loc="53:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7efe44d01ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7efe44d000a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7efe44cf81f0" loc="64:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7efe44cf81f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7efe44cf8570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7efe44cf8700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7efe44cf8890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7efe44cf8a20"/>
        <function-ref name="setCca" scoped="" ref="0x7efe44cf8bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7efe44cf8d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe44d02a80" loc="52:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe44d02a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44d02e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe44d01020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d011b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d01340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe44d014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe44d05020" loc="48:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe44d05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44d053a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44d05530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44d056c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44d05850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44d059e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7efe44d04df0" loc="50:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7efe44d04df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d031c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7efe44cfdce0" loc="60:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7efe44cfdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7efe44cfc0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7efe44cfc230"/>
        <function-ref name="getRssi" scoped="" ref="0x7efe44cfc3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7efe44cfc550"/>
        <function-ref name="getPower" scoped="" ref="0x7efe44cfc6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7efe44cfc870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7efe44cf94d0" loc="63:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7efe44cf94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7efe44cf9950"/>
        <function-ref name="changed" scoped="" ref="0x7efe44cf9ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7efe44cf9c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7efe44cf9e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7efe44cfcb70" loc="61:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7efe44cfcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7efe44cfb020"/>
        <function-ref name="getHeader" scoped="" ref="0x7efe44cfb1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7efe44cfb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe44d04210" loc="49:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe44d04210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44d04590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7efe44cf7d30" loc="67:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7efe44cf7d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7efe44cf60e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7efe44cf6270"/>
        <function-ref name="led1On" scoped="" ref="0x7efe44cf6400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7efe44cf6590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7efe44cf6720"/>
        <function-ref name="get" scoped="" ref="0x7efe44cf68b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7efe44cf6a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7efe44cf51b0"/>
        <function-ref name="set" scoped="" ref="0x7efe44cf6bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7efe44cf6d60"/>
        <function-ref name="led2On" scoped="" ref="0x7efe44cf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe44d03470" loc="51:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe44d03470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe44d037f0"/>
        <function-ref name="source" scoped="" ref="0x7efe44d03980"/>
        <function-ref name="address" scoped="" ref="0x7efe44d03b10"/>
        <function-ref name="destination" scoped="" ref="0x7efe44d03ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7efe44d03e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe44d02020"/>
        <function-ref name="type" scoped="" ref="0x7efe44d021b0"/>
        <function-ref name="setType" scoped="" ref="0x7efe44d02340"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe44d024d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe44d02660"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe44d027f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7efe44cf70f0" loc="66:../../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7efe44cf70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7efe44cf7470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7efe44cf7600"/>
        <function-ref name="request" scoped="" ref="0x7efe44cf7790"/>
        <function-ref name="granted" scoped="" ref="0x7efe44cf7920"/>
        <function-ref name="isOwner" scoped="" ref="0x7efe44cf7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe44be5020" loc="49:../../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe44be5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44be53a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44be5530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44be56c0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44be5850"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44be59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe44be5c30" loc="50:../../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe44be5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44be4020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe44be41b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44be4340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44be44d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe44be4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe44be48b0" loc="51:../../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe44be48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe44be4c30"/>
        <function-ref name="source" scoped="" ref="0x7efe44be4dc0"/>
        <function-ref name="address" scoped="" ref="0x7efe44be3020"/>
        <function-ref name="destination" scoped="" ref="0x7efe44be31b0"/>
        <function-ref name="setSource" scoped="" ref="0x7efe44be3340"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe44be34d0"/>
        <function-ref name="type" scoped="" ref="0x7efe44be3660"/>
        <function-ref name="setType" scoped="" ref="0x7efe44be37f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe44be3980"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe44be3b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe44be3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efe44be2020" loc="52:../../../../tos/system/AMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efe44be2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe44be23a0"/>
        <function-ref name="noAck" scoped="" ref="0x7efe44be2530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe44be26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe44211b60" loc="49:../../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe44211b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe4420f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe4420f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe4420f340"/>
        <function-ref name="cancel" scoped="" ref="0x7efe4420f4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe4420f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe4420f8b0" loc="50:../../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe4420f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe4420fc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe4420fdc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe4420e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe4420e1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe4420e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe4420e590" loc="51:../../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe4420e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe4420e910"/>
        <function-ref name="source" scoped="" ref="0x7efe4420eaa0"/>
        <function-ref name="address" scoped="" ref="0x7efe4420ec30"/>
        <function-ref name="destination" scoped="" ref="0x7efe4420edc0"/>
        <function-ref name="setSource" scoped="" ref="0x7efe4420d020"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe4420d1b0"/>
        <function-ref name="type" scoped="" ref="0x7efe4420d340"/>
        <function-ref name="setType" scoped="" ref="0x7efe4420d4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe4420d660"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe4420d7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe4420d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7efe4420dc10" loc="52:../../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7efe4420dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7efe4420c020"/>
        <function-ref name="noAck" scoped="" ref="0x7efe4420c1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7efe4420c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7efe44203660" loc="44:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe44203660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe442039e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44203b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44203d00"/>
        <function-ref name="cancel" scoped="" ref="0x7efe441f7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe441f71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7efe441f7460" loc="46:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe441f7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe441f77e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe441f7970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe441f7b00"/>
        <function-ref name="cancel" scoped="" ref="0x7efe441f7c90"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe441f7e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efe441f60e0" loc="47:../../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestSerialAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe441f60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe441f6460"/>
        <function-ref name="source" scoped="" ref="0x7efe441f65f0"/>
        <function-ref name="address" scoped="" ref="0x7efe441f6780"/>
        <function-ref name="destination" scoped="" ref="0x7efe441f6910"/>
        <function-ref name="setSource" scoped="" ref="0x7efe441f6aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe441f6c30"/>
        <function-ref name="type" scoped="" ref="0x7efe441f6dc0"/>
        <function-ref name="setType" scoped="" ref="0x7efe441f5020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe441f51b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe441f5340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe441f54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe44c47940" loc="43:../../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe44c47940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44c47cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44c47e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44c44020"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44c441b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44c44340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7efe44bfa400" loc="48:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7efe44bfa400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44bfa7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44bfa930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44bfaac0"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44bfac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44bfade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7efe44bfb4b0" loc="46:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7efe44bfb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7efe44bfb850"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44bfb9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44bfbb70"/>
        <function-ref name="cancel" scoped="" ref="0x7efe44bfbd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7efe44bfa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7efe44bf7720" loc="50:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe44bf7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44bf7aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe44bf7c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44bf7dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44bf6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe44bf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7efe44bf6480" loc="169:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7efe44bf6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe44bf6800"/>
        <function-ref name="runTask" scoped="" ref="0x7efe44bf6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7efe44bf6c60" loc="126:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7efe44bf6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7efe44bf5020"/>
        <function-ref name="runTask" scoped="" ref="0x7efe44bf51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7efe44bf9060" loc="49:../../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe44bf9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe44bf93e0"/>
        <function-ref name="source" scoped="" ref="0x7efe44bf9570"/>
        <function-ref name="address" scoped="" ref="0x7efe44bf9700"/>
        <function-ref name="destination" scoped="" ref="0x7efe44bf9890"/>
        <function-ref name="setSource" scoped="" ref="0x7efe44bf9a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe44bf9bb0"/>
        <function-ref name="type" scoped="" ref="0x7efe44bf9d40"/>
        <function-ref name="setType" scoped="" ref="0x7efe44bf7020"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe44bf71b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe44bf7340"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe44bf74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7efe44be0640" loc="45:../../../../tos/system/TimerMilliC.nc">
      <component-ref qname="TestSerialAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7efe44be0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7efe46371020"/>
            <typename><typedef-ref name="TMilli" ref="0x7efe46371390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7efe44bdcc40"/>
        <function-ref name="fired" scoped="" ref="0x7efe44bdd1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7efe44bdc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7efe44bddae0"/>
        <function-ref name="getdt" scoped="" ref="0x7efe44bdb590"/>
        <function-ref name="gett0" scoped="" ref="0x7efe44bdb110"/>
        <function-ref name="isRunning" scoped="" ref="0x7efe44bdd660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7efe44bdf390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7efe44bdc630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7efe44bdf860"/>
        <function-ref name="stop" scoped="" ref="0x7efe44bdfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7efe44bd2970" loc="46:../../../../tos/system/AMReceiverC.nc">
      <component-ref qname="TestSerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7efe44bd2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7efe44bd2cf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7efe44bd2e80"/>
        <function-ref name="getPayload" scoped="" ref="0x7efe44bd1030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7efe44bd11c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7efe44bd1350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7efe44bd23a0" loc="45:../../../../tos/system/AMReceiverC.nc">
      <component-ref qname="TestSerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7efe44bd23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7efe44bd2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7efe44bd15a0" loc="47:../../../../tos/system/AMReceiverC.nc">
      <component-ref qname="TestSerialAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7efe44bd15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7efe44bd1920"/>
        <function-ref name="source" scoped="" ref="0x7efe44bd1ab0"/>
        <function-ref name="address" scoped="" ref="0x7efe44bd1c40"/>
        <function-ref name="destination" scoped="" ref="0x7efe44bd1dd0"/>
        <function-ref name="setSource" scoped="" ref="0x7efe44bd0020"/>
        <function-ref name="setDestination" scoped="" ref="0x7efe44bd01b0"/>
        <function-ref name="type" scoped="" ref="0x7efe44bd0340"/>
        <function-ref name="setType" scoped="" ref="0x7efe44bd04d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7efe44bd0660"/>
        <function-ref name="setGroup" scoped="" ref="0x7efe44bd07f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7efe44bd0980"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:../../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7efe4636b0b0" loc="113:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efe4636cdc0" loc="113:../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7efe4636a5c0" loc="138:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efe4636a340" loc="138:../../../../tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efe4636c3e0" loc="104:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efe4636b900" loc="130:../../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7efe4635a270" loc="60:../../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../../tos/interfaces/Packet.nc">
      <documentation loc="42:../../../../tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efe462fb550" loc="65:../../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe462fb2d0" loc="65:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7efe462fa5f0" loc="78:../../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe462fa370" loc="78:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efe462f7970" loc="126:../../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe462f7370" loc="126:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe462f76a0" loc="126:../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efe462f6a10" loc="106:../../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7efe462f9ab0" loc="94:../../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe462f94f0" loc="94:../../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe462f9820" loc="94:../../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../../tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x7efe4630a980" loc="78:../../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
              <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4630a020" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7efe4630a370" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe4630a6a0" loc="78:../../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efe46306b30" loc="80:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efe463061e0" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7efe46306560" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe46306890" loc="80:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efe46301620" loc="135:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe46301020" loc="135:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe46301350" loc="135:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efe463006d0" loc="123:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efe463042a0" loc="96:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe46304020" loc="96:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efe463037f0" loc="110:../../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe46303210" loc="110:../../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efe46303560" loc="110:../../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7efe46362020" loc="61:../../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7efe463627d0" loc="67:../../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7efe46361020" loc="72:../../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7efe46360020" loc="83:../../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7efe4635e7d0" loc="100:../../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efe4635d020" loc="117:../../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7efe463617b0" loc="77:../../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efe4635db90" loc="134:../../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7efe4635d910" loc="134:../../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7efe46363850" loc="56:../../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7efe46360800" loc="89:../../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7efe4635e020" loc="94:../../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe462f1020" loc="53:../../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe462f1020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efe462ebc50" loc="136:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efe462ef5b0" loc="83:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7efe462ec360" loc="114:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efe462edd60" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efe462ec0d0" loc="114:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7efe462ed5b0" loc="98:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7efe462eaca0" loc="151:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7efe462ea420" loc="144:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efe462efd90" loc="92:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7efe462f1b90" loc="64:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efe462f1910" loc="64:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7efe462eb2f0" loc="129:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efe462ecd00" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7efe462eb060" loc="129:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7efe462f0680" loc="73:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efe462f0400" loc="73:../../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efe462f0e80" loc="78:../../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7efe462d7040" loc="177:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efe4631d930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462dad90" loc="177:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7efe462e0bc0" loc="88:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462e0940" loc="88:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7efe462e2020" loc="68:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7efe462e2ae0" loc="78:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462e2860" loc="78:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7efe462dd600" loc="121:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462dd020" loc="121:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efe462dd370" loc="121:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7efe462e1020" loc="103:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462df9e0" loc="103:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7efe462dfd30" loc="103:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7efe462d9ae0" loc="147:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462d9860" loc="147:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7efe462d8e60" loc="162:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462d88b0" loc="162:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7efe462d8bd0" loc="162:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7efe4631d550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7efe462db890" loc="136:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462db610" loc="136:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7efe462d5600" loc="187:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efe4631d930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7efe462d5020" loc="187:../../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7efe462d5370" loc="187:../../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efe4631d930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7efe462d4490" loc="195:../../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efe4631d930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efe462a9e30" loc="44:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efe462a85c0" loc="45:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efe462a9020" loc="42:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efe462a6480" loc="47:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efe462a9720" loc="43:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efe462a8ce0" loc="46:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efe462aa120" loc="40:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efe462aa7f0" loc="41:../../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:../../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efe462ae5f0" loc="62:../../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7efe4627c190" loc="78:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7efe4627c8e0" loc="80:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7efe462772e0" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efe46277060" loc="110:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7efe4627e9c0" loc="58:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7efe4627b7d0" loc="87:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7efe46277bd0" loc="117:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7efe4627b070" loc="85:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efe4627d990" loc="73:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7efe46278020" loc="99:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7efe4627d190" loc="66:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efe46281ab0" loc="48:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7efe46279020" loc="92:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7efe46278790" loc="101:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7efe462797e0" loc="94:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7efe4627e270" loc="53:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7efe460a55b0" loc="48:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7efe460a8870" loc="43:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7efe460a6e60" loc="47:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7efe460a8190" loc="42:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7efe460a6020" loc="45:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7efe460a9350" loc="40:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7efe460a9a30" loc="41:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7efe460a6740" loc="46:../../../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7efe46487020" loc="62:../../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7efe4674cc00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7efe460532a0" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efe46053020" loc="55:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7efe460575d0" loc="42:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efe4609d180"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efe4609dbd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efe46053b10" loc="57:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7efe46052a00" loc="59:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7efe46055790" loc="47:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efe46052270" loc="58:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7efe46057d70" loc="43:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7efe46056540" loc="44:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7efe46055020" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efe4609d180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efe4609dbd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efe46056d10" loc="46:../../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7efe4609d180"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7efe4609dbd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efe46046270" loc="44:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7efe460438c0" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7efe46043640" loc="84:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efe460424e0" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efe46042260" loc="91:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efe46044e40" loc="73:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efe46044580" loc="68:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7efe46046c20" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7efe460469a0" loc="56:../../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7efe4604d560" loc="40:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7efe4604b020" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efe4604dc60" loc="41:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7efe4604ba00" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efe4604b780" loc="42:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7efe4604a410" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7efe4604a190" loc="43:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efe4604ab00" loc="45:../../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efe4605dad0" loc="52:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7efe4605a400" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7efe4605a180" loc="55:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7efe4605c270" loc="53:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7efe460a3d50" loc="45:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7efe4605c9b0" loc="54:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efe46060c50" loc="47:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efe4605d3e0" loc="51:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efe46060510" loc="46:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efe4605e390" loc="48:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7efe4605eca0" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efe4605ea20" loc="50:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7efe4605ae10" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7efe4605ab90" loc="56:../../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efe4601f9f0" loc="39:../../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7efe463aaa80" loc="85:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7efe463a91f0" loc="86:../../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7efe463aa2b0" loc="79:../../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7efe465c3810" loc="52:../../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7efe46805020" loc="57:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7efe46804020" loc="72:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7efe46805790" loc="65:../../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7efe467f9270" loc="67:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7efe467f9ac0" loc="75:../../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7efe45e66770" loc="59:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45e664f0" loc="59:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7efe45e64940" loc="71:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45e646c0" loc="71:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7efe45e62ab0" loc="85:../../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45e62830" loc="85:../../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efe45e562f0" loc="75:../../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45e59cd0" loc="75:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45e56060" loc="75:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7efe45e52890" loc="125:../../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45e52290" loc="125:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45e525c0" loc="125:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7efe45e519b0" loc="112:../../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efe45e555f0" loc="89:../../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45e55370" loc="89:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efe45e54ac0" loc="100:../../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45e544e0" loc="100:../../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efe45e54830" loc="100:../../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:../../../../tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7efe45df1670" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45df1060" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7efe45df13e0" loc="31:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7efe45df4820" loc="15:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7efe45df36d0" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:../../../../tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45df30d0" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7efe45df3440" loc="23:../../../../tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efe45dd7b60" loc="95:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efe45dd4390" loc="105:../../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:../../../../tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:../../../../tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7efe45dd21f0" loc="54:../../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:../../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7efe45dd6a20" loc="49:../../../../tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:../../../../tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:../../../../tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:../../../../tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7efe45de7c20" loc="56:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7efe45ddb0e0" loc="72:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7efe45ddad00" loc="94:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45ddaa80" loc="94:../../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7efe45ddb960" loc="79:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7efe45ddc7e0" loc="65:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45ddc560" loc="65:../../../../tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7efe45dd95b0" loc="100:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7efe45dda270" loc="85:../../../../tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:../../../../tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:../../../../tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:../../../../tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7efe45de4780" loc="71:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7efe45de30e0" loc="81:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7efe45de8d80" loc="62:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7efe45de8b00" loc="62:../../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7efe45de3c60" loc="91:../../../../tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:../../../../tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efe45de39e0" loc="91:../../../../tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:../../../../tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7efe45de18f0" loc="62:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7efe45de05b0" loc="69:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45de0330" loc="69:../../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7efe45ddf0b0" loc="80:../../../../tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:../../../../tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efe45de0e00" loc="80:../../../../tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:../../../../tos/interfaces/UartStream.nc">
      <documentation loc="32:../../../../tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efe45cacdd0" loc="48:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="39:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efe45cac800" loc="48:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45cacb40" loc="48:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7efe45ca5ac0" loc="79:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="74:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efe45ca5840" loc="79:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efe45ca4930" loc="90:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="81:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efe45ca4360" loc="90:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45ca46a0" loc="90:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7efe45ca6740" loc="65:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="59:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7efe45ca12c0" loc="99:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="92:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efe45ca2920" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45ca2c60" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efe45ca1020" loc="99:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7efe45ca5070" loc="72:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="67:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efe45ca8720" loc="57:../../../../tos/interfaces/UartStream.nc">
        <documentation loc="50:../../../../tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efe45ca9db0" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45ca8130" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efe45ca8480" loc="57:../../../../tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:../../../../tos/interfaces/UartByte.nc">
      <documentation loc="36:../../../../tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efe45c825b0" loc="50:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="43:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efe45c82330" loc="50:../../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7efe45c82df0" loc="59:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="52:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7efe45c81cf0" loc="69:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="61:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7efe45c81700" loc="69:../../../../tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7efe45c81a60" loc="69:../../../../tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7efe45c7fb50" loc="79:../../../../tos/interfaces/UartByte.nc">
        <documentation loc="71:../../../../tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7efe45c25270" loc="53:../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efe45c25ba0" loc="61:../../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:../../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7efe45c21070" loc="39:../../../../tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efe45c4a450"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efe45c4a870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efe45c299c0" loc="120:../../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7efe45c2a990" loc="97:../../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7efe45c2a020" loc="88:../../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efe45c291f0" loc="102:../../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efe45c28470" loc="128:../../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7efe45c1a510" loc="65:../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7efe45c1dcb0" loc="59:../../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7efe45c122a0" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45c12020" loc="54:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7efe45c13780" loc="49:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7efe45bedaf0" loc="213:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7efe45bf8790" loc="143:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7efe45c05530" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c793b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efe45c79bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efe45c052b0" loc="50:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c793b0"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7efe45c79bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7efe45bfb870" loc="123:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7efe45c02a40" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c74360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efe45c74ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efe45c027c0" loc="70:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c74360"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7efe45c74ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7efe45bf2e70" loc="180:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7efe45bee480" loc="197:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7efe45c02020" loc="65:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c77290"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7efe45c77a20"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7efe45c01270" loc="75:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c74360"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7efe45c74ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7efe45bfd020" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7efe45bfed30" loc="97:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7efe45bfe610" loc="95:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7efe45bf2740" loc="179:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7efe45c03780" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c77290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efe45c77a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7efe45c03500" loc="60:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c77290"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7efe45c77a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7efe45c00420" loc="85:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7efe45bf05d0" loc="181:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7efe45c00e00" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7efe45c00b80" loc="90:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7efe45bfc910" loc="113:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7efe45bfb0e0" loc="118:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7efe45bf3840" loc="177:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7efe45bf6790" loc="163:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7efe45bf97e0" loc="133:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7efe45bf2020" loc="178:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7efe45bf7020" loc="148:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7efe45bf0cf0" loc="182:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7efe45bfd800" loc="103:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7efe45c83330"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7efe45c7ba50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7efe45bef4c0" loc="187:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7efe45bed350" loc="207:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7efe45c01c10" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7efe45c01990" loc="80:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7efe45beb4d0" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45beb250" loc="224:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7efe45c05d10" loc="55:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7efe45c793b0"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7efe45c79bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7efe45bf9020" loc="128:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7efe45bf7770" loc="153:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7efe45bf3020" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efe45c4a450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efe45c4a870"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efe45bf4cf0" loc="174:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efe45c4a450"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7efe45c4a870"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7efe45bf42a0" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efe45c5d420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efe45c5d840"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efe45bf4020" loc="168:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efe45c5d420"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efe45c5d840"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7efe45bebd90" loc="231:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7efe45befcb0" loc="192:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7efe45bfc070" loc="108:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7efe45beebe0" loc="202:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7efe45bf6020" loc="158:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7efe45bf8020" loc="138:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe45be4410" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe45be4410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efe45be4650" loc="57:../../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe45be4650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efe45be3020" loc="64:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe45be4650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7efe45be1120" loc="76:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7efe45be38a0" loc="71:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7efe45be1880" loc="82:../../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7efe45b71860" loc="95:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efe45b700e0" loc="105:../../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7efe45ab0020" loc="90:../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7efe45ab0880" loc="98:../../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efe45a9a420" loc="39:../../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7efe45a812b0" loc="56:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7efe45a7f390" loc="73:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7efe45a849d0" loc="46:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7efe45a81b20" loc="65:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7efe45a7fcc0" loc="81:../../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7efe45a74540" loc="79:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efe45a7d5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efe45a742c0" loc="79:../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efe45a7d5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7efe45a76560" loc="53:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7efe45a750b0" loc="62:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efe45a7d5d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efe45a76de0" loc="62:../../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7efe45a7d5d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7efe45a759c0" loc="70:../../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7efe45a7d5d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7efe45a0adb0" loc="62:../../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7efe459aa790" loc="35:../../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe459aa790"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efe459aa9d0" loc="35:../../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe459aa9d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7efe459a5840" loc="63:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe459aa9d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459a55c0" loc="63:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7efe459a39d0" loc="70:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459a3750" loc="70:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7efe459a65f0" loc="49:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459a6370" loc="49:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efe459a1d00" loc="78:../../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe459aa9d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459a1710" loc="78:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7efe459a1a70" loc="78:../../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe459aa9d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7efe45996b50" loc="65:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45996530" loc="65:../../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7efe459968c0" loc="65:../../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7efe45993d00" loc="71:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45993a80" loc="71:../../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7efe45997c60" loc="57:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7efe459972a0" loc="52:../../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7efe45997020" loc="52:../../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7efe4596d980" loc="95:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4596d700" loc="95:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7efe4596fc30" loc="81:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4596f9b0" loc="81:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7efe45971350" loc="66:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7efe459710d0" loc="66:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7efe45972800" loc="60:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7efe45972580" loc="60:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7efe45971d80" loc="73:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7efe45971b00" loc="73:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7efe4596eb10" loc="88:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4596e890" loc="88:../../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7efe459602b0" loc="59:../../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7efe4596bc50" loc="59:../../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7efe45960020" loc="59:../../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7efe4597d810" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe4597d230" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7efe4597d580" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7efe45979e20" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe45979820" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7efe45979b90" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7efe4597c350" loc="64:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7efe46eaf110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe4597c0d0" loc="64:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7efe4597ad30" loc="75:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe4597aab0" loc="75:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7efe4597e9c0" loc="47:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe4597e740" loc="47:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7efe4597ce80" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe4597cc00" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7efe45964b30" loc="65:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459648b0" loc="65:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7efe45969bc0" loc="46:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459695a0" loc="46:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7efe45969930" loc="46:../../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7efe45966ad0" loc="59:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45966850" loc="59:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7efe45966020" loc="53:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459679c0" loc="53:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7efe45967d50" loc="53:../../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7efe45963b70" loc="71:../../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe459638f0" loc="71:../../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7efe45975780" loc="47:../../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45975500" loc="47:../../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efe4593c360" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe45945d30" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7efe4593c0d0" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efe4593b6a0" loc="65:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7efe45938e70" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efe45938060" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7efe459388a0" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45938bd0" loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efe45939840" loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7efe45939260" loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7efe459395b0" loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7efe4593cdf0" loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7efe4593cb70" loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7efe459340e0" loc="52:../../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7efe4593d870" loc="46:../../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7efe4592e2e0" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4592e020" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7efe4592f710" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7efe46356080"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7efe463559e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4592f410" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7efe4592d620" loc="53:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7efe46354510"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7efe46353dd0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4592d320" loc="53:../../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7efe45942070" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7efe4593f0e0" loc="97:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7efe459418f0" loc="90:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7efe45944730" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7efe459437e0" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7efe459428e0" loc="76:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7efe45941120" loc="83:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7efe45943020" loc="56:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7efe45928d00" loc="71:../../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7efe45929350" loc="56:../../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7efe45928530" loc="66:../../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7efe459282b0" loc="66:../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7efe45929ac0" loc="61:../../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7efe4592a020" loc="45:../../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7efe45931c90" loc="45:../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7efe4592aad0" loc="51:../../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7efe4592a850" loc="51:../../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7efe458cc870" loc="106:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7efe458cc290" loc="106:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7efe458cc5e0" loc="106:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7efe458cd1f0" loc="93:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7efe458cf880" loc="87:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7efe458cf210" loc="87:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7efe458cf5f0" loc="87:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7efe458d5c10" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7efe458d5990" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7efe458cda70" loc="98:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7efe458d1730" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7efe458d14b0" loc="72:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7efe458d4d30" loc="61:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7efe458d4ab0" loc="61:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7efe458cbae0" loc="117:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7efe458d09c0" loc="78:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7efe458d0740" loc="78:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7efe458cb2b0" loc="112:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7efe458d24d0" loc="66:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7efe45991020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7efe45991780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7efe458d2cc0" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7efe458d51f0" loc="54:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7efe458d4390" loc="60:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7efe458d0020" loc="77:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7efe458c94b0" loc="49:../../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efe458c94b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7efe458c9d70" loc="55:../../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efe458c5ae0" loc="63:../../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efe458c94b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7efe458c5530" loc="63:../../../../tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7efe458c5850" loc="63:../../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7efe458c94b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efe4589bc10" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efe46359260"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe4589b990" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efe4589a710" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efe46359260"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe4589a490" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7efe458bbc50" loc="48:../../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7efe45991020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7efe45991780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe458b7020" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe458b7020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efe458b7260" loc="56:../../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7efe458b3e00" loc="109:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efe458b6e40" loc="78:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7efe458b3460" loc="103:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7efe458b5e60" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
          </variable>
          <variable name="dt" ref="0x7efe458b31d0" loc="103:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7efe458b5640" loc="88:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7efe458b2620" loc="116:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7efe458b7dc0" loc="66:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efe458b7b40" loc="66:../../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe458b7260"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7efe458b6680" loc="73:../../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7efe458a4560" loc="50:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7efe458a34f0" loc="60:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7efe458a4d40" loc="55:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7efe4631d930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7efe458a5cd0" loc="45:../../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efe4631d930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7efe458a56f0" loc="45:../../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7efe4631d930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7efe458a5a40" loc="45:../../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7efe4631dd10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7efe45896e40" loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efe46359260"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efe458a0e80" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efe46359260"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efe458a0020" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7efe458a0890" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efe458a0be0" loc="52:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efe4589d610" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efe46359260"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7efe4589e770" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7efe4589d020" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efe4589d370" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7efe458a8c30" loc="68:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efe458a8470" loc="61:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7efe458a9ce0" loc="54:../../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7efe458a9420" loc="53:../../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7efe456e6020" loc="54:../../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efe456e51f0" loc="66:../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7efe456e69c0" loc="61:../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efe456e6740" loc="61:../../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7efe456e7770" loc="53:../../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7efe456c1020" loc="52:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7efe456bfac0" loc="72:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7efe456c27c0" loc="47:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7efe456bf2a0" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7efe456bf020" loc="67:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7efe456c2020" loc="42:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7efe456c1820" loc="59:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:../../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7efe455ae270" loc="24:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7efe455aeac0" loc="31:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7efe455ac350" loc="39:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7efe45586b60" loc="62:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45586580" loc="62:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efe455868d0" loc="62:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7efe45581dd0" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45581490" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efe455817e0" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efe45581b30" loc="91:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efe455836b0" loc="82:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efe46359260"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe455830d0" loc="82:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efe45583420" loc="82:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7efe45588730" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7efe46359260"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45588150" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efe455884a0" loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7efe455842c0" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe45585930" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7efe45585c80" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efe45584020" loc="71:../../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7efe45566df0" loc="76:../../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7efe45566480" loc="76:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7efe45566810" loc="76:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45566b50" loc="76:../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7efe455643c0" loc="88:../../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7efe455626a0" loc="88:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7efe45562a30" loc="88:../../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe45562d70" loc="88:../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7efe45564110" loc="89:../../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7efe4556ac90" loc="45:../../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7efe4556aa10" loc="45:../../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7efe454cf120" loc="39:../../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7efe45c5d420"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7efe45c5d840"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7efe454d7d60" loc="62:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe454d7ae0" loc="62:../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7efe454d22a0" loc="74:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe454d2020" loc="74:../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7efe454d3610" loc="68:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efe454d2d30" loc="81:../../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe454d2ab0" loc="81:../../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:../../../../tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7efe4542d9d0" loc="80:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7efe4543f420" loc="31:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7efe45434620" loc="62:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efe454343a0" loc="62:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7efe45448af0" loc="11:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7efe45431c50" loc="71:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7efe454395e0" loc="49:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7efe45440540" loc="28:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7efe4543e2d0" loc="34:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7efe45442500" loc="25:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7efe45442280" loc="25:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7efe45444a10" loc="21:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7efe4543b070" loc="41:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7efe45432550" loc="66:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7efe4542d270" loc="78:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7efe45435c30" loc="61:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7efe45428350" loc="91:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7efe454249d0" loc="100:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7efe45447980" loc="14:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7efe4543c8b0" loc="38:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7efe4543a1f0" loc="45:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7efe45442dc0" loc="27:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7efe454498c0" loc="7:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7efe45435460" loc="58:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7efe454351e0" loc="58:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7efe45449190" loc="6:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7efe454314d0" loc="69:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7efe4542c190" loc="81:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7efe45427b00" loc="94:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7efe45424270" loc="97:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7efe45430b90" loc="74:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7efe4542c8c0" loc="83:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7efe45434db0" loc="65:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7efe45429390" loc="87:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7efe454450e0" loc="15:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7efe454377e0" loc="53:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7efe4542b7b0" loc="86:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7efe4542eac0" loc="77:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7efe4543ade0" loc="46:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7efe4543ab60" loc="46:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7efe454262d0" loc="95:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7efe45436a60" loc="57:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7efe45430420" loc="72:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7efe45448390" loc="8:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efe45c36240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7efe45c36660"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7efe45448110" loc="8:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7efe45c36240"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7efe45c36660"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7efe4543c190" loc="37:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7efe454442a0" loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efe45444020" loc="19:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7efe4543b9d0" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7efe4543b750" loc="42:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7efe45429b60" loc="90:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7efe45443b50" loc="24:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7efe45445850" loc="18:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7efe454362a0" loc="54:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7efe45436020" loc="54:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7efe46eae520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7efe45447270" loc="12:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7efe4542b020" loc="84:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7efe4542e350" loc="75:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7efe45432cc0" loc="68:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7efe45437020" loc="50:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7efe45439d30" loc="50:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7efe4543e9f0" loc="35:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7efe45440c80" loc="29:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7efe45426a40" loc="96:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7efe454433c0" loc="22:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7efe45443140" loc="22:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7efe45428b10" loc="92:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7efe4543fb50" loc="32:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7efe45427350" loc="93:../../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efe451c75e0" loc="13:../../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7efe451c7360" loc="13:../../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7efe451b4b00" loc="10:../../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7efe451b41c0" loc="10:../../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7efe451b4530" loc="10:../../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe451b4860" loc="10:../../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7efe451b3880" loc="11:../../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7efe451b32c0" loc="11:../../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7efe451b35f0" loc="11:../../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe4519a530" loc="59:../../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe4519a530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7efe4519a770" loc="59:../../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe4519a770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7efe451992e0" loc="66:../../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe4519a770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7efe45199060" loc="66:../../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7efe4519a770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7efe45138580" loc="43:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7efe4510a9e0" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7efe4510a020" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7efe4510a750" loc="63:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7efe4510b7f0" loc="55:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7efe4510b020" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7efe4510ed30" loc="49:../../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7efe4511f2a0" loc="58:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7efe46eae160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4511f020" loc="58:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7efe451202a0" loc="50:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7efe46809090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe45120020" loc="50:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7efe4511d2a0" loc="72:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4511d020" loc="72:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7efe4511e2a0" loc="65:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7efe4511e020" loc="65:../../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7efe4630d080"/>
                <typename><typedef-ref name="message_t" ref="0x7efe4630c6a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7efe44fa7910" loc="53:../../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7efe44fa7910"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7efe44fa4270" loc="61:../../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7efe46eae920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7efe44e135e0" loc="53:../../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efe44e135e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7efe44e102a0" loc="64:../../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7efe46800c20"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efe44e135e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7efe44e10020" loc="64:../../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7efe44e135e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
